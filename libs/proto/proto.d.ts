// generated by Proto2Typescript. do not touch!

declare module dcodeIO {
    var ByteBuffer: any;
    module ProtoBuf {
        class Map<K,T> {
            forEach(cb: (value:T , key: K) => void, thisArgs?: any): void;
            get(id: K): T;
            clear(): void;
        }
    }
}

declare module pb {
	interface ProtoBufModel {
		toArrayBuffer(): ArrayBuffer;
		//toBuffer(): NodeBuffer;
		//encode(): ByteBuffer;
		toBase64(): string;
		toString(): string;
	}

	export interface ProtoBufBuilder {
		ComposeDataAck: ComposeDataAckBuilder;
		ErrorAck: ErrorAckBuilder;
		PropInfo: PropInfoBuilder;
		PropInfoF: PropInfoFBuilder;
		DragonUnit: DragonUnitBuilder;
		DragonInfo: DragonInfoBuilder;
		DragonTeamMember: DragonTeamMemberBuilder;
		DragonTeam: DragonTeamBuilder;
		TeamMemberUpdate: TeamMemberUpdateBuilder;
		DragonEnhance: DragonEnhanceBuilder;
		DragonEffect: DragonEffectBuilder;
		MonsterInfo: MonsterInfoBuilder;
		TeamMonster: TeamMonsterBuilder;
		WaveInfo: WaveInfoBuilder;
		StageInfo: StageInfoBuilder;
		ItemInfo: ItemInfoBuilder;
		ItemDeltaInfo: ItemDeltaInfoBuilder;
		Reward: RewardBuilder;
		Condition: ConditionBuilder;
		ConditionNtf: ConditionNtfBuilder;
		ConditionSub: ConditionSubBuilder;
		TaskDetail: TaskDetailBuilder;
		TaskInfo: TaskInfoBuilder;
		TaskInfosNtf: TaskInfosNtfBuilder;
		FinishTaskReq: FinishTaskReqBuilder;
		TaskUpdateUnit: TaskUpdateUnitBuilder;
		TaskUpdateNtf: TaskUpdateNtfBuilder;
		FinishTaskAck: FinishTaskAckBuilder;
		UserPTProfileRpt: UserPTProfileRptBuilder;
		HeadPicChangeReq: HeadPicChangeReqBuilder;
		HeadPicChangeAck: HeadPicChangeAckBuilder;
		LivenessNtf: LivenessNtfBuilder;
		LivenessAwardReq: LivenessAwardReqBuilder;
		LivenessAwardAck: LivenessAwardAckBuilder;
		GiftOpenNtf: GiftOpenNtfBuilder;
		DragonPiecesCombineReq: DragonPiecesCombineReqBuilder;
		DragonPiecesCombineAck: DragonPiecesCombineAckBuilder;
		ItemInfoProb: ItemInfoProbBuilder;
		WaveItem: WaveItemBuilder;
		Item: ItemBuilder;
		RefreshTicketRpt: RefreshTicketRptBuilder;
		UserSimpleInfo: UserSimpleInfoBuilder;
		ActivityBaseInfo: ActivityBaseInfoBuilder;
		ActivityLuckyTurntableTable: ActivityLuckyTurntableTableBuilder;
		ActivityMonthCardTable: ActivityMonthCardTableBuilder;
		HeroCompose: HeroComposeBuilder;
		ActivityHeroComposeFormula: ActivityHeroComposeFormulaBuilder;
		ActivityInfo: ActivityInfoBuilder;
		ActivityLoadReq: ActivityLoadReqBuilder;
		ActivityLoadAck: ActivityLoadAckBuilder;
		ActivityChangeNtf: ActivityChangeNtfBuilder;
		ActivityHeroComposeLoadReq: ActivityHeroComposeLoadReqBuilder;
		ActivityHeroComposeLoadAck: ActivityHeroComposeLoadAckBuilder;
		ActivityHeroComposeReq: ActivityHeroComposeReqBuilder;
		ActivityHeroComposeAck: ActivityHeroComposeAckBuilder;
		LuckyTurntableRecord: LuckyTurntableRecordBuilder;
		ActivityLuckyTurntableLoadReq: ActivityLuckyTurntableLoadReqBuilder;
		ActivityLuckyTurntableLoadAck: ActivityLuckyTurntableLoadAckBuilder;
		ActivityLuckyTurntableDoReq: ActivityLuckyTurntableDoReqBuilder;
		ActivityLuckyTurntableDoAck: ActivityLuckyTurntableDoAckBuilder;
		ActivityLuckyTurntableRecordNtf: ActivityLuckyTurntableRecordNtfBuilder;
		ActLuckyTurntableExtraAwardReq: ActLuckyTurntableExtraAwardReqBuilder;
		ActLuckyTurntableExtraAwardAck: ActLuckyTurntableExtraAwardAckBuilder;
		AdExtraAwardReq: AdExtraAwardReqBuilder;
		AdExtraAwardAck: AdExtraAwardAckBuilder;
		AdjutantsNtf: AdjutantsNtfBuilder;
		GainProp: GainPropBuilder;
		AdjutantInfo: AdjutantInfoBuilder;
		AdjutantLvlUpReq: AdjutantLvlUpReqBuilder;
		AdjutantLvlUpAck: AdjutantLvlUpAckBuilder;
		SetAdjutantReq: SetAdjutantReqBuilder;
		SetAdjutantAck: SetAdjutantAckBuilder;
		UnlockAdjutantReq: UnlockAdjutantReqBuilder;
		UnlockAdjutantAck: UnlockAdjutantAckBuilder;
		ArenaBriefUserInfo: ArenaBriefUserInfoBuilder;
		ArenaLoadReq: ArenaLoadReqBuilder;
		ArenaLoadAck: ArenaLoadAckBuilder;
		ArenaGetUserReq: ArenaGetUserReqBuilder;
		ArenaGetUserAck: ArenaGetUserAckBuilder;
		ArenaGetRankReq: ArenaGetRankReqBuilder;
		ArenaGetRankAck: ArenaGetRankAckBuilder;
		ArenaNewRankNtf: ArenaNewRankNtfBuilder;
		ArenaBeginReq: ArenaBeginReqBuilder;
		ArenaBeginAck: ArenaBeginAckBuilder;
		ArenaEndReq: ArenaEndReqBuilder;
		ArenaEndAck: ArenaEndAckBuilder;
		ArenaCheckReq: ArenaCheckReqBuilder;
		ArenaCheckAck: ArenaCheckAckBuilder;
		ArenaGetFormatReq: ArenaGetFormatReqBuilder;
		ArenaGetFormatAck: ArenaGetFormatAckBuilder;
		ArenaRecordInfo: ArenaRecordInfoBuilder;
		ArenaLoadRecordReq: ArenaLoadRecordReqBuilder;
		ArenaLoadRecordAck: ArenaLoadRecordAckBuilder;
		ArenaRankAwardReq: ArenaRankAwardReqBuilder;
		ArenaRankAwardAck: ArenaRankAwardAckBuilder;
		ArenaChallengeAwardReq: ArenaChallengeAwardReqBuilder;
		ArenaChallengeAwardAck: ArenaChallengeAwardAckBuilder;
		ArenaEnemyNtf: ArenaEnemyNtfBuilder;
		ArenaInfoNtf: ArenaInfoNtfBuilder;
		EnterCopyReq: EnterCopyReqBuilder;
		EnterCopyAck: EnterCopyAckBuilder;
		StageEndRpt: StageEndRptBuilder;
		StageEndNtf: StageEndNtfBuilder;
		StageBreakReq: StageBreakReqBuilder;
		StageBreakAck: StageBreakAckBuilder;
		StageNtf: StageNtfBuilder;
		RegressRewardReq: RegressRewardReqBuilder;
		RegressRewardAck: RegressRewardAckBuilder;
		RegressReq: RegressReqBuilder;
		RegressAck: RegressAckBuilder;
		RegressResetReq: RegressResetReqBuilder;
		RegressResetAck: RegressResetAckBuilder;
		StageAwardBoxNtf: StageAwardBoxNtfBuilder;
		GainBoxReq: GainBoxReqBuilder;
		GainBoxAck: GainBoxAckBuilder;
		TicketInfo: TicketInfoBuilder;
		TicketsInfoNtf: TicketsInfoNtfBuilder;
		DailyBossInfoReq: DailyBossInfoReqBuilder;
		DailyBossInfoAck: DailyBossInfoAckBuilder;
		DailyBossEnterReq: DailyBossEnterReqBuilder;
		DailyBossEnterAck: DailyBossEnterAckBuilder;
		DailyBossBattleFinishReq: DailyBossBattleFinishReqBuilder;
		DailyBossBattleFinishAck: DailyBossBattleFinishAckBuilder;
		DailyBossBattleRewardReq: DailyBossBattleRewardReqBuilder;
		DailyBossBattleRewardAck: DailyBossBattleRewardAckBuilder;
		TicketBuyReq: TicketBuyReqBuilder;
		TicketBuyAck: TicketBuyAckBuilder;
		TicketNtf: TicketNtfBuilder;
		ResearchTicketADCountNtf: ResearchTicketADCountNtfBuilder;
		LegendaryBossInfoReq: LegendaryBossInfoReqBuilder;
		LegendaryBossInfoAck: LegendaryBossInfoAckBuilder;
		LegendaryBossEnterReq: LegendaryBossEnterReqBuilder;
		LegendaryBossEnterAck: LegendaryBossEnterAckBuilder;
		LegendaryBossBattleFinishReq: LegendaryBossBattleFinishReqBuilder;
		LegendaryBossBattleFinishAck: LegendaryBossBattleFinishAckBuilder;
		LegendaryBossBattleRewardReq: LegendaryBossBattleRewardReqBuilder;
		LegendaryBossBattleRewardAck: LegendaryBossBattleRewardAckBuilder;
		LegendrayBossNextInfoReq: LegendrayBossNextInfoReqBuilder;
		LegendrayBossNextInfoAck: LegendrayBossNextInfoAckBuilder;
		LegendaryBossDamageRankReq: LegendaryBossDamageRankReqBuilder;
		LegendaryBossRankInfo: LegendaryBossRankInfoBuilder;
		LegendaryBossDamageRankAck: LegendaryBossDamageRankAckBuilder;
		BoxRewardInfoNtf: BoxRewardInfoNtfBuilder;
		BoxRewardRefreshRpt: BoxRewardRefreshRptBuilder;
		BoxRewardReq: BoxRewardReqBuilder;
		BoxRewardAck: BoxRewardAckBuilder;
		ChatRpt: ChatRptBuilder;
		ChatBriefUserInfo: ChatBriefUserInfoBuilder;
		ChatMessageNtf: ChatMessageNtfBuilder;
		ChatSendReq: ChatSendReqBuilder;
		ChatSendAck: ChatSendAckBuilder;
		ChatLoadReq: ChatLoadReqBuilder;
		ChatLoadAck: ChatLoadAckBuilder;
		DragonHatchReq: DragonHatchReqBuilder;
		DragonHatchAck: DragonHatchAckBuilder;
		EggBornRpt: EggBornRptBuilder;
		DragonBornNtf: DragonBornNtfBuilder;
		DragonNtf: DragonNtfBuilder;
		EggNtf: EggNtfBuilder;
		EggSpeedReq: EggSpeedReqBuilder;
		EggSpeedAck: EggSpeedAckBuilder;
		AutoPlayReq: AutoPlayReqBuilder;
		AutoPlayTimeAddRpt: AutoPlayTimeAddRptBuilder;
		EggSpeedNtf: EggSpeedNtfBuilder;
		DragonFuseReq: DragonFuseReqBuilder;
		DragonFuseAppendReq: DragonFuseAppendReqBuilder;
		DragonFuseAppendAck: DragonFuseAppendAckBuilder;
		DragonFuseAck: DragonFuseAckBuilder;
		DragonPos: DragonPosBuilder;
		DragonPosRpt: DragonPosRptBuilder;
		GiveupVarRpt: GiveupVarRptBuilder;
		TeamSize: TeamSizeBuilder;
		TeamSizeNtf: TeamSizeNtfBuilder;
		DragonLvlUpReq: DragonLvlUpReqBuilder;
		DragonUpgradeReq: DragonUpgradeReqBuilder;
		DragonUpgradeAck: DragonUpgradeAckBuilder;
		DragonEnhanceReq: DragonEnhanceReqBuilder;
		DragonEnhanceAck: DragonEnhanceAckBuilder;
		DragonDetailReq: DragonDetailReqBuilder;
		DragonDetailAck: DragonDetailAckBuilder;
		SetTeamReq: SetTeamReqBuilder;
		SetTeamAck: SetTeamAckBuilder;
		DragonLvlCfgNtf: DragonLvlCfgNtfBuilder;
		DragonEnhanceCostCfg: DragonEnhanceCostCfgBuilder;
		DragonEnhanceCfgNtf: DragonEnhanceCfgNtfBuilder;
		DragonConfigReq: DragonConfigReqBuilder;
		DragonConfigAck: DragonConfigAckBuilder;
		GeneralDragonCfgReq: GeneralDragonCfgReqBuilder;
		GeneralDragonCfgAck: GeneralDragonCfgAckBuilder;
		RecoverDragon: RecoverDragonBuilder;
		RecoverDragonsReq: RecoverDragonsReqBuilder;
		RecoverDragonsAck: RecoverDragonsAckBuilder;
		PreRecoverDragonsReq: PreRecoverDragonsReqBuilder;
		PreRecoverDragonsAck: PreRecoverDragonsAckBuilder;
		GeneagentItemInfo: GeneagentItemInfoBuilder;
		EnterGeneagentReq: EnterGeneagentReqBuilder;
		EnterGeneagentAck: EnterGeneagentAckBuilder;
		GeneagentNtf: GeneagentNtfBuilder;
		EnterGeneagentBuyOneReq: EnterGeneagentBuyOneReqBuilder;
		EnterGeneagentBuyOneAck: EnterGeneagentBuyOneAckBuilder;
		EnterGeneagentBuyAllReq: EnterGeneagentBuyAllReqBuilder;
		EnterGeneagentBuyAllAck: EnterGeneagentBuyAllAckBuilder;
		EnterGeneagentResearchReq: EnterGeneagentResearchReqBuilder;
		EnterGeneagentResearchAck: EnterGeneagentResearchAckBuilder;
		BuyGeneagentTicketReq: BuyGeneagentTicketReqBuilder;
		BuyGeneagentTicketAck: BuyGeneagentTicketAckBuilder;
		OpenGeneagenItemInfo: OpenGeneagenItemInfoBuilder;
		OpenGeneagentReq: OpenGeneagentReqBuilder;
		OpenGeneagentAck: OpenGeneagentAckBuilder;
		LeveupGeneagentReq: LeveupGeneagentReqBuilder;
		LeveupGeneagentAck: LeveupGeneagentAckBuilder;
		ServerInfo: ServerInfoBuilder;
		LoginReq: LoginReqBuilder;
		LoginAck: LoginAckBuilder;
		GetServerListReq: GetServerListReqBuilder;
		GetServerListAck: GetServerListAckBuilder;
		GetServerAddrReq: GetServerAddrReqBuilder;
		GetServerAddrAck: GetServerAddrAckBuilder;
		ReportReq: ReportReqBuilder;
		ReportAck: ReportAckBuilder;
		EnterGameReq: EnterGameReqBuilder;
		CreateUserReq: CreateUserReqBuilder;
		CreateUserAck: CreateUserAckBuilder;
		FirstEnterRpt: FirstEnterRptBuilder;
		GetGameDataRpt: GetGameDataRptBuilder;
		GetGameDataNtf: GetGameDataNtfBuilder;
		EnterGameAck: EnterGameAckBuilder;
		UserPTProfile: UserPTProfileBuilder;
		UserInfoNtf: UserInfoNtfBuilder;
		ItemInfosNtf: ItemInfosNtfBuilder;
		ItemsShowUnit: ItemsShowUnitBuilder;
		ItemsShowNtf: ItemsShowNtfBuilder;
		TeamNtf: TeamNtfBuilder;
		BreaksInfoNtf: BreaksInfoNtfBuilder;
		GetUserLevelRewardReq: GetUserLevelRewardReqBuilder;
		GetUserLevelRewardAck: GetUserLevelRewardAckBuilder;
		UserChangeNameReq: UserChangeNameReqBuilder;
		UserChangeNameAck: UserChangeNameAckBuilder;
		KickUserNtf: KickUserNtfBuilder;
		ClientLogRpt: ClientLogRptBuilder;
		UserHitPointRpt: UserHitPointRptBuilder;
		ServerTimeNtf: ServerTimeNtfBuilder;
		UserVarNtf: UserVarNtfBuilder;
		GetUserRandomNameReq: GetUserRandomNameReqBuilder;
		GetUserRandomNameAck: GetUserRandomNameAckBuilder;
		GetCopyStartStageReq: GetCopyStartStageReqBuilder;
		GetCopyStartStageAck: GetCopyStartStageAckBuilder;
		mailInfo: mailInfoBuilder;
		MailReadReq: MailReadReqBuilder;
		MailReadAck: MailReadAckBuilder;
		MailRedeemReq: MailRedeemReqBuilder;
		MailRedeemAck: MailRedeemAckBuilder;
		MailLoadReq: MailLoadReqBuilder;
		MailLoadAck: MailLoadAckBuilder;
		MailDeleteReq: MailDeleteReqBuilder;
		MailDeleteAck: MailDeleteAckBuilder;
		MailNewNtf: MailNewNtfBuilder;
		MonthCardInfo: MonthCardInfoBuilder;
		MonthCardLoadReq: MonthCardLoadReqBuilder;
		MonthCardLoadAck: MonthCardLoadAckBuilder;
		MonthCardRedeemReq: MonthCardRedeemReqBuilder;
		MonthCardRedeemAck: MonthCardRedeemAckBuilder;
		MonthCardChangedNtf: MonthCardChangedNtfBuilder;
		MonthCardBuyReq: MonthCardBuyReqBuilder;
		MonthCardBuyAck: MonthCardBuyAckBuilder;
		GameMsgNtf: GameMsgNtfBuilder;
		SystemMsgNtf: SystemMsgNtfBuilder;
		SystemMsgNotice: SystemMsgNoticeBuilder;
		SystemMsgNoticeNtf: SystemMsgNoticeNtfBuilder;
		NoviceGiftNtf: NoviceGiftNtfBuilder;
		NoviceGiftAwardReq: NoviceGiftAwardReqBuilder;
		NoviceGiftAwardAck: NoviceGiftAwardAckBuilder;
		OfflineRewardNtf: OfflineRewardNtfBuilder;
		OnlineRewardData: OnlineRewardDataBuilder;
		OnlineRewardNtf: OnlineRewardNtfBuilder;
		GetOnlineRewardReq: GetOnlineRewardReqBuilder;
		GetOnlineRewardAck: GetOnlineRewardAckBuilder;
		OnlineAdNtf: OnlineAdNtfBuilder;
		GetOnlineAdRewardReq: GetOnlineAdRewardReqBuilder;
		GetOnlineAdRewardAck: GetOnlineAdRewardAckBuilder;
		OnlineADRewardNtf: OnlineADRewardNtfBuilder;
		PreferenceEntry: PreferenceEntryBuilder;
		PreferenceSetReq: PreferenceSetReqBuilder;
		PreferenceSetAck: PreferenceSetAckBuilder;
		PreferenceLoadReq: PreferenceLoadReqBuilder;
		PreferenceLoadAck: PreferenceLoadAckBuilder;
		UserRankInfoReq: UserRankInfoReqBuilder;
		UserRankInfo: UserRankInfoBuilder;
		UserRankInfoAck: UserRankInfoAckBuilder;
		UserRankGapNtf: UserRankGapNtfBuilder;
		DragonCost: DragonCostBuilder;
		DragonEnhanceCostNtf: DragonEnhanceCostNtfBuilder;
		ResearchDragon: ResearchDragonBuilder;
		ResearchDragonsReq: ResearchDragonsReqBuilder;
		ResearchDragonsAck: ResearchDragonsAckBuilder;
		ResearchBuyDragonReq: ResearchBuyDragonReqBuilder;
		ResearchBuyDragonAck: ResearchBuyDragonAckBuilder;
		ResearchRefreshDragonReq: ResearchRefreshDragonReqBuilder;
		ResearchRefreshDragonAck: ResearchRefreshDragonAckBuilder;
		ResearchBuyDragonTicketReq: ResearchBuyDragonTicketReqBuilder;
		ResearchBuyDragonTicketAck: ResearchBuyDragonTicketAckBuilder;
		ResearchTimeNtf: ResearchTimeNtfBuilder;
		ResearchInstitueInfo: ResearchInstitueInfoBuilder;
		ResearchInstitueInfoReq: ResearchInstitueInfoReqBuilder;
		ResearchInstitueInfoAck: ResearchInstitueInfoAckBuilder;
		UnlockResearchInstitueLevelupReq: UnlockResearchInstitueLevelupReqBuilder;
		UnlockResearchInstitueLevelupAck: UnlockResearchInstitueLevelupAckBuilder;
		ResearchInstFuncNtf: ResearchInstFuncNtfBuilder;
		SDKAwardEntry: SDKAwardEntryBuilder;
		SDKAwardRpt: SDKAwardRptBuilder;
		SDKAwardNtf: SDKAwardNtfBuilder;
		SevenDayReq: SevenDayReqBuilder;
		SevenDayAck: SevenDayAckBuilder;
		SevenDayList: SevenDayListBuilder;
		SevenDayRewardReq: SevenDayRewardReqBuilder;
		SevenDayRewardAck: SevenDayRewardAckBuilder;
		SevenDayNtf: SevenDayNtfBuilder;
		SevenDayNtfs: SevenDayNtfsBuilder;
		ShopBoughtInfo: ShopBoughtInfoBuilder;
		PurchaseItemReq: PurchaseItemReqBuilder;
		PurchaseItemAck: PurchaseItemAckBuilder;
		ShopReq: ShopReqBuilder;
		ShopAck: ShopAckBuilder;
		ShopBoughtInfosNtf: ShopBoughtInfosNtfBuilder;
		ShopBoughtInfoNtf: ShopBoughtInfoNtfBuilder;
		ShopInfo: ShopInfoBuilder;
		ShopConfiReq: ShopConfiReqBuilder;
		ShopConfiAck: ShopConfiAckBuilder;
		OpenFirstBuyRpt: OpenFirstBuyRptBuilder;
		LimitTimeBuyInfo: LimitTimeBuyInfoBuilder;
		LimitTimeBuyItemNtf: LimitTimeBuyItemNtfBuilder;
		LimitTimeBuyItemReq: LimitTimeBuyItemReqBuilder;
		LimitTimeBuyItemAck: LimitTimeBuyItemAckBuilder;
		VipGiftRewardNtf: VipGiftRewardNtfBuilder;
		VipGiftRewardReq: VipGiftRewardReqBuilder;
		VipGiftRewardAck: VipGiftRewardAckBuilder;
		VipGiftDailyRewardReq: VipGiftDailyRewardReqBuilder;
		VipGiftDailyRewardAck: VipGiftDailyRewardAckBuilder;
		
	}
	export var idMap: any;
	export var nameMap: any;
}

declare module pb {

	var ComposeDataAck: ComposeDataAck;
	export interface ComposeDataAck extends ProtoBufModel {
		new(obj?: any): ComposeDataAck;
		idx?: number;
		data?: ByteBuffer;
		
	}

	export interface ComposeDataAckBuilder {
		new(): ComposeDataAck;
		decode(buffer: ArrayBuffer) : ComposeDataAck;
		//decode(buffer: NodeBuffer) : ComposeDataAck;
		//decode(buffer: ByteArrayBuffer) : ComposeDataAck;
		decode64(buffer: string) : ComposeDataAck;
		
	}
}


declare module pb {

	var ErrorAck: ErrorAck;
	export interface ErrorAck extends ProtoBufModel {
		new(obj?: any): ErrorAck;
		code?: number;
		message?: string;
		
	}

	export interface ErrorAckBuilder {
		new(): ErrorAck;
		decode(buffer: ArrayBuffer) : ErrorAck;
		//decode(buffer: NodeBuffer) : ErrorAck;
		//decode(buffer: ByteArrayBuffer) : ErrorAck;
		decode64(buffer: string) : ErrorAck;
		
	}
}


declare module pb {

	var PropInfo: PropInfo;
	export interface PropInfo extends ProtoBufModel {
		new(obj?: any): PropInfo;
		key?: number;
		value?: number;
		
	}

	export interface PropInfoBuilder {
		new(): PropInfo;
		decode(buffer: ArrayBuffer) : PropInfo;
		//decode(buffer: NodeBuffer) : PropInfo;
		//decode(buffer: ByteArrayBuffer) : PropInfo;
		decode64(buffer: string) : PropInfo;
		
	}
}


declare module pb {

	var PropInfoF: PropInfoF;
	export interface PropInfoF extends ProtoBufModel {
		new(obj?: any): PropInfoF;
		key?: number;
		value?: number;
		
	}

	export interface PropInfoFBuilder {
		new(): PropInfoF;
		decode(buffer: ArrayBuffer) : PropInfoF;
		//decode(buffer: NodeBuffer) : PropInfoF;
		//decode(buffer: ByteArrayBuffer) : PropInfoF;
		decode64(buffer: string) : PropInfoF;
		
	}
}


declare module pb {

	var DragonUnit: DragonUnit;
	export interface DragonUnit extends ProtoBufModel {
		new(obj?: any): DragonUnit;
		star?: number;
		num?: number;
		combat?: number;
		props: dcodeIO.ProtoBuf.Map<number,number>;
		skills: number[];
		
	}

	export interface DragonUnitBuilder {
		new(): DragonUnit;
		decode(buffer: ArrayBuffer) : DragonUnit;
		//decode(buffer: NodeBuffer) : DragonUnit;
		//decode(buffer: ByteArrayBuffer) : DragonUnit;
		decode64(buffer: string) : DragonUnit;
		
	}
}


declare module pb {

	var DragonInfo: DragonInfo;
	export interface DragonInfo extends ProtoBufModel {
		new(obj?: any): DragonInfo;
		index?: number;
		exp?: number;
		lvl?: number;
		combat?: number;
		enhanceLvls?: number;
		effectDesc?: string;
		units: DragonUnit[];
		lvUpCost?: number;
		
	}

	export interface DragonInfoBuilder {
		new(): DragonInfo;
		decode(buffer: ArrayBuffer) : DragonInfo;
		//decode(buffer: NodeBuffer) : DragonInfo;
		//decode(buffer: ByteArrayBuffer) : DragonInfo;
		decode64(buffer: string) : DragonInfo;
		
	}
}


declare module pb {

	var DragonTeamMember: DragonTeamMember;
	export interface DragonTeamMember extends ProtoBufModel {
		new(obj?: any): DragonTeamMember;
		id?: number;
		index?: number;
		star?: number;
		posX?: number;
		posY?: number;
		props: dcodeIO.ProtoBuf.Map<number,number>;
		skills: number[];
		combat?: number;
		
	}

	export interface DragonTeamMemberBuilder {
		new(): DragonTeamMember;
		decode(buffer: ArrayBuffer) : DragonTeamMember;
		//decode(buffer: NodeBuffer) : DragonTeamMember;
		//decode(buffer: ByteArrayBuffer) : DragonTeamMember;
		decode64(buffer: string) : DragonTeamMember;
		
	}
}


declare module pb {

	var DragonTeam: DragonTeam;
	export interface DragonTeam extends ProtoBufModel {
		new(obj?: any): DragonTeam;
		teamType?: number;
		combat?: number;
		members: DragonTeamMember[];
		
	}

	export interface DragonTeamBuilder {
		new(): DragonTeam;
		decode(buffer: ArrayBuffer) : DragonTeam;
		//decode(buffer: NodeBuffer) : DragonTeam;
		//decode(buffer: ByteArrayBuffer) : DragonTeam;
		decode64(buffer: string) : DragonTeam;
		
	}
}


declare module pb {

	var TeamMemberUpdate: TeamMemberUpdate;
	export interface TeamMemberUpdate extends ProtoBufModel {
		new(obj?: any): TeamMemberUpdate;
		teamType?: number;
		teamMember?: DragonTeamMember;
		
	}

	export interface TeamMemberUpdateBuilder {
		new(): TeamMemberUpdate;
		decode(buffer: ArrayBuffer) : TeamMemberUpdate;
		//decode(buffer: NodeBuffer) : TeamMemberUpdate;
		//decode(buffer: ByteArrayBuffer) : TeamMemberUpdate;
		decode64(buffer: string) : TeamMemberUpdate;
		
	}
}


declare module pb {

	var DragonEnhance: DragonEnhance;
	export interface DragonEnhance extends ProtoBufModel {
		new(obj?: any): DragonEnhance;
		id?: number;
		lvl?: number;
		unlockStar?: number;
		desc?: string;
		curRatio?: number;
		nextRatio?: number;
		curPlus?: number;
		nextPlus?: number;
		cost?: ItemInfo;
		
	}

	export interface DragonEnhanceBuilder {
		new(): DragonEnhance;
		decode(buffer: ArrayBuffer) : DragonEnhance;
		//decode(buffer: NodeBuffer) : DragonEnhance;
		//decode(buffer: ByteArrayBuffer) : DragonEnhance;
		decode64(buffer: string) : DragonEnhance;
		
	}
}


declare module pb {

	var DragonEffect: DragonEffect;
	export interface DragonEffect extends ProtoBufModel {
		new(obj?: any): DragonEffect;
		desc?: string;
		
	}

	export interface DragonEffectBuilder {
		new(): DragonEffect;
		decode(buffer: ArrayBuffer) : DragonEffect;
		//decode(buffer: NodeBuffer) : DragonEffect;
		//decode(buffer: ByteArrayBuffer) : DragonEffect;
		decode64(buffer: string) : DragonEffect;
		
	}
}


declare module pb {

	var MonsterInfo: MonsterInfo;
	export interface MonsterInfo extends ProtoBufModel {
		new(obj?: any): MonsterInfo;
		index?: number;
		model?: string;
		props: dcodeIO.ProtoBuf.Map<number,number>;
		
	}

	export interface MonsterInfoBuilder {
		new(): MonsterInfo;
		decode(buffer: ArrayBuffer) : MonsterInfo;
		//decode(buffer: NodeBuffer) : MonsterInfo;
		//decode(buffer: ByteArrayBuffer) : MonsterInfo;
		decode64(buffer: string) : MonsterInfo;
		
	}
}


declare module pb {

	var TeamMonster: TeamMonster;
	export interface TeamMonster extends ProtoBufModel {
		new(obj?: any): TeamMonster;
		MonsterProps: PropInfo[];
		
	}

	export interface TeamMonsterBuilder {
		new(): TeamMonster;
		decode(buffer: ArrayBuffer) : TeamMonster;
		//decode(buffer: NodeBuffer) : TeamMonster;
		//decode(buffer: ByteArrayBuffer) : TeamMonster;
		decode64(buffer: string) : TeamMonster;
		
	}
}


declare module pb {

	var WaveInfo: WaveInfo;
	export interface WaveInfo extends ProtoBufModel {
		new(obj?: any): WaveInfo;
		monsters: TeamMonster[];
		
	}

	export interface WaveInfoBuilder {
		new(): WaveInfo;
		decode(buffer: ArrayBuffer) : WaveInfo;
		//decode(buffer: NodeBuffer) : WaveInfo;
		//decode(buffer: ByteArrayBuffer) : WaveInfo;
		decode64(buffer: string) : WaveInfo;
		
	}
}


declare module pb {

	var StageInfo: StageInfo;
	export interface StageInfo extends ProtoBufModel {
		new(obj?: any): StageInfo;
		index?: number;
		waves: WaveInfo[];
		monsters: MonsterInfo[];
		isStop?: number;
		
	}

	export interface StageInfoBuilder {
		new(): StageInfo;
		decode(buffer: ArrayBuffer) : StageInfo;
		//decode(buffer: NodeBuffer) : StageInfo;
		//decode(buffer: ByteArrayBuffer) : StageInfo;
		decode64(buffer: string) : StageInfo;
		
	}
}


declare module pb {

	var ItemInfo: ItemInfo;
	export interface ItemInfo extends ProtoBufModel {
		new(obj?: any): ItemInfo;
		index?: number;
		num?: number;
		delta?: number;
		tag?: number;
		
	}

	export interface ItemInfoBuilder {
		new(): ItemInfo;
		decode(buffer: ArrayBuffer) : ItemInfo;
		//decode(buffer: NodeBuffer) : ItemInfo;
		//decode(buffer: ByteArrayBuffer) : ItemInfo;
		decode64(buffer: string) : ItemInfo;
		
	}
}


declare module pb {

	var ItemDeltaInfo: ItemDeltaInfo;
	export interface ItemDeltaInfo extends ProtoBufModel {
		new(obj?: any): ItemDeltaInfo;
		index?: number;
		delta?: number;
		
	}

	export interface ItemDeltaInfoBuilder {
		new(): ItemDeltaInfo;
		decode(buffer: ArrayBuffer) : ItemDeltaInfo;
		//decode(buffer: NodeBuffer) : ItemDeltaInfo;
		//decode(buffer: ByteArrayBuffer) : ItemDeltaInfo;
		decode64(buffer: string) : ItemDeltaInfo;
		
	}
}


declare module pb {

	var Reward: Reward;
	export interface Reward extends ProtoBufModel {
		new(obj?: any): Reward;
		items: ItemDeltaInfo[];
		
	}

	export interface RewardBuilder {
		new(): Reward;
		decode(buffer: ArrayBuffer) : Reward;
		//decode(buffer: NodeBuffer) : Reward;
		//decode(buffer: ByteArrayBuffer) : Reward;
		decode64(buffer: string) : Reward;
		
	}
}


declare module pb {

	var Condition: Condition;
	export interface Condition extends ProtoBufModel {
		new(obj?: any): Condition;
		k?: number;
		v?: number;
		subs: dcodeIO.ProtoBuf.Map<number,number>;
		
	}

	export interface ConditionBuilder {
		new(): Condition;
		decode(buffer: ArrayBuffer) : Condition;
		//decode(buffer: NodeBuffer) : Condition;
		//decode(buffer: ByteArrayBuffer) : Condition;
		decode64(buffer: string) : Condition;
		
	}
}


declare module pb {

	var ConditionNtf: ConditionNtf;
	export interface ConditionNtf extends ProtoBufModel {
		new(obj?: any): ConditionNtf;
		monolayers: dcodeIO.ProtoBuf.Map<number,number>;
		bilayers: dcodeIO.ProtoBuf.Map<number,ConditionSub>;
		
	}

	export interface ConditionNtfBuilder {
		new(): ConditionNtf;
		decode(buffer: ArrayBuffer) : ConditionNtf;
		//decode(buffer: NodeBuffer) : ConditionNtf;
		//decode(buffer: ByteArrayBuffer) : ConditionNtf;
		decode64(buffer: string) : ConditionNtf;
		
	}
}


declare module pb {

	var ConditionSub: ConditionSub;
	export interface ConditionSub extends ProtoBufModel {
		new(obj?: any): ConditionSub;
		values: dcodeIO.ProtoBuf.Map<number,number>;
		
	}

	export interface ConditionSubBuilder {
		new(): ConditionSub;
		decode(buffer: ArrayBuffer) : ConditionSub;
		//decode(buffer: NodeBuffer) : ConditionSub;
		//decode(buffer: ByteArrayBuffer) : ConditionSub;
		decode64(buffer: string) : ConditionSub;
		
	}
}


declare module pb {

	var TaskDetail: TaskDetail;
	export interface TaskDetail extends ProtoBufModel {
		new(obj?: any): TaskDetail;
		name?: string;
		note?: string;
		awards?: Reward;
		condition?: Condition;
		openCondition?: Condition;
		linkTo: number[];
		liveness?: number;
		
	}

	export interface TaskDetailBuilder {
		new(): TaskDetail;
		decode(buffer: ArrayBuffer) : TaskDetail;
		//decode(buffer: NodeBuffer) : TaskDetail;
		//decode(buffer: ByteArrayBuffer) : TaskDetail;
		decode64(buffer: string) : TaskDetail;
		
	}
}


declare module pb {

	var TaskInfo: TaskInfo;
	export interface TaskInfo extends ProtoBufModel {
		new(obj?: any): TaskInfo;
		taskId?: number;
		status?: number;
		detail?: TaskDetail;
		
	}

	export interface TaskInfoBuilder {
		new(): TaskInfo;
		decode(buffer: ArrayBuffer) : TaskInfo;
		//decode(buffer: NodeBuffer) : TaskInfo;
		//decode(buffer: ByteArrayBuffer) : TaskInfo;
		decode64(buffer: string) : TaskInfo;
		
	}
}


declare module pb {

	var TaskInfosNtf: TaskInfosNtf;
	export interface TaskInfosNtf extends ProtoBufModel {
		new(obj?: any): TaskInfosNtf;
		main?: TaskInfo;
		achieve: TaskInfo[];
		daily: TaskInfo[];
		loop: TaskInfo[];
		
	}

	export interface TaskInfosNtfBuilder {
		new(): TaskInfosNtf;
		decode(buffer: ArrayBuffer) : TaskInfosNtf;
		//decode(buffer: NodeBuffer) : TaskInfosNtf;
		//decode(buffer: ByteArrayBuffer) : TaskInfosNtf;
		decode64(buffer: string) : TaskInfosNtf;
		
	}
}


declare module pb {

	var FinishTaskReq: FinishTaskReq;
	export interface FinishTaskReq extends ProtoBufModel {
		new(obj?: any): FinishTaskReq;
		taskId?: number;
		
	}

	export interface FinishTaskReqBuilder {
		new(): FinishTaskReq;
		decode(buffer: ArrayBuffer) : FinishTaskReq;
		//decode(buffer: NodeBuffer) : FinishTaskReq;
		//decode(buffer: ByteArrayBuffer) : FinishTaskReq;
		decode64(buffer: string) : FinishTaskReq;
		
	}
}


declare module pb {

	var TaskUpdateUnit: TaskUpdateUnit;
	export interface TaskUpdateUnit extends ProtoBufModel {
		new(obj?: any): TaskUpdateUnit;
		oldTask?: TaskInfo;
		newTask?: TaskInfo;
		type?: number;
		
	}

	export interface TaskUpdateUnitBuilder {
		new(): TaskUpdateUnit;
		decode(buffer: ArrayBuffer) : TaskUpdateUnit;
		//decode(buffer: NodeBuffer) : TaskUpdateUnit;
		//decode(buffer: ByteArrayBuffer) : TaskUpdateUnit;
		decode64(buffer: string) : TaskUpdateUnit;
		
	}
}


declare module pb {

	var TaskUpdateNtf: TaskUpdateNtf;
	export interface TaskUpdateNtf extends ProtoBufModel {
		new(obj?: any): TaskUpdateNtf;
		tasks: TaskUpdateUnit[];
		
	}

	export interface TaskUpdateNtfBuilder {
		new(): TaskUpdateNtf;
		decode(buffer: ArrayBuffer) : TaskUpdateNtf;
		//decode(buffer: NodeBuffer) : TaskUpdateNtf;
		//decode(buffer: ByteArrayBuffer) : TaskUpdateNtf;
		decode64(buffer: string) : TaskUpdateNtf;
		
	}
}


declare module pb {

	var FinishTaskAck: FinishTaskAck;
	export interface FinishTaskAck extends ProtoBufModel {
		new(obj?: any): FinishTaskAck;
		items: ItemDeltaInfo[];
		
	}

	export interface FinishTaskAckBuilder {
		new(): FinishTaskAck;
		decode(buffer: ArrayBuffer) : FinishTaskAck;
		//decode(buffer: NodeBuffer) : FinishTaskAck;
		//decode(buffer: ByteArrayBuffer) : FinishTaskAck;
		decode64(buffer: string) : FinishTaskAck;
		
	}
}


declare module pb {

	var UserPTProfileRpt: UserPTProfileRpt;
	export interface UserPTProfileRpt extends ProtoBufModel {
		new(obj?: any): UserPTProfileRpt;
		name?: string;
		avatar?: string;
		gender?: string;
		
	}

	export interface UserPTProfileRptBuilder {
		new(): UserPTProfileRpt;
		decode(buffer: ArrayBuffer) : UserPTProfileRpt;
		//decode(buffer: NodeBuffer) : UserPTProfileRpt;
		//decode(buffer: ByteArrayBuffer) : UserPTProfileRpt;
		decode64(buffer: string) : UserPTProfileRpt;
		
	}
}


declare module pb {

	var HeadPicChangeReq: HeadPicChangeReq;
	export interface HeadPicChangeReq extends ProtoBufModel {
		new(obj?: any): HeadPicChangeReq;
		tp?: number;
		newAvatar?: string;
		
	}

	export interface HeadPicChangeReqBuilder {
		new(): HeadPicChangeReq;
		decode(buffer: ArrayBuffer) : HeadPicChangeReq;
		//decode(buffer: NodeBuffer) : HeadPicChangeReq;
		//decode(buffer: ByteArrayBuffer) : HeadPicChangeReq;
		decode64(buffer: string) : HeadPicChangeReq;
		
	}
}


declare module pb {

	var HeadPicChangeAck: HeadPicChangeAck;
	export interface HeadPicChangeAck extends ProtoBufModel {
		new(obj?: any): HeadPicChangeAck;
		result?: number;
		
	}

	export interface HeadPicChangeAckBuilder {
		new(): HeadPicChangeAck;
		decode(buffer: ArrayBuffer) : HeadPicChangeAck;
		//decode(buffer: NodeBuffer) : HeadPicChangeAck;
		//decode(buffer: ByteArrayBuffer) : HeadPicChangeAck;
		decode64(buffer: string) : HeadPicChangeAck;
		
	}
}


declare module pb {

	var LivenessNtf: LivenessNtf;
	export interface LivenessNtf extends ProtoBufModel {
		new(obj?: any): LivenessNtf;
		value?: number;
		state: dcodeIO.ProtoBuf.Map<number,number>;
		
	}

	export interface LivenessNtfBuilder {
		new(): LivenessNtf;
		decode(buffer: ArrayBuffer) : LivenessNtf;
		//decode(buffer: NodeBuffer) : LivenessNtf;
		//decode(buffer: ByteArrayBuffer) : LivenessNtf;
		decode64(buffer: string) : LivenessNtf;
		
	}
}


declare module pb {

	var LivenessAwardReq: LivenessAwardReq;
	export interface LivenessAwardReq extends ProtoBufModel {
		new(obj?: any): LivenessAwardReq;
		id?: number;
		
	}

	export interface LivenessAwardReqBuilder {
		new(): LivenessAwardReq;
		decode(buffer: ArrayBuffer) : LivenessAwardReq;
		//decode(buffer: NodeBuffer) : LivenessAwardReq;
		//decode(buffer: ByteArrayBuffer) : LivenessAwardReq;
		decode64(buffer: string) : LivenessAwardReq;
		
	}
}


declare module pb {

	var LivenessAwardAck: LivenessAwardAck;
	export interface LivenessAwardAck extends ProtoBufModel {
		new(obj?: any): LivenessAwardAck;
		result?: number;
		items: ItemDeltaInfo[];
		
	}

	export interface LivenessAwardAckBuilder {
		new(): LivenessAwardAck;
		decode(buffer: ArrayBuffer) : LivenessAwardAck;
		//decode(buffer: NodeBuffer) : LivenessAwardAck;
		//decode(buffer: ByteArrayBuffer) : LivenessAwardAck;
		decode64(buffer: string) : LivenessAwardAck;
		
	}
}


declare module pb {

	var GiftOpenNtf: GiftOpenNtf;
	export interface GiftOpenNtf extends ProtoBufModel {
		new(obj?: any): GiftOpenNtf;
		tp?: number;
		
	}

	export interface GiftOpenNtfBuilder {
		new(): GiftOpenNtf;
		decode(buffer: ArrayBuffer) : GiftOpenNtf;
		//decode(buffer: NodeBuffer) : GiftOpenNtf;
		//decode(buffer: ByteArrayBuffer) : GiftOpenNtf;
		decode64(buffer: string) : GiftOpenNtf;
		
	}
}


declare module pb {

	var DragonPiecesCombineReq: DragonPiecesCombineReq;
	export interface DragonPiecesCombineReq extends ProtoBufModel {
		new(obj?: any): DragonPiecesCombineReq;
		id?: number;
		
	}

	export interface DragonPiecesCombineReqBuilder {
		new(): DragonPiecesCombineReq;
		decode(buffer: ArrayBuffer) : DragonPiecesCombineReq;
		//decode(buffer: NodeBuffer) : DragonPiecesCombineReq;
		//decode(buffer: ByteArrayBuffer) : DragonPiecesCombineReq;
		decode64(buffer: string) : DragonPiecesCombineReq;
		
	}
}


declare module pb {

	var DragonPiecesCombineAck: DragonPiecesCombineAck;
	export interface DragonPiecesCombineAck extends ProtoBufModel {
		new(obj?: any): DragonPiecesCombineAck;
		result?: number;
		
	}

	export interface DragonPiecesCombineAckBuilder {
		new(): DragonPiecesCombineAck;
		decode(buffer: ArrayBuffer) : DragonPiecesCombineAck;
		//decode(buffer: NodeBuffer) : DragonPiecesCombineAck;
		//decode(buffer: ByteArrayBuffer) : DragonPiecesCombineAck;
		decode64(buffer: string) : DragonPiecesCombineAck;
		
	}
}


declare module pb {

	var ItemInfoProb: ItemInfoProb;
	export interface ItemInfoProb extends ProtoBufModel {
		new(obj?: any): ItemInfoProb;
		itemId?: number;
		count?: number;
		prob?: number;
		
	}

	export interface ItemInfoProbBuilder {
		new(): ItemInfoProb;
		decode(buffer: ArrayBuffer) : ItemInfoProb;
		//decode(buffer: NodeBuffer) : ItemInfoProb;
		//decode(buffer: ByteArrayBuffer) : ItemInfoProb;
		decode64(buffer: string) : ItemInfoProb;
		
	}
}


declare module pb {

	var WaveItem: WaveItem;
	export interface WaveItem extends ProtoBufModel {
		new(obj?: any): WaveItem;
		wave?: number;
		id?: number;
		count?: number;
		
	}

	export interface WaveItemBuilder {
		new(): WaveItem;
		decode(buffer: ArrayBuffer) : WaveItem;
		//decode(buffer: NodeBuffer) : WaveItem;
		//decode(buffer: ByteArrayBuffer) : WaveItem;
		decode64(buffer: string) : WaveItem;
		
	}
}


declare module pb {

	var Item: Item;
	export interface Item extends ProtoBufModel {
		new(obj?: any): Item;
		itemId?: number;
		count?: number;
		
	}

	export interface ItemBuilder {
		new(): Item;
		decode(buffer: ArrayBuffer) : Item;
		//decode(buffer: NodeBuffer) : Item;
		//decode(buffer: ByteArrayBuffer) : Item;
		decode64(buffer: string) : Item;
		
	}
}


declare module pb {

	var RefreshTicketRpt: RefreshTicketRpt;
	export interface RefreshTicketRpt extends ProtoBufModel {
		new(obj?: any): RefreshTicketRpt;
		
	}

	export interface RefreshTicketRptBuilder {
		new(): RefreshTicketRpt;
		decode(buffer: ArrayBuffer) : RefreshTicketRpt;
		//decode(buffer: NodeBuffer) : RefreshTicketRpt;
		//decode(buffer: ByteArrayBuffer) : RefreshTicketRpt;
		decode64(buffer: string) : RefreshTicketRpt;
		
	}
}


declare module pb {

	var UserSimpleInfo: UserSimpleInfo;
	export interface UserSimpleInfo extends ProtoBufModel {
		new(obj?: any): UserSimpleInfo;
		guildIcon?: string;
		rank?: number;
		userName?: string;
		damage?: number;
		avatar?: string;
		vipLvl?: number;
		lvl?: number;
		id?: number;
		serverId?: number;
		loginTime?: number;
		
	}

	export interface UserSimpleInfoBuilder {
		new(): UserSimpleInfo;
		decode(buffer: ArrayBuffer) : UserSimpleInfo;
		//decode(buffer: NodeBuffer) : UserSimpleInfo;
		//decode(buffer: ByteArrayBuffer) : UserSimpleInfo;
		decode64(buffer: string) : UserSimpleInfo;
		
	}
}


declare module pb {

	var ActivityBaseInfo: ActivityBaseInfo;
	export interface ActivityBaseInfo extends ProtoBufModel {
		new(obj?: any): ActivityBaseInfo;
		id?: number;
		type?: number;
		uiType?: number;
		title?: string;
		help?: string;
		desc?: string;
		icon?: string;
		banner?: string;
		bannerInner?: string;
		startTime?: number;
		endTime?: number;
		order?: number;
		joinConditions: Condition[];
		dynamicValues: number[];
		imageTitle?: string;
		outRect?: string;
		innerRect?: string;
		showUI?: string;
		tips?: string;
		showBtn?: number;
		
	}

	export interface ActivityBaseInfoBuilder {
		new(): ActivityBaseInfo;
		decode(buffer: ArrayBuffer) : ActivityBaseInfo;
		//decode(buffer: NodeBuffer) : ActivityBaseInfo;
		//decode(buffer: ByteArrayBuffer) : ActivityBaseInfo;
		decode64(buffer: string) : ActivityBaseInfo;
		
	}
}


declare module pb {

	var ActivityLuckyTurntableTable: ActivityLuckyTurntableTable;
	export interface ActivityLuckyTurntableTable extends ProtoBufModel {
		new(obj?: any): ActivityLuckyTurntableTable;
		activityId?: number;
		lotteryType?: number;
		awardPool: ItemInfoProb[];
		awardShowIds: ItemInfoProb[];
		OneCost?: ItemInfo;
		TenCost?: ItemInfo;
		countAwards: WaveItem[];
		rateDesc?: string;
		showItemId: ItemInfo[];
		firstNAward?: WaveItem;
		everyNAward: ItemInfo[];
		everyN?: number;
		baseItems: ItemInfo[];
		
	}

	export interface ActivityLuckyTurntableTableBuilder {
		new(): ActivityLuckyTurntableTable;
		decode(buffer: ArrayBuffer) : ActivityLuckyTurntableTable;
		//decode(buffer: NodeBuffer) : ActivityLuckyTurntableTable;
		//decode(buffer: ByteArrayBuffer) : ActivityLuckyTurntableTable;
		decode64(buffer: string) : ActivityLuckyTurntableTable;
		
	}
}


declare module pb {

	var ActivityMonthCardTable: ActivityMonthCardTable;
	export interface ActivityMonthCardTable extends ProtoBufModel {
		new(obj?: any): ActivityMonthCardTable;
		id?: number;
		price?: number;
		monthCardType?: number;
		openDays?: number;
		name?: string;
		desc?: string;
		payAwards: ItemInfo[];
		dailyAwards: ItemInfo[];
		icon?: string;
		price1?: number;
		
	}

	export interface ActivityMonthCardTableBuilder {
		new(): ActivityMonthCardTable;
		decode(buffer: ArrayBuffer) : ActivityMonthCardTable;
		//decode(buffer: NodeBuffer) : ActivityMonthCardTable;
		//decode(buffer: ByteArrayBuffer) : ActivityMonthCardTable;
		decode64(buffer: string) : ActivityMonthCardTable;
		
	}
}


declare module pb {

	var HeroCompose: HeroCompose;
	export interface HeroCompose extends ProtoBufModel {
		new(obj?: any): HeroCompose;
		dragonItem?: Item;
		pool?: number;
		type?: number;
		weight?: number;
		
	}

	export interface HeroComposeBuilder {
		new(): HeroCompose;
		decode(buffer: ArrayBuffer) : HeroCompose;
		//decode(buffer: NodeBuffer) : HeroCompose;
		//decode(buffer: ByteArrayBuffer) : HeroCompose;
		decode64(buffer: string) : HeroCompose;
		
	}
}


declare module pb {

	var ActivityHeroComposeFormula: ActivityHeroComposeFormula;
	export interface ActivityHeroComposeFormula extends ProtoBufModel {
		new(obj?: any): ActivityHeroComposeFormula;
		id?: number;
		formulaid?: number;
		activityId?: number;
		material: ItemInfo[];
		material2: ItemInfo[];
		reward: ItemInfo[];
		heroComposes: HeroCompose[];
		
	}

	export interface ActivityHeroComposeFormulaBuilder {
		new(): ActivityHeroComposeFormula;
		decode(buffer: ArrayBuffer) : ActivityHeroComposeFormula;
		//decode(buffer: NodeBuffer) : ActivityHeroComposeFormula;
		//decode(buffer: ByteArrayBuffer) : ActivityHeroComposeFormula;
		decode64(buffer: string) : ActivityHeroComposeFormula;
		
	}
}


declare module pb {

	var ActivityInfo: ActivityInfo;
	export interface ActivityInfo extends ProtoBufModel {
		new(obj?: any): ActivityInfo;
		activityInfo?: ActivityBaseInfo;
		luckyTurntableInfo?: ActivityLuckyTurntableTable;
		monthCardTableInfo: ActivityMonthCardTable[];
		heroComposeFormula: ActivityHeroComposeFormula[];
		
	}

	export interface ActivityInfoBuilder {
		new(): ActivityInfo;
		decode(buffer: ArrayBuffer) : ActivityInfo;
		//decode(buffer: NodeBuffer) : ActivityInfo;
		//decode(buffer: ByteArrayBuffer) : ActivityInfo;
		decode64(buffer: string) : ActivityInfo;
		
	}
}


declare module pb {

	var ActivityLoadReq: ActivityLoadReq;
	export interface ActivityLoadReq extends ProtoBufModel {
		new(obj?: any): ActivityLoadReq;
		
	}

	export interface ActivityLoadReqBuilder {
		new(): ActivityLoadReq;
		decode(buffer: ArrayBuffer) : ActivityLoadReq;
		//decode(buffer: NodeBuffer) : ActivityLoadReq;
		//decode(buffer: ByteArrayBuffer) : ActivityLoadReq;
		decode64(buffer: string) : ActivityLoadReq;
		
	}
}


declare module pb {

	var ActivityLoadAck: ActivityLoadAck;
	export interface ActivityLoadAck extends ProtoBufModel {
		new(obj?: any): ActivityLoadAck;
		confs: ActivityInfo[];
		
	}

	export interface ActivityLoadAckBuilder {
		new(): ActivityLoadAck;
		decode(buffer: ArrayBuffer) : ActivityLoadAck;
		//decode(buffer: NodeBuffer) : ActivityLoadAck;
		//decode(buffer: ByteArrayBuffer) : ActivityLoadAck;
		decode64(buffer: string) : ActivityLoadAck;
		
	}
}


declare module pb {

	var ActivityChangeNtf: ActivityChangeNtf;
	export interface ActivityChangeNtf extends ProtoBufModel {
		new(obj?: any): ActivityChangeNtf;
		confs: ActivityInfo[];
		
	}

	export interface ActivityChangeNtfBuilder {
		new(): ActivityChangeNtf;
		decode(buffer: ArrayBuffer) : ActivityChangeNtf;
		//decode(buffer: NodeBuffer) : ActivityChangeNtf;
		//decode(buffer: ByteArrayBuffer) : ActivityChangeNtf;
		decode64(buffer: string) : ActivityChangeNtf;
		
	}
}


declare module pb {

	var ActivityHeroComposeLoadReq: ActivityHeroComposeLoadReq;
	export interface ActivityHeroComposeLoadReq extends ProtoBufModel {
		new(obj?: any): ActivityHeroComposeLoadReq;
		activityId?: number;
		
	}

	export interface ActivityHeroComposeLoadReqBuilder {
		new(): ActivityHeroComposeLoadReq;
		decode(buffer: ArrayBuffer) : ActivityHeroComposeLoadReq;
		//decode(buffer: NodeBuffer) : ActivityHeroComposeLoadReq;
		//decode(buffer: ByteArrayBuffer) : ActivityHeroComposeLoadReq;
		decode64(buffer: string) : ActivityHeroComposeLoadReq;
		
	}
}


declare module pb {

	var ActivityHeroComposeLoadAck: ActivityHeroComposeLoadAck;
	export interface ActivityHeroComposeLoadAck extends ProtoBufModel {
		new(obj?: any): ActivityHeroComposeLoadAck;
		count?: number;
		
	}

	export interface ActivityHeroComposeLoadAckBuilder {
		new(): ActivityHeroComposeLoadAck;
		decode(buffer: ArrayBuffer) : ActivityHeroComposeLoadAck;
		//decode(buffer: NodeBuffer) : ActivityHeroComposeLoadAck;
		//decode(buffer: ByteArrayBuffer) : ActivityHeroComposeLoadAck;
		decode64(buffer: string) : ActivityHeroComposeLoadAck;
		
	}
}


declare module pb {

	var ActivityHeroComposeReq: ActivityHeroComposeReq;
	export interface ActivityHeroComposeReq extends ProtoBufModel {
		new(obj?: any): ActivityHeroComposeReq;
		activityId?: number;
		type?: number;
		consumeType?: number;
		
	}

	export interface ActivityHeroComposeReqBuilder {
		new(): ActivityHeroComposeReq;
		decode(buffer: ArrayBuffer) : ActivityHeroComposeReq;
		//decode(buffer: NodeBuffer) : ActivityHeroComposeReq;
		//decode(buffer: ByteArrayBuffer) : ActivityHeroComposeReq;
		decode64(buffer: string) : ActivityHeroComposeReq;
		
	}
}


declare module pb {

	var ActivityHeroComposeAck: ActivityHeroComposeAck;
	export interface ActivityHeroComposeAck extends ProtoBufModel {
		new(obj?: any): ActivityHeroComposeAck;
		dragons: DragonInfo[];
		reduceInfo: PropInfo[];
		memberUpdate?: TeamMemberUpdate;
		showHoldDragonId?: number;
		iteminfo: ItemDeltaInfo[];
		dragonItemId?: number;
		count?: number;
		
	}

	export interface ActivityHeroComposeAckBuilder {
		new(): ActivityHeroComposeAck;
		decode(buffer: ArrayBuffer) : ActivityHeroComposeAck;
		//decode(buffer: NodeBuffer) : ActivityHeroComposeAck;
		//decode(buffer: ByteArrayBuffer) : ActivityHeroComposeAck;
		decode64(buffer: string) : ActivityHeroComposeAck;
		
	}
}


declare module pb {

	var LuckyTurntableRecord: LuckyTurntableRecord;
	export interface LuckyTurntableRecord extends ProtoBufModel {
		new(obj?: any): LuckyTurntableRecord;
		nickname?: string;
		luckyTurntableTime?: number;
		item?: Item;
		vip?: number;
		
	}

	export interface LuckyTurntableRecordBuilder {
		new(): LuckyTurntableRecord;
		decode(buffer: ArrayBuffer) : LuckyTurntableRecord;
		//decode(buffer: NodeBuffer) : LuckyTurntableRecord;
		//decode(buffer: ByteArrayBuffer) : LuckyTurntableRecord;
		decode64(buffer: string) : LuckyTurntableRecord;
		
	}
}


declare module pb {

	var ActivityLuckyTurntableLoadReq: ActivityLuckyTurntableLoadReq;
	export interface ActivityLuckyTurntableLoadReq extends ProtoBufModel {
		new(obj?: any): ActivityLuckyTurntableLoadReq;
		activityId?: number;
		
	}

	export interface ActivityLuckyTurntableLoadReqBuilder {
		new(): ActivityLuckyTurntableLoadReq;
		decode(buffer: ArrayBuffer) : ActivityLuckyTurntableLoadReq;
		//decode(buffer: NodeBuffer) : ActivityLuckyTurntableLoadReq;
		//decode(buffer: ByteArrayBuffer) : ActivityLuckyTurntableLoadReq;
		decode64(buffer: string) : ActivityLuckyTurntableLoadReq;
		
	}
}


declare module pb {

	var ActivityLuckyTurntableLoadAck: ActivityLuckyTurntableLoadAck;
	export interface ActivityLuckyTurntableLoadAck extends ProtoBufModel {
		new(obj?: any): ActivityLuckyTurntableLoadAck;
		drawCount?: number;
		ownRecord: LuckyTurntableRecord[];
		serverRecord: LuckyTurntableRecord[];
		gotIds: number[];
		
	}

	export interface ActivityLuckyTurntableLoadAckBuilder {
		new(): ActivityLuckyTurntableLoadAck;
		decode(buffer: ArrayBuffer) : ActivityLuckyTurntableLoadAck;
		//decode(buffer: NodeBuffer) : ActivityLuckyTurntableLoadAck;
		//decode(buffer: ByteArrayBuffer) : ActivityLuckyTurntableLoadAck;
		decode64(buffer: string) : ActivityLuckyTurntableLoadAck;
		
	}
}


declare module pb {

	var ActivityLuckyTurntableDoReq: ActivityLuckyTurntableDoReq;
	export interface ActivityLuckyTurntableDoReq extends ProtoBufModel {
		new(obj?: any): ActivityLuckyTurntableDoReq;
		times?: number;
		activityId?: number;
		
	}

	export interface ActivityLuckyTurntableDoReqBuilder {
		new(): ActivityLuckyTurntableDoReq;
		decode(buffer: ArrayBuffer) : ActivityLuckyTurntableDoReq;
		//decode(buffer: NodeBuffer) : ActivityLuckyTurntableDoReq;
		//decode(buffer: ByteArrayBuffer) : ActivityLuckyTurntableDoReq;
		decode64(buffer: string) : ActivityLuckyTurntableDoReq;
		
	}
}


declare module pb {

	var ActivityLuckyTurntableDoAck: ActivityLuckyTurntableDoAck;
	export interface ActivityLuckyTurntableDoAck extends ProtoBufModel {
		new(obj?: any): ActivityLuckyTurntableDoAck;
		items: ItemDeltaInfo[];
		ownRecord: LuckyTurntableRecord[];
		index?: number;
		
	}

	export interface ActivityLuckyTurntableDoAckBuilder {
		new(): ActivityLuckyTurntableDoAck;
		decode(buffer: ArrayBuffer) : ActivityLuckyTurntableDoAck;
		//decode(buffer: NodeBuffer) : ActivityLuckyTurntableDoAck;
		//decode(buffer: ByteArrayBuffer) : ActivityLuckyTurntableDoAck;
		decode64(buffer: string) : ActivityLuckyTurntableDoAck;
		
	}
}


declare module pb {

	var ActivityLuckyTurntableRecordNtf: ActivityLuckyTurntableRecordNtf;
	export interface ActivityLuckyTurntableRecordNtf extends ProtoBufModel {
		new(obj?: any): ActivityLuckyTurntableRecordNtf;
		activityId?: number;
		record: LuckyTurntableRecord[];
		
	}

	export interface ActivityLuckyTurntableRecordNtfBuilder {
		new(): ActivityLuckyTurntableRecordNtf;
		decode(buffer: ArrayBuffer) : ActivityLuckyTurntableRecordNtf;
		//decode(buffer: NodeBuffer) : ActivityLuckyTurntableRecordNtf;
		//decode(buffer: ByteArrayBuffer) : ActivityLuckyTurntableRecordNtf;
		decode64(buffer: string) : ActivityLuckyTurntableRecordNtf;
		
	}
}


declare module pb {

	var ActLuckyTurntableExtraAwardReq: ActLuckyTurntableExtraAwardReq;
	export interface ActLuckyTurntableExtraAwardReq extends ProtoBufModel {
		new(obj?: any): ActLuckyTurntableExtraAwardReq;
		activityId?: number;
		rewardId?: number;
		
	}

	export interface ActLuckyTurntableExtraAwardReqBuilder {
		new(): ActLuckyTurntableExtraAwardReq;
		decode(buffer: ArrayBuffer) : ActLuckyTurntableExtraAwardReq;
		//decode(buffer: NodeBuffer) : ActLuckyTurntableExtraAwardReq;
		//decode(buffer: ByteArrayBuffer) : ActLuckyTurntableExtraAwardReq;
		decode64(buffer: string) : ActLuckyTurntableExtraAwardReq;
		
	}
}


declare module pb {

	var ActLuckyTurntableExtraAwardAck: ActLuckyTurntableExtraAwardAck;
	export interface ActLuckyTurntableExtraAwardAck extends ProtoBufModel {
		new(obj?: any): ActLuckyTurntableExtraAwardAck;
		gotIds: number[];
		items: ItemDeltaInfo[];
		
	}

	export interface ActLuckyTurntableExtraAwardAckBuilder {
		new(): ActLuckyTurntableExtraAwardAck;
		decode(buffer: ArrayBuffer) : ActLuckyTurntableExtraAwardAck;
		//decode(buffer: NodeBuffer) : ActLuckyTurntableExtraAwardAck;
		//decode(buffer: ByteArrayBuffer) : ActLuckyTurntableExtraAwardAck;
		decode64(buffer: string) : ActLuckyTurntableExtraAwardAck;
		
	}
}


declare module pb {

	var AdExtraAwardReq: AdExtraAwardReq;
	export interface AdExtraAwardReq extends ProtoBufModel {
		new(obj?: any): AdExtraAwardReq;
		type?: number;
		params: number[];
		
	}

	export interface AdExtraAwardReqBuilder {
		new(): AdExtraAwardReq;
		decode(buffer: ArrayBuffer) : AdExtraAwardReq;
		//decode(buffer: NodeBuffer) : AdExtraAwardReq;
		//decode(buffer: ByteArrayBuffer) : AdExtraAwardReq;
		decode64(buffer: string) : AdExtraAwardReq;
		
	}
}


declare module pb {

	var AdExtraAwardAck: AdExtraAwardAck;
	export interface AdExtraAwardAck extends ProtoBufModel {
		new(obj?: any): AdExtraAwardAck;
		changeItemInfo: ItemDeltaInfo[];
		
	}

	export interface AdExtraAwardAckBuilder {
		new(): AdExtraAwardAck;
		decode(buffer: ArrayBuffer) : AdExtraAwardAck;
		//decode(buffer: NodeBuffer) : AdExtraAwardAck;
		//decode(buffer: ByteArrayBuffer) : AdExtraAwardAck;
		decode64(buffer: string) : AdExtraAwardAck;
		
	}
}


declare module pb {

	var AdjutantsNtf: AdjutantsNtf;
	export interface AdjutantsNtf extends ProtoBufModel {
		new(obj?: any): AdjutantsNtf;
		infos: AdjutantInfo[];
		usedAdjutantId?: number;
		
	}

	export interface AdjutantsNtfBuilder {
		new(): AdjutantsNtf;
		decode(buffer: ArrayBuffer) : AdjutantsNtf;
		//decode(buffer: NodeBuffer) : AdjutantsNtf;
		//decode(buffer: ByteArrayBuffer) : AdjutantsNtf;
		decode64(buffer: string) : AdjutantsNtf;
		
	}
}


declare module pb {

	var GainProp: GainProp;
	export interface GainProp extends ProtoBufModel {
		new(obj?: any): GainProp;
		ratio?: number;
		plus?: number;
		
	}

	export interface GainPropBuilder {
		new(): GainProp;
		decode(buffer: ArrayBuffer) : GainProp;
		//decode(buffer: NodeBuffer) : GainProp;
		//decode(buffer: ByteArrayBuffer) : GainProp;
		decode64(buffer: string) : GainProp;
		
	}
}


declare module pb {

	var AdjutantInfo: AdjutantInfo;
	export interface AdjutantInfo extends ProtoBufModel {
		new(obj?: any): AdjutantInfo;
		id?: number;
		lvl?: number;
		prop?: GainProp;
		cost?: PropInfo;
		lvlProp?: GainProp;
		name?: string;
		maxLvl?: number;
		cond?: Condition;
		desc?: string;
		icon?: number;
		drawSpine?: string;
		status?: boolean;
		
	}

	export interface AdjutantInfoBuilder {
		new(): AdjutantInfo;
		decode(buffer: ArrayBuffer) : AdjutantInfo;
		//decode(buffer: NodeBuffer) : AdjutantInfo;
		//decode(buffer: ByteArrayBuffer) : AdjutantInfo;
		decode64(buffer: string) : AdjutantInfo;
		
	}
}


declare module pb {

	var AdjutantLvlUpReq: AdjutantLvlUpReq;
	export interface AdjutantLvlUpReq extends ProtoBufModel {
		new(obj?: any): AdjutantLvlUpReq;
		id?: number;
		
	}

	export interface AdjutantLvlUpReqBuilder {
		new(): AdjutantLvlUpReq;
		decode(buffer: ArrayBuffer) : AdjutantLvlUpReq;
		//decode(buffer: NodeBuffer) : AdjutantLvlUpReq;
		//decode(buffer: ByteArrayBuffer) : AdjutantLvlUpReq;
		decode64(buffer: string) : AdjutantLvlUpReq;
		
	}
}


declare module pb {

	var AdjutantLvlUpAck: AdjutantLvlUpAck;
	export interface AdjutantLvlUpAck extends ProtoBufModel {
		new(obj?: any): AdjutantLvlUpAck;
		info?: AdjutantInfo;
		
	}

	export interface AdjutantLvlUpAckBuilder {
		new(): AdjutantLvlUpAck;
		decode(buffer: ArrayBuffer) : AdjutantLvlUpAck;
		//decode(buffer: NodeBuffer) : AdjutantLvlUpAck;
		//decode(buffer: ByteArrayBuffer) : AdjutantLvlUpAck;
		decode64(buffer: string) : AdjutantLvlUpAck;
		
	}
}


declare module pb {

	var SetAdjutantReq: SetAdjutantReq;
	export interface SetAdjutantReq extends ProtoBufModel {
		new(obj?: any): SetAdjutantReq;
		id?: number;
		
	}

	export interface SetAdjutantReqBuilder {
		new(): SetAdjutantReq;
		decode(buffer: ArrayBuffer) : SetAdjutantReq;
		//decode(buffer: NodeBuffer) : SetAdjutantReq;
		//decode(buffer: ByteArrayBuffer) : SetAdjutantReq;
		decode64(buffer: string) : SetAdjutantReq;
		
	}
}


declare module pb {

	var SetAdjutantAck: SetAdjutantAck;
	export interface SetAdjutantAck extends ProtoBufModel {
		new(obj?: any): SetAdjutantAck;
		id?: number;
		
	}

	export interface SetAdjutantAckBuilder {
		new(): SetAdjutantAck;
		decode(buffer: ArrayBuffer) : SetAdjutantAck;
		//decode(buffer: NodeBuffer) : SetAdjutantAck;
		//decode(buffer: ByteArrayBuffer) : SetAdjutantAck;
		decode64(buffer: string) : SetAdjutantAck;
		
	}
}


declare module pb {

	var UnlockAdjutantReq: UnlockAdjutantReq;
	export interface UnlockAdjutantReq extends ProtoBufModel {
		new(obj?: any): UnlockAdjutantReq;
		id?: number;
		
	}

	export interface UnlockAdjutantReqBuilder {
		new(): UnlockAdjutantReq;
		decode(buffer: ArrayBuffer) : UnlockAdjutantReq;
		//decode(buffer: NodeBuffer) : UnlockAdjutantReq;
		//decode(buffer: ByteArrayBuffer) : UnlockAdjutantReq;
		decode64(buffer: string) : UnlockAdjutantReq;
		
	}
}


declare module pb {

	var UnlockAdjutantAck: UnlockAdjutantAck;
	export interface UnlockAdjutantAck extends ProtoBufModel {
		new(obj?: any): UnlockAdjutantAck;
		id?: number;
		status?: number;
		
	}

	export interface UnlockAdjutantAckBuilder {
		new(): UnlockAdjutantAck;
		decode(buffer: ArrayBuffer) : UnlockAdjutantAck;
		//decode(buffer: NodeBuffer) : UnlockAdjutantAck;
		//decode(buffer: ByteArrayBuffer) : UnlockAdjutantAck;
		decode64(buffer: string) : UnlockAdjutantAck;
		
	}
}


declare module pb {

	var ArenaBriefUserInfo: ArenaBriefUserInfo;
	export interface ArenaBriefUserInfo extends ProtoBufModel {
		new(obj?: any): ArenaBriefUserInfo;
		id?: number;
		name?: string;
		lvl?: number;
		vip?: number;
		combat?: number;
		avatar?: string;
		grading?: number;
		
	}

	export interface ArenaBriefUserInfoBuilder {
		new(): ArenaBriefUserInfo;
		decode(buffer: ArrayBuffer) : ArenaBriefUserInfo;
		//decode(buffer: NodeBuffer) : ArenaBriefUserInfo;
		//decode(buffer: ByteArrayBuffer) : ArenaBriefUserInfo;
		decode64(buffer: string) : ArenaBriefUserInfo;
		
	}
}


declare module pb {

	var ArenaLoadReq: ArenaLoadReq;
	export interface ArenaLoadReq extends ProtoBufModel {
		new(obj?: any): ArenaLoadReq;
		
	}

	export interface ArenaLoadReqBuilder {
		new(): ArenaLoadReq;
		decode(buffer: ArrayBuffer) : ArenaLoadReq;
		//decode(buffer: NodeBuffer) : ArenaLoadReq;
		//decode(buffer: ByteArrayBuffer) : ArenaLoadReq;
		decode64(buffer: string) : ArenaLoadReq;
		
	}
}


declare module pb {

	var ArenaLoadAck: ArenaLoadAck;
	export interface ArenaLoadAck extends ProtoBufModel {
		new(obj?: any): ArenaLoadAck;
		
	}

	export interface ArenaLoadAckBuilder {
		new(): ArenaLoadAck;
		decode(buffer: ArrayBuffer) : ArenaLoadAck;
		//decode(buffer: NodeBuffer) : ArenaLoadAck;
		//decode(buffer: ByteArrayBuffer) : ArenaLoadAck;
		decode64(buffer: string) : ArenaLoadAck;
		
	}
}


declare module pb {

	var ArenaGetUserReq: ArenaGetUserReq;
	export interface ArenaGetUserReq extends ProtoBufModel {
		new(obj?: any): ArenaGetUserReq;
		type?: number;
		
	}

	export interface ArenaGetUserReqBuilder {
		new(): ArenaGetUserReq;
		decode(buffer: ArrayBuffer) : ArenaGetUserReq;
		//decode(buffer: NodeBuffer) : ArenaGetUserReq;
		//decode(buffer: ByteArrayBuffer) : ArenaGetUserReq;
		decode64(buffer: string) : ArenaGetUserReq;
		
	}
}


declare module pb {

	var ArenaGetUserAck: ArenaGetUserAck;
	export interface ArenaGetUserAck extends ProtoBufModel {
		new(obj?: any): ArenaGetUserAck;
		
	}

	export interface ArenaGetUserAckBuilder {
		new(): ArenaGetUserAck;
		decode(buffer: ArrayBuffer) : ArenaGetUserAck;
		//decode(buffer: NodeBuffer) : ArenaGetUserAck;
		//decode(buffer: ByteArrayBuffer) : ArenaGetUserAck;
		decode64(buffer: string) : ArenaGetUserAck;
		
	}
}


declare module pb {

	var ArenaGetRankReq: ArenaGetRankReq;
	export interface ArenaGetRankReq extends ProtoBufModel {
		new(obj?: any): ArenaGetRankReq;
		page?: number;
		
	}

	export interface ArenaGetRankReqBuilder {
		new(): ArenaGetRankReq;
		decode(buffer: ArrayBuffer) : ArenaGetRankReq;
		//decode(buffer: NodeBuffer) : ArenaGetRankReq;
		//decode(buffer: ByteArrayBuffer) : ArenaGetRankReq;
		decode64(buffer: string) : ArenaGetRankReq;
		
	}
}


declare module pb {

	var ArenaGetRankAck: ArenaGetRankAck;
	export interface ArenaGetRankAck extends ProtoBufModel {
		new(obj?: any): ArenaGetRankAck;
		page?: number;
		maxPage?: number;
		users: ArenaBriefUserInfo[];
		
	}

	export interface ArenaGetRankAckBuilder {
		new(): ArenaGetRankAck;
		decode(buffer: ArrayBuffer) : ArenaGetRankAck;
		//decode(buffer: NodeBuffer) : ArenaGetRankAck;
		//decode(buffer: ByteArrayBuffer) : ArenaGetRankAck;
		decode64(buffer: string) : ArenaGetRankAck;
		
	}
}


declare module pb {

	var ArenaNewRankNtf: ArenaNewRankNtf;
	export interface ArenaNewRankNtf extends ProtoBufModel {
		new(obj?: any): ArenaNewRankNtf;
		page?: number;
		maxPage?: number;
		users: ArenaBriefUserInfo[];
		
	}

	export interface ArenaNewRankNtfBuilder {
		new(): ArenaNewRankNtf;
		decode(buffer: ArrayBuffer) : ArenaNewRankNtf;
		//decode(buffer: NodeBuffer) : ArenaNewRankNtf;
		//decode(buffer: ByteArrayBuffer) : ArenaNewRankNtf;
		decode64(buffer: string) : ArenaNewRankNtf;
		
	}
}


declare module pb {

	var ArenaBeginReq: ArenaBeginReq;
	export interface ArenaBeginReq extends ProtoBufModel {
		new(obj?: any): ArenaBeginReq;
		enemyRankId?: number;
		
	}

	export interface ArenaBeginReqBuilder {
		new(): ArenaBeginReq;
		decode(buffer: ArrayBuffer) : ArenaBeginReq;
		//decode(buffer: NodeBuffer) : ArenaBeginReq;
		//decode(buffer: ByteArrayBuffer) : ArenaBeginReq;
		decode64(buffer: string) : ArenaBeginReq;
		
	}
}


declare module pb {

	var ArenaBeginAck: ArenaBeginAck;
	export interface ArenaBeginAck extends ProtoBufModel {
		new(obj?: any): ArenaBeginAck;
		enemyTeam?: DragonTeam;
		dragons: DragonInfo[];
		enemyUser?: ArenaBriefUserInfo;
		
	}

	export interface ArenaBeginAckBuilder {
		new(): ArenaBeginAck;
		decode(buffer: ArrayBuffer) : ArenaBeginAck;
		//decode(buffer: NodeBuffer) : ArenaBeginAck;
		//decode(buffer: ByteArrayBuffer) : ArenaBeginAck;
		decode64(buffer: string) : ArenaBeginAck;
		
	}
}


declare module pb {

	var ArenaEndReq: ArenaEndReq;
	export interface ArenaEndReq extends ProtoBufModel {
		new(obj?: any): ArenaEndReq;
		result?: number;
		enemyUserId?: number;
		
	}

	export interface ArenaEndReqBuilder {
		new(): ArenaEndReq;
		decode(buffer: ArrayBuffer) : ArenaEndReq;
		//decode(buffer: NodeBuffer) : ArenaEndReq;
		//decode(buffer: ByteArrayBuffer) : ArenaEndReq;
		decode64(buffer: string) : ArenaEndReq;
		
	}
}


declare module pb {

	var ArenaEndAck: ArenaEndAck;
	export interface ArenaEndAck extends ProtoBufModel {
		new(obj?: any): ArenaEndAck;
		arenaGrading?: number;
		
	}

	export interface ArenaEndAckBuilder {
		new(): ArenaEndAck;
		decode(buffer: ArrayBuffer) : ArenaEndAck;
		//decode(buffer: NodeBuffer) : ArenaEndAck;
		//decode(buffer: ByteArrayBuffer) : ArenaEndAck;
		decode64(buffer: string) : ArenaEndAck;
		
	}
}


declare module pb {

	var ArenaCheckReq: ArenaCheckReq;
	export interface ArenaCheckReq extends ProtoBufModel {
		new(obj?: any): ArenaCheckReq;
		enemyRankId?: number;
		enemyUserId?: number;
		
	}

	export interface ArenaCheckReqBuilder {
		new(): ArenaCheckReq;
		decode(buffer: ArrayBuffer) : ArenaCheckReq;
		//decode(buffer: NodeBuffer) : ArenaCheckReq;
		//decode(buffer: ByteArrayBuffer) : ArenaCheckReq;
		decode64(buffer: string) : ArenaCheckReq;
		
	}
}


declare module pb {

	var ArenaCheckAck: ArenaCheckAck;
	export interface ArenaCheckAck extends ProtoBufModel {
		new(obj?: any): ArenaCheckAck;
		rankChange?: boolean;
		
	}

	export interface ArenaCheckAckBuilder {
		new(): ArenaCheckAck;
		decode(buffer: ArrayBuffer) : ArenaCheckAck;
		//decode(buffer: NodeBuffer) : ArenaCheckAck;
		//decode(buffer: ByteArrayBuffer) : ArenaCheckAck;
		decode64(buffer: string) : ArenaCheckAck;
		
	}
}


declare module pb {

	var ArenaGetFormatReq: ArenaGetFormatReq;
	export interface ArenaGetFormatReq extends ProtoBufModel {
		new(obj?: any): ArenaGetFormatReq;
		enemyUserId?: number;
		
	}

	export interface ArenaGetFormatReqBuilder {
		new(): ArenaGetFormatReq;
		decode(buffer: ArrayBuffer) : ArenaGetFormatReq;
		//decode(buffer: NodeBuffer) : ArenaGetFormatReq;
		//decode(buffer: ByteArrayBuffer) : ArenaGetFormatReq;
		decode64(buffer: string) : ArenaGetFormatReq;
		
	}
}


declare module pb {

	var ArenaGetFormatAck: ArenaGetFormatAck;
	export interface ArenaGetFormatAck extends ProtoBufModel {
		new(obj?: any): ArenaGetFormatAck;
		enemyTeam?: DragonTeam;
		dragons: DragonInfo[];
		combat?: number;
		
	}

	export interface ArenaGetFormatAckBuilder {
		new(): ArenaGetFormatAck;
		decode(buffer: ArrayBuffer) : ArenaGetFormatAck;
		//decode(buffer: NodeBuffer) : ArenaGetFormatAck;
		//decode(buffer: ByteArrayBuffer) : ArenaGetFormatAck;
		decode64(buffer: string) : ArenaGetFormatAck;
		
	}
}


declare module pb {

	var ArenaRecordInfo: ArenaRecordInfo;
	export interface ArenaRecordInfo extends ProtoBufModel {
		new(obj?: any): ArenaRecordInfo;
		date?: number;
		win?: number;
		status?: number;
		arenaGrading?: number;
		attackUid?: number;
		enemyUser?: ArenaBriefUserInfo;
		gradeHigh?: boolean;
		
	}

	export interface ArenaRecordInfoBuilder {
		new(): ArenaRecordInfo;
		decode(buffer: ArrayBuffer) : ArenaRecordInfo;
		//decode(buffer: NodeBuffer) : ArenaRecordInfo;
		//decode(buffer: ByteArrayBuffer) : ArenaRecordInfo;
		decode64(buffer: string) : ArenaRecordInfo;
		
	}
}


declare module pb {

	var ArenaLoadRecordReq: ArenaLoadRecordReq;
	export interface ArenaLoadRecordReq extends ProtoBufModel {
		new(obj?: any): ArenaLoadRecordReq;
		
	}

	export interface ArenaLoadRecordReqBuilder {
		new(): ArenaLoadRecordReq;
		decode(buffer: ArrayBuffer) : ArenaLoadRecordReq;
		//decode(buffer: NodeBuffer) : ArenaLoadRecordReq;
		//decode(buffer: ByteArrayBuffer) : ArenaLoadRecordReq;
		decode64(buffer: string) : ArenaLoadRecordReq;
		
	}
}


declare module pb {

	var ArenaLoadRecordAck: ArenaLoadRecordAck;
	export interface ArenaLoadRecordAck extends ProtoBufModel {
		new(obj?: any): ArenaLoadRecordAck;
		records: ArenaRecordInfo[];
		
	}

	export interface ArenaLoadRecordAckBuilder {
		new(): ArenaLoadRecordAck;
		decode(buffer: ArrayBuffer) : ArenaLoadRecordAck;
		//decode(buffer: NodeBuffer) : ArenaLoadRecordAck;
		//decode(buffer: ByteArrayBuffer) : ArenaLoadRecordAck;
		decode64(buffer: string) : ArenaLoadRecordAck;
		
	}
}


declare module pb {

	var ArenaRankAwardReq: ArenaRankAwardReq;
	export interface ArenaRankAwardReq extends ProtoBufModel {
		new(obj?: any): ArenaRankAwardReq;
		id?: number;
		
	}

	export interface ArenaRankAwardReqBuilder {
		new(): ArenaRankAwardReq;
		decode(buffer: ArrayBuffer) : ArenaRankAwardReq;
		//decode(buffer: NodeBuffer) : ArenaRankAwardReq;
		//decode(buffer: ByteArrayBuffer) : ArenaRankAwardReq;
		decode64(buffer: string) : ArenaRankAwardReq;
		
	}
}


declare module pb {

	var ArenaRankAwardAck: ArenaRankAwardAck;
	export interface ArenaRankAwardAck extends ProtoBufModel {
		new(obj?: any): ArenaRankAwardAck;
		reward: ItemDeltaInfo[];
		
	}

	export interface ArenaRankAwardAckBuilder {
		new(): ArenaRankAwardAck;
		decode(buffer: ArrayBuffer) : ArenaRankAwardAck;
		//decode(buffer: NodeBuffer) : ArenaRankAwardAck;
		//decode(buffer: ByteArrayBuffer) : ArenaRankAwardAck;
		decode64(buffer: string) : ArenaRankAwardAck;
		
	}
}


declare module pb {

	var ArenaChallengeAwardReq: ArenaChallengeAwardReq;
	export interface ArenaChallengeAwardReq extends ProtoBufModel {
		new(obj?: any): ArenaChallengeAwardReq;
		id?: number;
		
	}

	export interface ArenaChallengeAwardReqBuilder {
		new(): ArenaChallengeAwardReq;
		decode(buffer: ArrayBuffer) : ArenaChallengeAwardReq;
		//decode(buffer: NodeBuffer) : ArenaChallengeAwardReq;
		//decode(buffer: ByteArrayBuffer) : ArenaChallengeAwardReq;
		decode64(buffer: string) : ArenaChallengeAwardReq;
		
	}
}


declare module pb {

	var ArenaChallengeAwardAck: ArenaChallengeAwardAck;
	export interface ArenaChallengeAwardAck extends ProtoBufModel {
		new(obj?: any): ArenaChallengeAwardAck;
		reward: ItemDeltaInfo[];
		
	}

	export interface ArenaChallengeAwardAckBuilder {
		new(): ArenaChallengeAwardAck;
		decode(buffer: ArrayBuffer) : ArenaChallengeAwardAck;
		//decode(buffer: NodeBuffer) : ArenaChallengeAwardAck;
		//decode(buffer: ByteArrayBuffer) : ArenaChallengeAwardAck;
		decode64(buffer: string) : ArenaChallengeAwardAck;
		
	}
}


declare module pb {

	var ArenaEnemyNtf: ArenaEnemyNtf;
	export interface ArenaEnemyNtf extends ProtoBufModel {
		new(obj?: any): ArenaEnemyNtf;
		nextRefreshTime?: number;
		arenaGrading?: number;
		arenaUsers: ArenaBriefUserInfo[];
		isRefresh?: boolean;
		
	}

	export interface ArenaEnemyNtfBuilder {
		new(): ArenaEnemyNtf;
		decode(buffer: ArrayBuffer) : ArenaEnemyNtf;
		//decode(buffer: NodeBuffer) : ArenaEnemyNtf;
		//decode(buffer: ByteArrayBuffer) : ArenaEnemyNtf;
		decode64(buffer: string) : ArenaEnemyNtf;
		
	}
}


declare module pb {

	var ArenaInfoNtf: ArenaInfoNtf;
	export interface ArenaInfoNtf extends ProtoBufModel {
		new(obj?: any): ArenaInfoNtf;
		gotIds: number[];
		maxGrading?: number;
		gotChallengeIds: number[];
		arenaWinCount?: number;
		seasonStartTime?: number;
		seasonEndTime?: number;
		
	}

	export interface ArenaInfoNtfBuilder {
		new(): ArenaInfoNtf;
		decode(buffer: ArrayBuffer) : ArenaInfoNtf;
		//decode(buffer: NodeBuffer) : ArenaInfoNtf;
		//decode(buffer: ByteArrayBuffer) : ArenaInfoNtf;
		decode64(buffer: string) : ArenaInfoNtf;
		
	}
}


declare module pb {

	var EnterCopyReq: EnterCopyReq;
	export interface EnterCopyReq extends ProtoBufModel {
		new(obj?: any): EnterCopyReq;
		copyId?: number;
		startStage?: number;
		
	}

	export interface EnterCopyReqBuilder {
		new(): EnterCopyReq;
		decode(buffer: ArrayBuffer) : EnterCopyReq;
		//decode(buffer: NodeBuffer) : EnterCopyReq;
		//decode(buffer: ByteArrayBuffer) : EnterCopyReq;
		decode64(buffer: string) : EnterCopyReq;
		
	}
}


declare module pb {

	var EnterCopyAck: EnterCopyAck;
	export interface EnterCopyAck extends ProtoBufModel {
		new(obj?: any): EnterCopyAck;
		copyId?: number;
		stageRecord?: number;
		stage?: StageNtf;
		
	}

	export interface EnterCopyAckBuilder {
		new(): EnterCopyAck;
		decode(buffer: ArrayBuffer) : EnterCopyAck;
		//decode(buffer: NodeBuffer) : EnterCopyAck;
		//decode(buffer: ByteArrayBuffer) : EnterCopyAck;
		decode64(buffer: string) : EnterCopyAck;
		
	}
}


declare module pb {

	var StageEndRpt: StageEndRpt;
	export interface StageEndRpt extends ProtoBufModel {
		new(obj?: any): StageEndRpt;
		stageIndex?: number;
		flag?: number;
		
	}

	export interface StageEndRptBuilder {
		new(): StageEndRpt;
		decode(buffer: ArrayBuffer) : StageEndRpt;
		//decode(buffer: NodeBuffer) : StageEndRpt;
		//decode(buffer: ByteArrayBuffer) : StageEndRpt;
		decode64(buffer: string) : StageEndRpt;
		
	}
}


declare module pb {

	var StageEndNtf: StageEndNtf;
	export interface StageEndNtf extends ProtoBufModel {
		new(obj?: any): StageEndNtf;
		nextStageIndex?: number;
		usedTime?: number;
		fixAward?: ItemDeltaInfo;
		extraAward?: ItemDeltaInfo;
		breakAward?: ItemDeltaInfo;
		deadCount?: number;
		copyId?: number;
		record?: number;
		boxAwards: ItemDeltaInfo[];
		stageCount?: number;
		
	}

	export interface StageEndNtfBuilder {
		new(): StageEndNtf;
		decode(buffer: ArrayBuffer) : StageEndNtf;
		//decode(buffer: NodeBuffer) : StageEndNtf;
		//decode(buffer: ByteArrayBuffer) : StageEndNtf;
		decode64(buffer: string) : StageEndNtf;
		
	}
}


declare module pb {

	var StageBreakReq: StageBreakReq;
	export interface StageBreakReq extends ProtoBufModel {
		new(obj?: any): StageBreakReq;
		stageIndex?: number;
		tp?: number;
		
	}

	export interface StageBreakReqBuilder {
		new(): StageBreakReq;
		decode(buffer: ArrayBuffer) : StageBreakReq;
		//decode(buffer: NodeBuffer) : StageBreakReq;
		//decode(buffer: ByteArrayBuffer) : StageBreakReq;
		decode64(buffer: string) : StageBreakReq;
		
	}
}


declare module pb {

	var StageBreakAck: StageBreakAck;
	export interface StageBreakAck extends ProtoBufModel {
		new(obj?: any): StageBreakAck;
		nextStageIndex?: number;
		rewards: Reward[];
		rewardsItem: Reward[];
		newStageinfo?: StageNtf;
		RandAddStage?: number;
		boxAwards: ItemDeltaInfo[];
		stageCount?: number;
		
	}

	export interface StageBreakAckBuilder {
		new(): StageBreakAck;
		decode(buffer: ArrayBuffer) : StageBreakAck;
		//decode(buffer: NodeBuffer) : StageBreakAck;
		//decode(buffer: ByteArrayBuffer) : StageBreakAck;
		decode64(buffer: string) : StageBreakAck;
		
	}
}


declare module pb {

	var StageNtf: StageNtf;
	export interface StageNtf extends ProtoBufModel {
		new(obj?: any): StageNtf;
		copyId?: number;
		stage?: StageInfo;
		timeRecord?: number;
		timeLimit?: number;
		
	}

	export interface StageNtfBuilder {
		new(): StageNtf;
		decode(buffer: ArrayBuffer) : StageNtf;
		//decode(buffer: NodeBuffer) : StageNtf;
		//decode(buffer: ByteArrayBuffer) : StageNtf;
		decode64(buffer: string) : StageNtf;
		
	}
}


declare module pb {

	var RegressRewardReq: RegressRewardReq;
	export interface RegressRewardReq extends ProtoBufModel {
		new(obj?: any): RegressRewardReq;
		copyId?: number;
		
	}

	export interface RegressRewardReqBuilder {
		new(): RegressRewardReq;
		decode(buffer: ArrayBuffer) : RegressRewardReq;
		//decode(buffer: NodeBuffer) : RegressRewardReq;
		//decode(buffer: ByteArrayBuffer) : RegressRewardReq;
		decode64(buffer: string) : RegressRewardReq;
		
	}
}


declare module pb {

	var RegressRewardAck: RegressRewardAck;
	export interface RegressRewardAck extends ProtoBufModel {
		new(obj?: any): RegressRewardAck;
		items: ItemDeltaInfo[];
		regressRatio?: number;
		
	}

	export interface RegressRewardAckBuilder {
		new(): RegressRewardAck;
		decode(buffer: ArrayBuffer) : RegressRewardAck;
		//decode(buffer: NodeBuffer) : RegressRewardAck;
		//decode(buffer: ByteArrayBuffer) : RegressRewardAck;
		decode64(buffer: string) : RegressRewardAck;
		
	}
}


declare module pb {

	var RegressReq: RegressReq;
	export interface RegressReq extends ProtoBufModel {
		new(obj?: any): RegressReq;
		copyId?: number;
		tp?: number;
		
	}

	export interface RegressReqBuilder {
		new(): RegressReq;
		decode(buffer: ArrayBuffer) : RegressReq;
		//decode(buffer: NodeBuffer) : RegressReq;
		//decode(buffer: ByteArrayBuffer) : RegressReq;
		decode64(buffer: string) : RegressReq;
		
	}
}


declare module pb {

	var RegressAck: RegressAck;
	export interface RegressAck extends ProtoBufModel {
		new(obj?: any): RegressAck;
		items: ItemDeltaInfo[];
		lastRegressTime?: number;
		regressStartStage?: number;
		dailyADRegress?: number;
		
	}

	export interface RegressAckBuilder {
		new(): RegressAck;
		decode(buffer: ArrayBuffer) : RegressAck;
		//decode(buffer: NodeBuffer) : RegressAck;
		//decode(buffer: ByteArrayBuffer) : RegressAck;
		decode64(buffer: string) : RegressAck;
		
	}
}


declare module pb {

	var RegressResetReq: RegressResetReq;
	export interface RegressResetReq extends ProtoBufModel {
		new(obj?: any): RegressResetReq;
		
	}

	export interface RegressResetReqBuilder {
		new(): RegressResetReq;
		decode(buffer: ArrayBuffer) : RegressResetReq;
		//decode(buffer: NodeBuffer) : RegressResetReq;
		//decode(buffer: ByteArrayBuffer) : RegressResetReq;
		decode64(buffer: string) : RegressResetReq;
		
	}
}


declare module pb {

	var RegressResetAck: RegressResetAck;
	export interface RegressResetAck extends ProtoBufModel {
		new(obj?: any): RegressResetAck;
		lastRegressTime?: number;
		
	}

	export interface RegressResetAckBuilder {
		new(): RegressResetAck;
		decode(buffer: ArrayBuffer) : RegressResetAck;
		//decode(buffer: NodeBuffer) : RegressResetAck;
		//decode(buffer: ByteArrayBuffer) : RegressResetAck;
		decode64(buffer: string) : RegressResetAck;
		
	}
}


declare module pb {

	var StageAwardBoxNtf: StageAwardBoxNtf;
	export interface StageAwardBoxNtf extends ProtoBufModel {
		new(obj?: any): StageAwardBoxNtf;
		stageCount?: number;
		items: ItemDeltaInfo[];
		adCount?: number;
		
	}

	export interface StageAwardBoxNtfBuilder {
		new(): StageAwardBoxNtf;
		decode(buffer: ArrayBuffer) : StageAwardBoxNtf;
		//decode(buffer: NodeBuffer) : StageAwardBoxNtf;
		//decode(buffer: ByteArrayBuffer) : StageAwardBoxNtf;
		decode64(buffer: string) : StageAwardBoxNtf;
		
	}
}


declare module pb {

	var GainBoxReq: GainBoxReq;
	export interface GainBoxReq extends ProtoBufModel {
		new(obj?: any): GainBoxReq;
		type?: number;
		
	}

	export interface GainBoxReqBuilder {
		new(): GainBoxReq;
		decode(buffer: ArrayBuffer) : GainBoxReq;
		//decode(buffer: NodeBuffer) : GainBoxReq;
		//decode(buffer: ByteArrayBuffer) : GainBoxReq;
		decode64(buffer: string) : GainBoxReq;
		
	}
}


declare module pb {

	var GainBoxAck: GainBoxAck;
	export interface GainBoxAck extends ProtoBufModel {
		new(obj?: any): GainBoxAck;
		
	}

	export interface GainBoxAckBuilder {
		new(): GainBoxAck;
		decode(buffer: ArrayBuffer) : GainBoxAck;
		//decode(buffer: NodeBuffer) : GainBoxAck;
		//decode(buffer: ByteArrayBuffer) : GainBoxAck;
		decode64(buffer: string) : GainBoxAck;
		
	}
}


declare module pb {

	var TicketInfo: TicketInfo;
	export interface TicketInfo extends ProtoBufModel {
		new(obj?: any): TicketInfo;
		type?: number;
		count?: number;
		timeStamp?: number;
		adCount?: number;
		adMaxCount?: number;
		
	}

	export interface TicketInfoBuilder {
		new(): TicketInfo;
		decode(buffer: ArrayBuffer) : TicketInfo;
		//decode(buffer: NodeBuffer) : TicketInfo;
		//decode(buffer: ByteArrayBuffer) : TicketInfo;
		decode64(buffer: string) : TicketInfo;
		
	}
}


declare module pb {

	var TicketsInfoNtf: TicketsInfoNtf;
	export interface TicketsInfoNtf extends ProtoBufModel {
		new(obj?: any): TicketsInfoNtf;
		tickets: TicketInfo[];
		
	}

	export interface TicketsInfoNtfBuilder {
		new(): TicketsInfoNtf;
		decode(buffer: ArrayBuffer) : TicketsInfoNtf;
		//decode(buffer: NodeBuffer) : TicketsInfoNtf;
		//decode(buffer: ByteArrayBuffer) : TicketsInfoNtf;
		decode64(buffer: string) : TicketsInfoNtf;
		
	}
}


declare module pb {

	var DailyBossInfoReq: DailyBossInfoReq;
	export interface DailyBossInfoReq extends ProtoBufModel {
		new(obj?: any): DailyBossInfoReq;
		type?: number;
		
	}

	export interface DailyBossInfoReqBuilder {
		new(): DailyBossInfoReq;
		decode(buffer: ArrayBuffer) : DailyBossInfoReq;
		//decode(buffer: NodeBuffer) : DailyBossInfoReq;
		//decode(buffer: ByteArrayBuffer) : DailyBossInfoReq;
		decode64(buffer: string) : DailyBossInfoReq;
		
	}
}


declare module pb {

	var DailyBossInfoAck: DailyBossInfoAck;
	export interface DailyBossInfoAck extends ProtoBufModel {
		new(obj?: any): DailyBossInfoAck;
		type?: number;
		maxLevel?: number;
		
	}

	export interface DailyBossInfoAckBuilder {
		new(): DailyBossInfoAck;
		decode(buffer: ArrayBuffer) : DailyBossInfoAck;
		//decode(buffer: NodeBuffer) : DailyBossInfoAck;
		//decode(buffer: ByteArrayBuffer) : DailyBossInfoAck;
		decode64(buffer: string) : DailyBossInfoAck;
		
	}
}


declare module pb {

	var DailyBossEnterReq: DailyBossEnterReq;
	export interface DailyBossEnterReq extends ProtoBufModel {
		new(obj?: any): DailyBossEnterReq;
		index?: number;
		
	}

	export interface DailyBossEnterReqBuilder {
		new(): DailyBossEnterReq;
		decode(buffer: ArrayBuffer) : DailyBossEnterReq;
		//decode(buffer: NodeBuffer) : DailyBossEnterReq;
		//decode(buffer: ByteArrayBuffer) : DailyBossEnterReq;
		decode64(buffer: string) : DailyBossEnterReq;
		
	}
}


declare module pb {

	var DailyBossEnterAck: DailyBossEnterAck;
	export interface DailyBossEnterAck extends ProtoBufModel {
		new(obj?: any): DailyBossEnterAck;
		stage?: StageNtf;
		showReward: ItemDeltaInfo[];
		
	}

	export interface DailyBossEnterAckBuilder {
		new(): DailyBossEnterAck;
		decode(buffer: ArrayBuffer) : DailyBossEnterAck;
		//decode(buffer: NodeBuffer) : DailyBossEnterAck;
		//decode(buffer: ByteArrayBuffer) : DailyBossEnterAck;
		decode64(buffer: string) : DailyBossEnterAck;
		
	}
}


declare module pb {

	var DailyBossBattleFinishReq: DailyBossBattleFinishReq;
	export interface DailyBossBattleFinishReq extends ProtoBufModel {
		new(obj?: any): DailyBossBattleFinishReq;
		Id?: number;
		result?: number;
		fastPass?: boolean;
		
	}

	export interface DailyBossBattleFinishReqBuilder {
		new(): DailyBossBattleFinishReq;
		decode(buffer: ArrayBuffer) : DailyBossBattleFinishReq;
		//decode(buffer: NodeBuffer) : DailyBossBattleFinishReq;
		//decode(buffer: ByteArrayBuffer) : DailyBossBattleFinishReq;
		decode64(buffer: string) : DailyBossBattleFinishReq;
		
	}
}


declare module pb {

	var DailyBossBattleFinishAck: DailyBossBattleFinishAck;
	export interface DailyBossBattleFinishAck extends ProtoBufModel {
		new(obj?: any): DailyBossBattleFinishAck;
		Id?: number;
		maxLevel?: number;
		timeRecord?: number;
		
	}

	export interface DailyBossBattleFinishAckBuilder {
		new(): DailyBossBattleFinishAck;
		decode(buffer: ArrayBuffer) : DailyBossBattleFinishAck;
		//decode(buffer: NodeBuffer) : DailyBossBattleFinishAck;
		//decode(buffer: ByteArrayBuffer) : DailyBossBattleFinishAck;
		decode64(buffer: string) : DailyBossBattleFinishAck;
		
	}
}


declare module pb {

	var DailyBossBattleRewardReq: DailyBossBattleRewardReq;
	export interface DailyBossBattleRewardReq extends ProtoBufModel {
		new(obj?: any): DailyBossBattleRewardReq;
		Id?: number;
		tp?: number;
		
	}

	export interface DailyBossBattleRewardReqBuilder {
		new(): DailyBossBattleRewardReq;
		decode(buffer: ArrayBuffer) : DailyBossBattleRewardReq;
		//decode(buffer: NodeBuffer) : DailyBossBattleRewardReq;
		//decode(buffer: ByteArrayBuffer) : DailyBossBattleRewardReq;
		decode64(buffer: string) : DailyBossBattleRewardReq;
		
	}
}


declare module pb {

	var DailyBossBattleRewardAck: DailyBossBattleRewardAck;
	export interface DailyBossBattleRewardAck extends ProtoBufModel {
		new(obj?: any): DailyBossBattleRewardAck;
		Id?: number;
		reward: ItemDeltaInfo[];
		
	}

	export interface DailyBossBattleRewardAckBuilder {
		new(): DailyBossBattleRewardAck;
		decode(buffer: ArrayBuffer) : DailyBossBattleRewardAck;
		//decode(buffer: NodeBuffer) : DailyBossBattleRewardAck;
		//decode(buffer: ByteArrayBuffer) : DailyBossBattleRewardAck;
		decode64(buffer: string) : DailyBossBattleRewardAck;
		
	}
}


declare module pb {

	var TicketBuyReq: TicketBuyReq;
	export interface TicketBuyReq extends ProtoBufModel {
		new(obj?: any): TicketBuyReq;
		type?: number;
		buyType?: number;
		
	}

	export interface TicketBuyReqBuilder {
		new(): TicketBuyReq;
		decode(buffer: ArrayBuffer) : TicketBuyReq;
		//decode(buffer: NodeBuffer) : TicketBuyReq;
		//decode(buffer: ByteArrayBuffer) : TicketBuyReq;
		decode64(buffer: string) : TicketBuyReq;
		
	}
}


declare module pb {

	var TicketBuyAck: TicketBuyAck;
	export interface TicketBuyAck extends ProtoBufModel {
		new(obj?: any): TicketBuyAck;
		result?: number;
		ticket?: TicketInfo;
		
	}

	export interface TicketBuyAckBuilder {
		new(): TicketBuyAck;
		decode(buffer: ArrayBuffer) : TicketBuyAck;
		//decode(buffer: NodeBuffer) : TicketBuyAck;
		//decode(buffer: ByteArrayBuffer) : TicketBuyAck;
		decode64(buffer: string) : TicketBuyAck;
		
	}
}


declare module pb {

	var TicketNtf: TicketNtf;
	export interface TicketNtf extends ProtoBufModel {
		new(obj?: any): TicketNtf;
		ticket?: TicketInfo;
		
	}

	export interface TicketNtfBuilder {
		new(): TicketNtf;
		decode(buffer: ArrayBuffer) : TicketNtf;
		//decode(buffer: NodeBuffer) : TicketNtf;
		//decode(buffer: ByteArrayBuffer) : TicketNtf;
		decode64(buffer: string) : TicketNtf;
		
	}
}


declare module pb {

	var ResearchTicketADCountNtf: ResearchTicketADCountNtf;
	export interface ResearchTicketADCountNtf extends ProtoBufModel {
		new(obj?: any): ResearchTicketADCountNtf;
		count?: number;
		max?: number;
		type?: number;
		
	}

	export interface ResearchTicketADCountNtfBuilder {
		new(): ResearchTicketADCountNtf;
		decode(buffer: ArrayBuffer) : ResearchTicketADCountNtf;
		//decode(buffer: NodeBuffer) : ResearchTicketADCountNtf;
		//decode(buffer: ByteArrayBuffer) : ResearchTicketADCountNtf;
		decode64(buffer: string) : ResearchTicketADCountNtf;
		
	}
}


declare module pb {

	var LegendaryBossInfoReq: LegendaryBossInfoReq;
	export interface LegendaryBossInfoReq extends ProtoBufModel {
		new(obj?: any): LegendaryBossInfoReq;
		id?: number;
		
	}

	export interface LegendaryBossInfoReqBuilder {
		new(): LegendaryBossInfoReq;
		decode(buffer: ArrayBuffer) : LegendaryBossInfoReq;
		//decode(buffer: NodeBuffer) : LegendaryBossInfoReq;
		//decode(buffer: ByteArrayBuffer) : LegendaryBossInfoReq;
		decode64(buffer: string) : LegendaryBossInfoReq;
		
	}
}


declare module pb {

	var LegendaryBossInfoAck: LegendaryBossInfoAck;
	export interface LegendaryBossInfoAck extends ProtoBufModel {
		new(obj?: any): LegendaryBossInfoAck;
		maxLevel?: number;
		damage?: number;
		
	}

	export interface LegendaryBossInfoAckBuilder {
		new(): LegendaryBossInfoAck;
		decode(buffer: ArrayBuffer) : LegendaryBossInfoAck;
		//decode(buffer: NodeBuffer) : LegendaryBossInfoAck;
		//decode(buffer: ByteArrayBuffer) : LegendaryBossInfoAck;
		decode64(buffer: string) : LegendaryBossInfoAck;
		
	}
}


declare module pb {

	var LegendaryBossEnterReq: LegendaryBossEnterReq;
	export interface LegendaryBossEnterReq extends ProtoBufModel {
		new(obj?: any): LegendaryBossEnterReq;
		id?: number;
		
	}

	export interface LegendaryBossEnterReqBuilder {
		new(): LegendaryBossEnterReq;
		decode(buffer: ArrayBuffer) : LegendaryBossEnterReq;
		//decode(buffer: NodeBuffer) : LegendaryBossEnterReq;
		//decode(buffer: ByteArrayBuffer) : LegendaryBossEnterReq;
		decode64(buffer: string) : LegendaryBossEnterReq;
		
	}
}


declare module pb {

	var LegendaryBossEnterAck: LegendaryBossEnterAck;
	export interface LegendaryBossEnterAck extends ProtoBufModel {
		new(obj?: any): LegendaryBossEnterAck;
		stage?: StageNtf;
		maxLevel?: number;
		
	}

	export interface LegendaryBossEnterAckBuilder {
		new(): LegendaryBossEnterAck;
		decode(buffer: ArrayBuffer) : LegendaryBossEnterAck;
		//decode(buffer: NodeBuffer) : LegendaryBossEnterAck;
		//decode(buffer: ByteArrayBuffer) : LegendaryBossEnterAck;
		decode64(buffer: string) : LegendaryBossEnterAck;
		
	}
}


declare module pb {

	var LegendaryBossBattleFinishReq: LegendaryBossBattleFinishReq;
	export interface LegendaryBossBattleFinishReq extends ProtoBufModel {
		new(obj?: any): LegendaryBossBattleFinishReq;
		Id?: number;
		level?: number;
		damage?: number;
		
	}

	export interface LegendaryBossBattleFinishReqBuilder {
		new(): LegendaryBossBattleFinishReq;
		decode(buffer: ArrayBuffer) : LegendaryBossBattleFinishReq;
		//decode(buffer: NodeBuffer) : LegendaryBossBattleFinishReq;
		//decode(buffer: ByteArrayBuffer) : LegendaryBossBattleFinishReq;
		decode64(buffer: string) : LegendaryBossBattleFinishReq;
		
	}
}


declare module pb {

	var LegendaryBossBattleFinishAck: LegendaryBossBattleFinishAck;
	export interface LegendaryBossBattleFinishAck extends ProtoBufModel {
		new(obj?: any): LegendaryBossBattleFinishAck;
		maxLevel?: number;
		
	}

	export interface LegendaryBossBattleFinishAckBuilder {
		new(): LegendaryBossBattleFinishAck;
		decode(buffer: ArrayBuffer) : LegendaryBossBattleFinishAck;
		//decode(buffer: NodeBuffer) : LegendaryBossBattleFinishAck;
		//decode(buffer: ByteArrayBuffer) : LegendaryBossBattleFinishAck;
		decode64(buffer: string) : LegendaryBossBattleFinishAck;
		
	}
}


declare module pb {

	var LegendaryBossBattleRewardReq: LegendaryBossBattleRewardReq;
	export interface LegendaryBossBattleRewardReq extends ProtoBufModel {
		new(obj?: any): LegendaryBossBattleRewardReq;
		Id?: number;
		tp?: number;
		level?: number;
		
	}

	export interface LegendaryBossBattleRewardReqBuilder {
		new(): LegendaryBossBattleRewardReq;
		decode(buffer: ArrayBuffer) : LegendaryBossBattleRewardReq;
		//decode(buffer: NodeBuffer) : LegendaryBossBattleRewardReq;
		//decode(buffer: ByteArrayBuffer) : LegendaryBossBattleRewardReq;
		decode64(buffer: string) : LegendaryBossBattleRewardReq;
		
	}
}


declare module pb {

	var LegendaryBossBattleRewardAck: LegendaryBossBattleRewardAck;
	export interface LegendaryBossBattleRewardAck extends ProtoBufModel {
		new(obj?: any): LegendaryBossBattleRewardAck;
		Id?: number;
		reward: ItemDeltaInfo[];
		
	}

	export interface LegendaryBossBattleRewardAckBuilder {
		new(): LegendaryBossBattleRewardAck;
		decode(buffer: ArrayBuffer) : LegendaryBossBattleRewardAck;
		//decode(buffer: NodeBuffer) : LegendaryBossBattleRewardAck;
		//decode(buffer: ByteArrayBuffer) : LegendaryBossBattleRewardAck;
		decode64(buffer: string) : LegendaryBossBattleRewardAck;
		
	}
}


declare module pb {

	var LegendrayBossNextInfoReq: LegendrayBossNextInfoReq;
	export interface LegendrayBossNextInfoReq extends ProtoBufModel {
		new(obj?: any): LegendrayBossNextInfoReq;
		id?: number;
		
	}

	export interface LegendrayBossNextInfoReqBuilder {
		new(): LegendrayBossNextInfoReq;
		decode(buffer: ArrayBuffer) : LegendrayBossNextInfoReq;
		//decode(buffer: NodeBuffer) : LegendrayBossNextInfoReq;
		//decode(buffer: ByteArrayBuffer) : LegendrayBossNextInfoReq;
		decode64(buffer: string) : LegendrayBossNextInfoReq;
		
	}
}


declare module pb {

	var LegendrayBossNextInfoAck: LegendrayBossNextInfoAck;
	export interface LegendrayBossNextInfoAck extends ProtoBufModel {
		new(obj?: any): LegendrayBossNextInfoAck;
		stage?: StageNtf;
		
	}

	export interface LegendrayBossNextInfoAckBuilder {
		new(): LegendrayBossNextInfoAck;
		decode(buffer: ArrayBuffer) : LegendrayBossNextInfoAck;
		//decode(buffer: NodeBuffer) : LegendrayBossNextInfoAck;
		//decode(buffer: ByteArrayBuffer) : LegendrayBossNextInfoAck;
		decode64(buffer: string) : LegendrayBossNextInfoAck;
		
	}
}


declare module pb {

	var LegendaryBossDamageRankReq: LegendaryBossDamageRankReq;
	export interface LegendaryBossDamageRankReq extends ProtoBufModel {
		new(obj?: any): LegendaryBossDamageRankReq;
		id?: number;
		
	}

	export interface LegendaryBossDamageRankReqBuilder {
		new(): LegendaryBossDamageRankReq;
		decode(buffer: ArrayBuffer) : LegendaryBossDamageRankReq;
		//decode(buffer: NodeBuffer) : LegendaryBossDamageRankReq;
		//decode(buffer: ByteArrayBuffer) : LegendaryBossDamageRankReq;
		decode64(buffer: string) : LegendaryBossDamageRankReq;
		
	}
}


declare module pb {

	var LegendaryBossRankInfo: LegendaryBossRankInfo;
	export interface LegendaryBossRankInfo extends ProtoBufModel {
		new(obj?: any): LegendaryBossRankInfo;
		guildIcon?: string;
		rank?: number;
		userName?: string;
		damage?: number;
		avatar?: string;
		vipLvl?: number;
		lvl?: number;
		serverId?: number;
		userId?: number;
		
	}

	export interface LegendaryBossRankInfoBuilder {
		new(): LegendaryBossRankInfo;
		decode(buffer: ArrayBuffer) : LegendaryBossRankInfo;
		//decode(buffer: NodeBuffer) : LegendaryBossRankInfo;
		//decode(buffer: ByteArrayBuffer) : LegendaryBossRankInfo;
		decode64(buffer: string) : LegendaryBossRankInfo;
		
	}
}


declare module pb {

	var LegendaryBossDamageRankAck: LegendaryBossDamageRankAck;
	export interface LegendaryBossDamageRankAck extends ProtoBufModel {
		new(obj?: any): LegendaryBossDamageRankAck;
		infos: LegendaryBossRankInfo[];
		myRank?: number;
		damage?: number;
		
	}

	export interface LegendaryBossDamageRankAckBuilder {
		new(): LegendaryBossDamageRankAck;
		decode(buffer: ArrayBuffer) : LegendaryBossDamageRankAck;
		//decode(buffer: NodeBuffer) : LegendaryBossDamageRankAck;
		//decode(buffer: ByteArrayBuffer) : LegendaryBossDamageRankAck;
		decode64(buffer: string) : LegendaryBossDamageRankAck;
		
	}
}


declare module pb {

	var BoxRewardInfoNtf: BoxRewardInfoNtf;
	export interface BoxRewardInfoNtf extends ProtoBufModel {
		new(obj?: any): BoxRewardInfoNtf;
		count?: number;
		times?: number;
		getItemId?: number;
		getValue?: number;
		lastRewardtime?: number;
		flag?: boolean;
		
	}

	export interface BoxRewardInfoNtfBuilder {
		new(): BoxRewardInfoNtf;
		decode(buffer: ArrayBuffer) : BoxRewardInfoNtf;
		//decode(buffer: NodeBuffer) : BoxRewardInfoNtf;
		//decode(buffer: ByteArrayBuffer) : BoxRewardInfoNtf;
		decode64(buffer: string) : BoxRewardInfoNtf;
		
	}
}


declare module pb {

	var BoxRewardRefreshRpt: BoxRewardRefreshRpt;
	export interface BoxRewardRefreshRpt extends ProtoBufModel {
		new(obj?: any): BoxRewardRefreshRpt;
		
	}

	export interface BoxRewardRefreshRptBuilder {
		new(): BoxRewardRefreshRpt;
		decode(buffer: ArrayBuffer) : BoxRewardRefreshRpt;
		//decode(buffer: NodeBuffer) : BoxRewardRefreshRpt;
		//decode(buffer: ByteArrayBuffer) : BoxRewardRefreshRpt;
		decode64(buffer: string) : BoxRewardRefreshRpt;
		
	}
}


declare module pb {

	var BoxRewardReq: BoxRewardReq;
	export interface BoxRewardReq extends ProtoBufModel {
		new(obj?: any): BoxRewardReq;
		
	}

	export interface BoxRewardReqBuilder {
		new(): BoxRewardReq;
		decode(buffer: ArrayBuffer) : BoxRewardReq;
		//decode(buffer: NodeBuffer) : BoxRewardReq;
		//decode(buffer: ByteArrayBuffer) : BoxRewardReq;
		decode64(buffer: string) : BoxRewardReq;
		
	}
}


declare module pb {

	var BoxRewardAck: BoxRewardAck;
	export interface BoxRewardAck extends ProtoBufModel {
		new(obj?: any): BoxRewardAck;
		iteminfo?: ItemDeltaInfo;
		
	}

	export interface BoxRewardAckBuilder {
		new(): BoxRewardAck;
		decode(buffer: ArrayBuffer) : BoxRewardAck;
		//decode(buffer: NodeBuffer) : BoxRewardAck;
		//decode(buffer: ByteArrayBuffer) : BoxRewardAck;
		decode64(buffer: string) : BoxRewardAck;
		
	}
}


declare module pb {

	var ChatRpt: ChatRpt;
	export interface ChatRpt extends ProtoBufModel {
		new(obj?: any): ChatRpt;
		chatType?: number;
		message?: string;
		
	}

	export interface ChatRptBuilder {
		new(): ChatRpt;
		decode(buffer: ArrayBuffer) : ChatRpt;
		//decode(buffer: NodeBuffer) : ChatRpt;
		//decode(buffer: ByteArrayBuffer) : ChatRpt;
		decode64(buffer: string) : ChatRpt;
		
	}
}


declare module pb {

	var ChatBriefUserInfo: ChatBriefUserInfo;
	export interface ChatBriefUserInfo extends ProtoBufModel {
		new(obj?: any): ChatBriefUserInfo;
		id?: number;
		name?: string;
		lvl?: number;
		vip?: number;
		combat?: number;
		avatar?: string;
		serverid?: number;
		
	}

	export interface ChatBriefUserInfoBuilder {
		new(): ChatBriefUserInfo;
		decode(buffer: ArrayBuffer) : ChatBriefUserInfo;
		//decode(buffer: NodeBuffer) : ChatBriefUserInfo;
		//decode(buffer: ByteArrayBuffer) : ChatBriefUserInfo;
		decode64(buffer: string) : ChatBriefUserInfo;
		
	}
}


declare module pb {

	var ChatMessageNtf: ChatMessageNtf;
	export interface ChatMessageNtf extends ProtoBufModel {
		new(obj?: any): ChatMessageNtf;
		sender?: ChatBriefUserInfo;
		type?: number;
		msg?: string;
		ts?: number;
		toId?: number;
		
	}

	export interface ChatMessageNtfBuilder {
		new(): ChatMessageNtf;
		decode(buffer: ArrayBuffer) : ChatMessageNtf;
		//decode(buffer: NodeBuffer) : ChatMessageNtf;
		//decode(buffer: ByteArrayBuffer) : ChatMessageNtf;
		decode64(buffer: string) : ChatMessageNtf;
		
	}
}


declare module pb {

	var ChatSendReq: ChatSendReq;
	export interface ChatSendReq extends ProtoBufModel {
		new(obj?: any): ChatSendReq;
		toId?: number;
		type?: number;
		msg?: string;
		
	}

	export interface ChatSendReqBuilder {
		new(): ChatSendReq;
		decode(buffer: ArrayBuffer) : ChatSendReq;
		//decode(buffer: NodeBuffer) : ChatSendReq;
		//decode(buffer: ByteArrayBuffer) : ChatSendReq;
		decode64(buffer: string) : ChatSendReq;
		
	}
}


declare module pb {

	var ChatSendAck: ChatSendAck;
	export interface ChatSendAck extends ProtoBufModel {
		new(obj?: any): ChatSendAck;
		
	}

	export interface ChatSendAckBuilder {
		new(): ChatSendAck;
		decode(buffer: ArrayBuffer) : ChatSendAck;
		//decode(buffer: NodeBuffer) : ChatSendAck;
		//decode(buffer: ByteArrayBuffer) : ChatSendAck;
		decode64(buffer: string) : ChatSendAck;
		
	}
}


declare module pb {

	var ChatLoadReq: ChatLoadReq;
	export interface ChatLoadReq extends ProtoBufModel {
		new(obj?: any): ChatLoadReq;
		type?: number;
		
	}

	export interface ChatLoadReqBuilder {
		new(): ChatLoadReq;
		decode(buffer: ArrayBuffer) : ChatLoadReq;
		//decode(buffer: NodeBuffer) : ChatLoadReq;
		//decode(buffer: ByteArrayBuffer) : ChatLoadReq;
		decode64(buffer: string) : ChatLoadReq;
		
	}
}


declare module pb {

	var ChatLoadAck: ChatLoadAck;
	export interface ChatLoadAck extends ProtoBufModel {
		new(obj?: any): ChatLoadAck;
		msgs: ChatMessageNtf[];
		
	}

	export interface ChatLoadAckBuilder {
		new(): ChatLoadAck;
		decode(buffer: ArrayBuffer) : ChatLoadAck;
		//decode(buffer: NodeBuffer) : ChatLoadAck;
		//decode(buffer: ByteArrayBuffer) : ChatLoadAck;
		decode64(buffer: string) : ChatLoadAck;
		
	}
}


declare module pb {

	var DragonHatchReq: DragonHatchReq;
	export interface DragonHatchReq extends ProtoBufModel {
		new(obj?: any): DragonHatchReq;
		
	}

	export interface DragonHatchReqBuilder {
		new(): DragonHatchReq;
		decode(buffer: ArrayBuffer) : DragonHatchReq;
		//decode(buffer: NodeBuffer) : DragonHatchReq;
		//decode(buffer: ByteArrayBuffer) : DragonHatchReq;
		decode64(buffer: string) : DragonHatchReq;
		
	}
}


declare module pb {

	var DragonHatchAck: DragonHatchAck;
	export interface DragonHatchAck extends ProtoBufModel {
		new(obj?: any): DragonHatchAck;
		
	}

	export interface DragonHatchAckBuilder {
		new(): DragonHatchAck;
		decode(buffer: ArrayBuffer) : DragonHatchAck;
		//decode(buffer: NodeBuffer) : DragonHatchAck;
		//decode(buffer: ByteArrayBuffer) : DragonHatchAck;
		decode64(buffer: string) : DragonHatchAck;
		
	}
}


declare module pb {

	var EggBornRpt: EggBornRpt;
	export interface EggBornRpt extends ProtoBufModel {
		new(obj?: any): EggBornRpt;
		
	}

	export interface EggBornRptBuilder {
		new(): EggBornRpt;
		decode(buffer: ArrayBuffer) : EggBornRpt;
		//decode(buffer: NodeBuffer) : EggBornRpt;
		//decode(buffer: ByteArrayBuffer) : EggBornRpt;
		decode64(buffer: string) : EggBornRpt;
		
	}
}


declare module pb {

	var DragonBornNtf: DragonBornNtf;
	export interface DragonBornNtf extends ProtoBufModel {
		new(obj?: any): DragonBornNtf;
		bornType?: number;
		dragons: DragonInfo[];
		teams: DragonTeam[];
		
	}

	export interface DragonBornNtfBuilder {
		new(): DragonBornNtf;
		decode(buffer: ArrayBuffer) : DragonBornNtf;
		//decode(buffer: NodeBuffer) : DragonBornNtf;
		//decode(buffer: ByteArrayBuffer) : DragonBornNtf;
		decode64(buffer: string) : DragonBornNtf;
		
	}
}


declare module pb {

	var DragonNtf: DragonNtf;
	export interface DragonNtf extends ProtoBufModel {
		new(obj?: any): DragonNtf;
		dragons: DragonInfo[];
		
	}

	export interface DragonNtfBuilder {
		new(): DragonNtf;
		decode(buffer: ArrayBuffer) : DragonNtf;
		//decode(buffer: NodeBuffer) : DragonNtf;
		//decode(buffer: ByteArrayBuffer) : DragonNtf;
		decode64(buffer: string) : DragonNtf;
		
	}
}


declare module pb {

	var EggNtf: EggNtf;
	export interface EggNtf extends ProtoBufModel {
		new(obj?: any): EggNtf;
		curNum?: number;
		maxNum?: number;
		curNumToday?: number;
		
	}

	export interface EggNtfBuilder {
		new(): EggNtf;
		decode(buffer: ArrayBuffer) : EggNtf;
		//decode(buffer: NodeBuffer) : EggNtf;
		//decode(buffer: ByteArrayBuffer) : EggNtf;
		decode64(buffer: string) : EggNtf;
		
	}
}


declare module pb {

	var EggSpeedReq: EggSpeedReq;
	export interface EggSpeedReq extends ProtoBufModel {
		new(obj?: any): EggSpeedReq;
		aceType?: number;
		
	}

	export interface EggSpeedReqBuilder {
		new(): EggSpeedReq;
		decode(buffer: ArrayBuffer) : EggSpeedReq;
		//decode(buffer: NodeBuffer) : EggSpeedReq;
		//decode(buffer: ByteArrayBuffer) : EggSpeedReq;
		decode64(buffer: string) : EggSpeedReq;
		
	}
}


declare module pb {

	var EggSpeedAck: EggSpeedAck;
	export interface EggSpeedAck extends ProtoBufModel {
		new(obj?: any): EggSpeedAck;
		result?: boolean;
		
	}

	export interface EggSpeedAckBuilder {
		new(): EggSpeedAck;
		decode(buffer: ArrayBuffer) : EggSpeedAck;
		//decode(buffer: NodeBuffer) : EggSpeedAck;
		//decode(buffer: ByteArrayBuffer) : EggSpeedAck;
		decode64(buffer: string) : EggSpeedAck;
		
	}
}


declare module pb {

	var AutoPlayReq: AutoPlayReq;
	export interface AutoPlayReq extends ProtoBufModel {
		new(obj?: any): AutoPlayReq;
		state?: number;
		
	}

	export interface AutoPlayReqBuilder {
		new(): AutoPlayReq;
		decode(buffer: ArrayBuffer) : AutoPlayReq;
		//decode(buffer: NodeBuffer) : AutoPlayReq;
		//decode(buffer: ByteArrayBuffer) : AutoPlayReq;
		decode64(buffer: string) : AutoPlayReq;
		
	}
}


declare module pb {

	var AutoPlayTimeAddRpt: AutoPlayTimeAddRpt;
	export interface AutoPlayTimeAddRpt extends ProtoBufModel {
		new(obj?: any): AutoPlayTimeAddRpt;
		tp?: number;
		
	}

	export interface AutoPlayTimeAddRptBuilder {
		new(): AutoPlayTimeAddRpt;
		decode(buffer: ArrayBuffer) : AutoPlayTimeAddRpt;
		//decode(buffer: NodeBuffer) : AutoPlayTimeAddRpt;
		//decode(buffer: ByteArrayBuffer) : AutoPlayTimeAddRpt;
		decode64(buffer: string) : AutoPlayTimeAddRpt;
		
	}
}


declare module pb {

	var EggSpeedNtf: EggSpeedNtf;
	export interface EggSpeedNtf extends ProtoBufModel {
		new(obj?: any): EggSpeedNtf;
		status?: number;
		aceType?: number;
		hatchSpeed?: number;
		fuseSpeed?: number;
		aceStartTime?: number;
		aceEndTime?: number;
		bornSpeed?: number;
		autoStartTime?: number;
		autoEndTime?: number;
		autoState?: number;
		autoType?: number;
		shareTimes?: number;
		autoplayAdCount?: number;
		
	}

	export interface EggSpeedNtfBuilder {
		new(): EggSpeedNtf;
		decode(buffer: ArrayBuffer) : EggSpeedNtf;
		//decode(buffer: NodeBuffer) : EggSpeedNtf;
		//decode(buffer: ByteArrayBuffer) : EggSpeedNtf;
		decode64(buffer: string) : EggSpeedNtf;
		
	}
}


declare module pb {

	var DragonFuseReq: DragonFuseReq;
	export interface DragonFuseReq extends ProtoBufModel {
		new(obj?: any): DragonFuseReq;
		dragonId1?: number;
		dragonId2?: number;
		posX?: number;
		posY?: number;
		
	}

	export interface DragonFuseReqBuilder {
		new(): DragonFuseReq;
		decode(buffer: ArrayBuffer) : DragonFuseReq;
		//decode(buffer: NodeBuffer) : DragonFuseReq;
		//decode(buffer: ByteArrayBuffer) : DragonFuseReq;
		decode64(buffer: string) : DragonFuseReq;
		
	}
}


declare module pb {

	var DragonFuseAppendReq: DragonFuseAppendReq;
	export interface DragonFuseAppendReq extends ProtoBufModel {
		new(obj?: any): DragonFuseAppendReq;
		dragonId?: number;
		
	}

	export interface DragonFuseAppendReqBuilder {
		new(): DragonFuseAppendReq;
		decode(buffer: ArrayBuffer) : DragonFuseAppendReq;
		//decode(buffer: NodeBuffer) : DragonFuseAppendReq;
		//decode(buffer: ByteArrayBuffer) : DragonFuseAppendReq;
		decode64(buffer: string) : DragonFuseAppendReq;
		
	}
}


declare module pb {

	var DragonFuseAppendAck: DragonFuseAppendAck;
	export interface DragonFuseAppendAck extends ProtoBufModel {
		new(obj?: any): DragonFuseAppendAck;
		reducedInfo: PropInfo[];
		dragons: DragonInfo[];
		memberUpdate?: TeamMemberUpdate;
		showHoldDragonId?: number;
		
	}

	export interface DragonFuseAppendAckBuilder {
		new(): DragonFuseAppendAck;
		decode(buffer: ArrayBuffer) : DragonFuseAppendAck;
		//decode(buffer: NodeBuffer) : DragonFuseAppendAck;
		//decode(buffer: ByteArrayBuffer) : DragonFuseAppendAck;
		decode64(buffer: string) : DragonFuseAppendAck;
		
	}
}


declare module pb {

	var DragonFuseAck: DragonFuseAck;
	export interface DragonFuseAck extends ProtoBufModel {
		new(obj?: any): DragonFuseAck;
		reducedInfo: PropInfo[];
		dragons: DragonInfo[];
		memberUpdate?: TeamMemberUpdate;
		showHoldDragonId?: number;
		rewardItems: ItemDeltaInfo[];
		
	}

	export interface DragonFuseAckBuilder {
		new(): DragonFuseAck;
		decode(buffer: ArrayBuffer) : DragonFuseAck;
		//decode(buffer: NodeBuffer) : DragonFuseAck;
		//decode(buffer: ByteArrayBuffer) : DragonFuseAck;
		decode64(buffer: string) : DragonFuseAck;
		
	}
}


declare module pb {

	var DragonPos: DragonPos;
	export interface DragonPos extends ProtoBufModel {
		new(obj?: any): DragonPos;
		teamType?: number;
		id?: number;
		posX?: number;
		posY?: number;
		
	}

	export interface DragonPosBuilder {
		new(): DragonPos;
		decode(buffer: ArrayBuffer) : DragonPos;
		//decode(buffer: NodeBuffer) : DragonPos;
		//decode(buffer: ByteArrayBuffer) : DragonPos;
		decode64(buffer: string) : DragonPos;
		
	}
}


declare module pb {

	var DragonPosRpt: DragonPosRpt;
	export interface DragonPosRpt extends ProtoBufModel {
		new(obj?: any): DragonPosRpt;
		pos: DragonPos[];
		
	}

	export interface DragonPosRptBuilder {
		new(): DragonPosRpt;
		decode(buffer: ArrayBuffer) : DragonPosRpt;
		//decode(buffer: NodeBuffer) : DragonPosRpt;
		//decode(buffer: ByteArrayBuffer) : DragonPosRpt;
		decode64(buffer: string) : DragonPosRpt;
		
	}
}


declare module pb {

	var GiveupVarRpt: GiveupVarRpt;
	export interface GiveupVarRpt extends ProtoBufModel {
		new(obj?: any): GiveupVarRpt;
		tp?: number;
		
	}

	export interface GiveupVarRptBuilder {
		new(): GiveupVarRpt;
		decode(buffer: ArrayBuffer) : GiveupVarRpt;
		//decode(buffer: NodeBuffer) : GiveupVarRpt;
		//decode(buffer: ByteArrayBuffer) : GiveupVarRpt;
		decode64(buffer: string) : GiveupVarRpt;
		
	}
}


declare module pb {

	var TeamSize: TeamSize;
	export interface TeamSize extends ProtoBufModel {
		new(obj?: any): TeamSize;
		teamType?: number;
		allowedCount?: number;
		maxCount?: number;
		
	}

	export interface TeamSizeBuilder {
		new(): TeamSize;
		decode(buffer: ArrayBuffer) : TeamSize;
		//decode(buffer: NodeBuffer) : TeamSize;
		//decode(buffer: ByteArrayBuffer) : TeamSize;
		decode64(buffer: string) : TeamSize;
		
	}
}


declare module pb {

	var TeamSizeNtf: TeamSizeNtf;
	export interface TeamSizeNtf extends ProtoBufModel {
		new(obj?: any): TeamSizeNtf;
		teamSizes: TeamSize[];
		
	}

	export interface TeamSizeNtfBuilder {
		new(): TeamSizeNtf;
		decode(buffer: ArrayBuffer) : TeamSizeNtf;
		//decode(buffer: NodeBuffer) : TeamSizeNtf;
		//decode(buffer: ByteArrayBuffer) : TeamSizeNtf;
		decode64(buffer: string) : TeamSizeNtf;
		
	}
}


declare module pb {

	var DragonLvlUpReq: DragonLvlUpReq;
	export interface DragonLvlUpReq extends ProtoBufModel {
		new(obj?: any): DragonLvlUpReq;
		index?: number;
		num?: number;
		
	}

	export interface DragonLvlUpReqBuilder {
		new(): DragonLvlUpReq;
		decode(buffer: ArrayBuffer) : DragonLvlUpReq;
		//decode(buffer: NodeBuffer) : DragonLvlUpReq;
		//decode(buffer: ByteArrayBuffer) : DragonLvlUpReq;
		decode64(buffer: string) : DragonLvlUpReq;
		
	}
}


declare module pb {

	var DragonUpgradeReq: DragonUpgradeReq;
	export interface DragonUpgradeReq extends ProtoBufModel {
		new(obj?: any): DragonUpgradeReq;
		index?: number;
		star?: number;
		
	}

	export interface DragonUpgradeReqBuilder {
		new(): DragonUpgradeReq;
		decode(buffer: ArrayBuffer) : DragonUpgradeReq;
		//decode(buffer: NodeBuffer) : DragonUpgradeReq;
		//decode(buffer: ByteArrayBuffer) : DragonUpgradeReq;
		decode64(buffer: string) : DragonUpgradeReq;
		
	}
}


declare module pb {

	var DragonUpgradeAck: DragonUpgradeAck;
	export interface DragonUpgradeAck extends ProtoBufModel {
		new(obj?: any): DragonUpgradeAck;
		teamMemberUpdates: TeamMemberUpdate[];
		
	}

	export interface DragonUpgradeAckBuilder {
		new(): DragonUpgradeAck;
		decode(buffer: ArrayBuffer) : DragonUpgradeAck;
		//decode(buffer: NodeBuffer) : DragonUpgradeAck;
		//decode(buffer: ByteArrayBuffer) : DragonUpgradeAck;
		decode64(buffer: string) : DragonUpgradeAck;
		
	}
}


declare module pb {

	var DragonEnhanceReq: DragonEnhanceReq;
	export interface DragonEnhanceReq extends ProtoBufModel {
		new(obj?: any): DragonEnhanceReq;
		index?: number;
		enhanceId?: number;
		num?: number;
		
	}

	export interface DragonEnhanceReqBuilder {
		new(): DragonEnhanceReq;
		decode(buffer: ArrayBuffer) : DragonEnhanceReq;
		//decode(buffer: NodeBuffer) : DragonEnhanceReq;
		//decode(buffer: ByteArrayBuffer) : DragonEnhanceReq;
		decode64(buffer: string) : DragonEnhanceReq;
		
	}
}


declare module pb {

	var DragonEnhanceAck: DragonEnhanceAck;
	export interface DragonEnhanceAck extends ProtoBufModel {
		new(obj?: any): DragonEnhanceAck;
		enhance?: DragonEnhance;
		status?: number;
		msg?: ErrorAck;
		
	}

	export interface DragonEnhanceAckBuilder {
		new(): DragonEnhanceAck;
		decode(buffer: ArrayBuffer) : DragonEnhanceAck;
		//decode(buffer: NodeBuffer) : DragonEnhanceAck;
		//decode(buffer: ByteArrayBuffer) : DragonEnhanceAck;
		decode64(buffer: string) : DragonEnhanceAck;
		
	}
}


declare module pb {

	var DragonDetailReq: DragonDetailReq;
	export interface DragonDetailReq extends ProtoBufModel {
		new(obj?: any): DragonDetailReq;
		index?: number;
		isPiece?: boolean;
		star?: number;
		
	}

	export interface DragonDetailReqBuilder {
		new(): DragonDetailReq;
		decode(buffer: ArrayBuffer) : DragonDetailReq;
		//decode(buffer: NodeBuffer) : DragonDetailReq;
		//decode(buffer: ByteArrayBuffer) : DragonDetailReq;
		decode64(buffer: string) : DragonDetailReq;
		
	}
}


declare module pb {

	var DragonDetailAck: DragonDetailAck;
	export interface DragonDetailAck extends ProtoBufModel {
		new(obj?: any): DragonDetailAck;
		enhances: DragonEnhance[];
		effects: DragonEffect[];
		baseDragonInfo?: DragonInfo;
		enhanceMaxLvlList: dcodeIO.ProtoBuf.Map<number,number>;
		
	}

	export interface DragonDetailAckBuilder {
		new(): DragonDetailAck;
		decode(buffer: ArrayBuffer) : DragonDetailAck;
		//decode(buffer: NodeBuffer) : DragonDetailAck;
		//decode(buffer: ByteArrayBuffer) : DragonDetailAck;
		decode64(buffer: string) : DragonDetailAck;
		
	}
}


declare module pb {

	var SetTeamReq: SetTeamReq;
	export interface SetTeamReq extends ProtoBufModel {
		new(obj?: any): SetTeamReq;
		teamType?: number;
		members: PropInfo[];
		
	}

	export interface SetTeamReqBuilder {
		new(): SetTeamReq;
		decode(buffer: ArrayBuffer) : SetTeamReq;
		//decode(buffer: NodeBuffer) : SetTeamReq;
		//decode(buffer: ByteArrayBuffer) : SetTeamReq;
		decode64(buffer: string) : SetTeamReq;
		
	}
}


declare module pb {

	var SetTeamAck: SetTeamAck;
	export interface SetTeamAck extends ProtoBufModel {
		new(obj?: any): SetTeamAck;
		team?: DragonTeam;
		
	}

	export interface SetTeamAckBuilder {
		new(): SetTeamAck;
		decode(buffer: ArrayBuffer) : SetTeamAck;
		//decode(buffer: NodeBuffer) : SetTeamAck;
		//decode(buffer: ByteArrayBuffer) : SetTeamAck;
		decode64(buffer: string) : SetTeamAck;
		
	}
}


declare module pb {

	var DragonLvlCfgNtf: DragonLvlCfgNtf;
	export interface DragonLvlCfgNtf extends ProtoBufModel {
		new(obj?: any): DragonLvlCfgNtf;
		index?: number;
		lvl?: number;
		costCfg: dcodeIO.ProtoBuf.Map<number,Item>;
		
	}

	export interface DragonLvlCfgNtfBuilder {
		new(): DragonLvlCfgNtf;
		decode(buffer: ArrayBuffer) : DragonLvlCfgNtf;
		//decode(buffer: NodeBuffer) : DragonLvlCfgNtf;
		//decode(buffer: ByteArrayBuffer) : DragonLvlCfgNtf;
		decode64(buffer: string) : DragonLvlCfgNtf;
		
	}
}


declare module pb {

	var DragonEnhanceCostCfg: DragonEnhanceCostCfg;
	export interface DragonEnhanceCostCfg extends ProtoBufModel {
		new(obj?: any): DragonEnhanceCostCfg;
		ratio?: number;
		plus?: number;
		cost?: Item;
		
	}

	export interface DragonEnhanceCostCfgBuilder {
		new(): DragonEnhanceCostCfg;
		decode(buffer: ArrayBuffer) : DragonEnhanceCostCfg;
		//decode(buffer: NodeBuffer) : DragonEnhanceCostCfg;
		//decode(buffer: ByteArrayBuffer) : DragonEnhanceCostCfg;
		decode64(buffer: string) : DragonEnhanceCostCfg;
		
	}
}


declare module pb {

	var DragonEnhanceCfgNtf: DragonEnhanceCfgNtf;
	export interface DragonEnhanceCfgNtf extends ProtoBufModel {
		new(obj?: any): DragonEnhanceCfgNtf;
		index?: number;
		enhanceId?: number;
		lvl?: number;
		desc?: string;
		unlockStar?: number;
		costCfg: dcodeIO.ProtoBuf.Map<number,DragonEnhanceCostCfg>;
		
	}

	export interface DragonEnhanceCfgNtfBuilder {
		new(): DragonEnhanceCfgNtf;
		decode(buffer: ArrayBuffer) : DragonEnhanceCfgNtf;
		//decode(buffer: NodeBuffer) : DragonEnhanceCfgNtf;
		//decode(buffer: ByteArrayBuffer) : DragonEnhanceCfgNtf;
		decode64(buffer: string) : DragonEnhanceCfgNtf;
		
	}
}


declare module pb {

	var DragonConfigReq: DragonConfigReq;
	export interface DragonConfigReq extends ProtoBufModel {
		new(obj?: any): DragonConfigReq;
		index?: number;
		
	}

	export interface DragonConfigReqBuilder {
		new(): DragonConfigReq;
		decode(buffer: ArrayBuffer) : DragonConfigReq;
		//decode(buffer: NodeBuffer) : DragonConfigReq;
		//decode(buffer: ByteArrayBuffer) : DragonConfigReq;
		decode64(buffer: string) : DragonConfigReq;
		
	}
}


declare module pb {

	var DragonConfigAck: DragonConfigAck;
	export interface DragonConfigAck extends ProtoBufModel {
		new(obj?: any): DragonConfigAck;
		index?: number;
		enhanceCfg: dcodeIO.ProtoBuf.Map<number,DragonEnhanceCfgNtf>;
		lvlCfg?: DragonLvlCfgNtf;
		
	}

	export interface DragonConfigAckBuilder {
		new(): DragonConfigAck;
		decode(buffer: ArrayBuffer) : DragonConfigAck;
		//decode(buffer: NodeBuffer) : DragonConfigAck;
		//decode(buffer: ByteArrayBuffer) : DragonConfigAck;
		decode64(buffer: string) : DragonConfigAck;
		
	}
}


declare module pb {

	var GeneralDragonCfgReq: GeneralDragonCfgReq;
	export interface GeneralDragonCfgReq extends ProtoBufModel {
		new(obj?: any): GeneralDragonCfgReq;
		
	}

	export interface GeneralDragonCfgReqBuilder {
		new(): GeneralDragonCfgReq;
		decode(buffer: ArrayBuffer) : GeneralDragonCfgReq;
		//decode(buffer: NodeBuffer) : GeneralDragonCfgReq;
		//decode(buffer: ByteArrayBuffer) : GeneralDragonCfgReq;
		decode64(buffer: string) : GeneralDragonCfgReq;
		
	}
}


declare module pb {

	var GeneralDragonCfgAck: GeneralDragonCfgAck;
	export interface GeneralDragonCfgAck extends ProtoBufModel {
		new(obj?: any): GeneralDragonCfgAck;
		lvlCfg: dcodeIO.ProtoBuf.Map<number,DragonLvlCfgNtf>;
		
	}

	export interface GeneralDragonCfgAckBuilder {
		new(): GeneralDragonCfgAck;
		decode(buffer: ArrayBuffer) : GeneralDragonCfgAck;
		//decode(buffer: NodeBuffer) : GeneralDragonCfgAck;
		//decode(buffer: ByteArrayBuffer) : GeneralDragonCfgAck;
		decode64(buffer: string) : GeneralDragonCfgAck;
		
	}
}


declare module pb {

	var RecoverDragon: RecoverDragon;
	export interface RecoverDragon extends ProtoBufModel {
		new(obj?: any): RecoverDragon;
		index?: number;
		star?: number;
		num?: number;
		
	}

	export interface RecoverDragonBuilder {
		new(): RecoverDragon;
		decode(buffer: ArrayBuffer) : RecoverDragon;
		//decode(buffer: NodeBuffer) : RecoverDragon;
		//decode(buffer: ByteArrayBuffer) : RecoverDragon;
		decode64(buffer: string) : RecoverDragon;
		
	}
}


declare module pb {

	var RecoverDragonsReq: RecoverDragonsReq;
	export interface RecoverDragonsReq extends ProtoBufModel {
		new(obj?: any): RecoverDragonsReq;
		rDragon: RecoverDragon[];
		
	}

	export interface RecoverDragonsReqBuilder {
		new(): RecoverDragonsReq;
		decode(buffer: ArrayBuffer) : RecoverDragonsReq;
		//decode(buffer: NodeBuffer) : RecoverDragonsReq;
		//decode(buffer: ByteArrayBuffer) : RecoverDragonsReq;
		decode64(buffer: string) : RecoverDragonsReq;
		
	}
}


declare module pb {

	var RecoverDragonsAck: RecoverDragonsAck;
	export interface RecoverDragonsAck extends ProtoBufModel {
		new(obj?: any): RecoverDragonsAck;
		status?: boolean;
		dragons: DragonInfo[];
		
	}

	export interface RecoverDragonsAckBuilder {
		new(): RecoverDragonsAck;
		decode(buffer: ArrayBuffer) : RecoverDragonsAck;
		//decode(buffer: NodeBuffer) : RecoverDragonsAck;
		//decode(buffer: ByteArrayBuffer) : RecoverDragonsAck;
		decode64(buffer: string) : RecoverDragonsAck;
		
	}
}


declare module pb {

	var PreRecoverDragonsReq: PreRecoverDragonsReq;
	export interface PreRecoverDragonsReq extends ProtoBufModel {
		new(obj?: any): PreRecoverDragonsReq;
		rDragon: RecoverDragon[];
		
	}

	export interface PreRecoverDragonsReqBuilder {
		new(): PreRecoverDragonsReq;
		decode(buffer: ArrayBuffer) : PreRecoverDragonsReq;
		//decode(buffer: NodeBuffer) : PreRecoverDragonsReq;
		//decode(buffer: ByteArrayBuffer) : PreRecoverDragonsReq;
		decode64(buffer: string) : PreRecoverDragonsReq;
		
	}
}


declare module pb {

	var PreRecoverDragonsAck: PreRecoverDragonsAck;
	export interface PreRecoverDragonsAck extends ProtoBufModel {
		new(obj?: any): PreRecoverDragonsAck;
		starItems: Item[];
		items: Item[];
		price?: number;
		
	}

	export interface PreRecoverDragonsAckBuilder {
		new(): PreRecoverDragonsAck;
		decode(buffer: ArrayBuffer) : PreRecoverDragonsAck;
		//decode(buffer: NodeBuffer) : PreRecoverDragonsAck;
		//decode(buffer: ByteArrayBuffer) : PreRecoverDragonsAck;
		decode64(buffer: string) : PreRecoverDragonsAck;
		
	}
}


declare module pb {

	var GeneagentItemInfo: GeneagentItemInfo;
	export interface GeneagentItemInfo extends ProtoBufModel {
		new(obj?: any): GeneagentItemInfo;
		researchid?: number;
		showid?: number;
		bfree?: number;
		buystate?: number;
		cost?: PropInfo;
		
	}

	export interface GeneagentItemInfoBuilder {
		new(): GeneagentItemInfo;
		decode(buffer: ArrayBuffer) : GeneagentItemInfo;
		//decode(buffer: NodeBuffer) : GeneagentItemInfo;
		//decode(buffer: ByteArrayBuffer) : GeneagentItemInfo;
		decode64(buffer: string) : GeneagentItemInfo;
		
	}
}


declare module pb {

	var EnterGeneagentReq: EnterGeneagentReq;
	export interface EnterGeneagentReq extends ProtoBufModel {
		new(obj?: any): EnterGeneagentReq;
		
	}

	export interface EnterGeneagentReqBuilder {
		new(): EnterGeneagentReq;
		decode(buffer: ArrayBuffer) : EnterGeneagentReq;
		//decode(buffer: NodeBuffer) : EnterGeneagentReq;
		//decode(buffer: ByteArrayBuffer) : EnterGeneagentReq;
		decode64(buffer: string) : EnterGeneagentReq;
		
	}
}


declare module pb {

	var EnterGeneagentAck: EnterGeneagentAck;
	export interface EnterGeneagentAck extends ProtoBufModel {
		new(obj?: any): EnterGeneagentAck;
		infos: GeneagentItemInfo[];
		
	}

	export interface EnterGeneagentAckBuilder {
		new(): EnterGeneagentAck;
		decode(buffer: ArrayBuffer) : EnterGeneagentAck;
		//decode(buffer: NodeBuffer) : EnterGeneagentAck;
		//decode(buffer: ByteArrayBuffer) : EnterGeneagentAck;
		decode64(buffer: string) : EnterGeneagentAck;
		
	}
}


declare module pb {

	var GeneagentNtf: GeneagentNtf;
	export interface GeneagentNtf extends ProtoBufModel {
		new(obj?: any): GeneagentNtf;
		lastTime?: number;
		
	}

	export interface GeneagentNtfBuilder {
		new(): GeneagentNtf;
		decode(buffer: ArrayBuffer) : GeneagentNtf;
		//decode(buffer: NodeBuffer) : GeneagentNtf;
		//decode(buffer: ByteArrayBuffer) : GeneagentNtf;
		decode64(buffer: string) : GeneagentNtf;
		
	}
}


declare module pb {

	var EnterGeneagentBuyOneReq: EnterGeneagentBuyOneReq;
	export interface EnterGeneagentBuyOneReq extends ProtoBufModel {
		new(obj?: any): EnterGeneagentBuyOneReq;
		showid?: number;
		
	}

	export interface EnterGeneagentBuyOneReqBuilder {
		new(): EnterGeneagentBuyOneReq;
		decode(buffer: ArrayBuffer) : EnterGeneagentBuyOneReq;
		//decode(buffer: NodeBuffer) : EnterGeneagentBuyOneReq;
		//decode(buffer: ByteArrayBuffer) : EnterGeneagentBuyOneReq;
		decode64(buffer: string) : EnterGeneagentBuyOneReq;
		
	}
}


declare module pb {

	var EnterGeneagentBuyOneAck: EnterGeneagentBuyOneAck;
	export interface EnterGeneagentBuyOneAck extends ProtoBufModel {
		new(obj?: any): EnterGeneagentBuyOneAck;
		result?: number;
		info?: ItemInfo;
		
	}

	export interface EnterGeneagentBuyOneAckBuilder {
		new(): EnterGeneagentBuyOneAck;
		decode(buffer: ArrayBuffer) : EnterGeneagentBuyOneAck;
		//decode(buffer: NodeBuffer) : EnterGeneagentBuyOneAck;
		//decode(buffer: ByteArrayBuffer) : EnterGeneagentBuyOneAck;
		decode64(buffer: string) : EnterGeneagentBuyOneAck;
		
	}
}


declare module pb {

	var EnterGeneagentBuyAllReq: EnterGeneagentBuyAllReq;
	export interface EnterGeneagentBuyAllReq extends ProtoBufModel {
		new(obj?: any): EnterGeneagentBuyAllReq;
		
	}

	export interface EnterGeneagentBuyAllReqBuilder {
		new(): EnterGeneagentBuyAllReq;
		decode(buffer: ArrayBuffer) : EnterGeneagentBuyAllReq;
		//decode(buffer: NodeBuffer) : EnterGeneagentBuyAllReq;
		//decode(buffer: ByteArrayBuffer) : EnterGeneagentBuyAllReq;
		decode64(buffer: string) : EnterGeneagentBuyAllReq;
		
	}
}


declare module pb {

	var EnterGeneagentBuyAllAck: EnterGeneagentBuyAllAck;
	export interface EnterGeneagentBuyAllAck extends ProtoBufModel {
		new(obj?: any): EnterGeneagentBuyAllAck;
		result?: number;
		infos: ItemInfo[];
		
	}

	export interface EnterGeneagentBuyAllAckBuilder {
		new(): EnterGeneagentBuyAllAck;
		decode(buffer: ArrayBuffer) : EnterGeneagentBuyAllAck;
		//decode(buffer: NodeBuffer) : EnterGeneagentBuyAllAck;
		//decode(buffer: ByteArrayBuffer) : EnterGeneagentBuyAllAck;
		decode64(buffer: string) : EnterGeneagentBuyAllAck;
		
	}
}


declare module pb {

	var EnterGeneagentResearchReq: EnterGeneagentResearchReq;
	export interface EnterGeneagentResearchReq extends ProtoBufModel {
		new(obj?: any): EnterGeneagentResearchReq;
		
	}

	export interface EnterGeneagentResearchReqBuilder {
		new(): EnterGeneagentResearchReq;
		decode(buffer: ArrayBuffer) : EnterGeneagentResearchReq;
		//decode(buffer: NodeBuffer) : EnterGeneagentResearchReq;
		//decode(buffer: ByteArrayBuffer) : EnterGeneagentResearchReq;
		decode64(buffer: string) : EnterGeneagentResearchReq;
		
	}
}


declare module pb {

	var EnterGeneagentResearchAck: EnterGeneagentResearchAck;
	export interface EnterGeneagentResearchAck extends ProtoBufModel {
		new(obj?: any): EnterGeneagentResearchAck;
		infos: GeneagentItemInfo[];
		
	}

	export interface EnterGeneagentResearchAckBuilder {
		new(): EnterGeneagentResearchAck;
		decode(buffer: ArrayBuffer) : EnterGeneagentResearchAck;
		//decode(buffer: NodeBuffer) : EnterGeneagentResearchAck;
		//decode(buffer: ByteArrayBuffer) : EnterGeneagentResearchAck;
		decode64(buffer: string) : EnterGeneagentResearchAck;
		
	}
}


declare module pb {

	var BuyGeneagentTicketReq: BuyGeneagentTicketReq;
	export interface BuyGeneagentTicketReq extends ProtoBufModel {
		new(obj?: any): BuyGeneagentTicketReq;
		tp?: number;
		
	}

	export interface BuyGeneagentTicketReqBuilder {
		new(): BuyGeneagentTicketReq;
		decode(buffer: ArrayBuffer) : BuyGeneagentTicketReq;
		//decode(buffer: NodeBuffer) : BuyGeneagentTicketReq;
		//decode(buffer: ByteArrayBuffer) : BuyGeneagentTicketReq;
		decode64(buffer: string) : BuyGeneagentTicketReq;
		
	}
}


declare module pb {

	var BuyGeneagentTicketAck: BuyGeneagentTicketAck;
	export interface BuyGeneagentTicketAck extends ProtoBufModel {
		new(obj?: any): BuyGeneagentTicketAck;
		count?: number;
		limit?: number;
		
	}

	export interface BuyGeneagentTicketAckBuilder {
		new(): BuyGeneagentTicketAck;
		decode(buffer: ArrayBuffer) : BuyGeneagentTicketAck;
		//decode(buffer: NodeBuffer) : BuyGeneagentTicketAck;
		//decode(buffer: ByteArrayBuffer) : BuyGeneagentTicketAck;
		decode64(buffer: string) : BuyGeneagentTicketAck;
		
	}
}


declare module pb {

	var OpenGeneagenItemInfo: OpenGeneagenItemInfo;
	export interface OpenGeneagenItemInfo extends ProtoBufModel {
		new(obj?: any): OpenGeneagenItemInfo;
		id?: number;
		num?: number;
		
	}

	export interface OpenGeneagenItemInfoBuilder {
		new(): OpenGeneagenItemInfo;
		decode(buffer: ArrayBuffer) : OpenGeneagenItemInfo;
		//decode(buffer: NodeBuffer) : OpenGeneagenItemInfo;
		//decode(buffer: ByteArrayBuffer) : OpenGeneagenItemInfo;
		decode64(buffer: string) : OpenGeneagenItemInfo;
		
	}
}


declare module pb {

	var OpenGeneagentReq: OpenGeneagentReq;
	export interface OpenGeneagentReq extends ProtoBufModel {
		new(obj?: any): OpenGeneagentReq;
		
	}

	export interface OpenGeneagentReqBuilder {
		new(): OpenGeneagentReq;
		decode(buffer: ArrayBuffer) : OpenGeneagentReq;
		//decode(buffer: NodeBuffer) : OpenGeneagentReq;
		//decode(buffer: ByteArrayBuffer) : OpenGeneagentReq;
		decode64(buffer: string) : OpenGeneagentReq;
		
	}
}


declare module pb {

	var OpenGeneagentAck: OpenGeneagentAck;
	export interface OpenGeneagentAck extends ProtoBufModel {
		new(obj?: any): OpenGeneagentAck;
		infos: OpenGeneagenItemInfo[];
		
	}

	export interface OpenGeneagentAckBuilder {
		new(): OpenGeneagentAck;
		decode(buffer: ArrayBuffer) : OpenGeneagentAck;
		//decode(buffer: NodeBuffer) : OpenGeneagentAck;
		//decode(buffer: ByteArrayBuffer) : OpenGeneagentAck;
		decode64(buffer: string) : OpenGeneagentAck;
		
	}
}


declare module pb {

	var LeveupGeneagentReq: LeveupGeneagentReq;
	export interface LeveupGeneagentReq extends ProtoBufModel {
		new(obj?: any): LeveupGeneagentReq;
		id?: number;
		
	}

	export interface LeveupGeneagentReqBuilder {
		new(): LeveupGeneagentReq;
		decode(buffer: ArrayBuffer) : LeveupGeneagentReq;
		//decode(buffer: NodeBuffer) : LeveupGeneagentReq;
		//decode(buffer: ByteArrayBuffer) : LeveupGeneagentReq;
		decode64(buffer: string) : LeveupGeneagentReq;
		
	}
}


declare module pb {

	var LeveupGeneagentAck: LeveupGeneagentAck;
	export interface LeveupGeneagentAck extends ProtoBufModel {
		new(obj?: any): LeveupGeneagentAck;
		oldid?: number;
		newid?: number;
		newnum?: number;
		
	}

	export interface LeveupGeneagentAckBuilder {
		new(): LeveupGeneagentAck;
		decode(buffer: ArrayBuffer) : LeveupGeneagentAck;
		//decode(buffer: NodeBuffer) : LeveupGeneagentAck;
		//decode(buffer: ByteArrayBuffer) : LeveupGeneagentAck;
		decode64(buffer: string) : LeveupGeneagentAck;
		
	}
}


declare module pb {

	var ServerInfo: ServerInfo;
	export interface ServerInfo extends ProtoBufModel {
		new(obj?: any): ServerInfo;
		index?: number;
		name?: string;
		area?: string;
		flag?: number;
		addr?: string;
		isNew?: number;
		isClose?: number;
		info?: string;
		serverId?: number;
		OpenTime?: number;
		userlvl?: number;
		
	}

	export interface ServerInfoBuilder {
		new(): ServerInfo;
		decode(buffer: ArrayBuffer) : ServerInfo;
		//decode(buffer: NodeBuffer) : ServerInfo;
		//decode(buffer: ByteArrayBuffer) : ServerInfo;
		decode64(buffer: string) : ServerInfo;
		
	}
}


declare module pb {

	var LoginReq: LoginReq;
	export interface LoginReq extends ProtoBufModel {
		new(obj?: any): LoginReq;
		channelId?: number;
		gameKey?: string;
		loginType?: number;
		loginTicket?: string;
		timeStamp?: string;
		nonce?: string;
		signature?: string;
		serverIndex?: number;
		openId?: string;
		appVersion?: string;
		
	}

	export interface LoginReqBuilder {
		new(): LoginReq;
		decode(buffer: ArrayBuffer) : LoginReq;
		//decode(buffer: NodeBuffer) : LoginReq;
		//decode(buffer: ByteArrayBuffer) : LoginReq;
		decode64(buffer: string) : LoginReq;
		
	}
}


declare module pb {

	var LoginAck: LoginAck;
	export interface LoginAck extends ProtoBufModel {
		new(obj?: any): LoginAck;
		openId?: string;
		loginKey?: string;
		nickName?: string;
		lastServerId?: number;
		avatar?: string;
		gender?: string;
		
	}

	export interface LoginAckBuilder {
		new(): LoginAck;
		decode(buffer: ArrayBuffer) : LoginAck;
		//decode(buffer: NodeBuffer) : LoginAck;
		//decode(buffer: ByteArrayBuffer) : LoginAck;
		decode64(buffer: string) : LoginAck;
		
	}
}


declare module pb {

	var GetServerListReq: GetServerListReq;
	export interface GetServerListReq extends ProtoBufModel {
		new(obj?: any): GetServerListReq;
		isTest?: number;
		appId?: string;
		channelId?: number;
		appVersion?: string;
		openId?: string;
		
	}

	export interface GetServerListReqBuilder {
		new(): GetServerListReq;
		decode(buffer: ArrayBuffer) : GetServerListReq;
		//decode(buffer: NodeBuffer) : GetServerListReq;
		//decode(buffer: ByteArrayBuffer) : GetServerListReq;
		decode64(buffer: string) : GetServerListReq;
		
	}
}


declare module pb {

	var GetServerListAck: GetServerListAck;
	export interface GetServerListAck extends ProtoBufModel {
		new(obj?: any): GetServerListAck;
		index?: number;
		servers: ServerInfo[];
		wssaddr?: string;
		lastindex?: number;
		
	}

	export interface GetServerListAckBuilder {
		new(): GetServerListAck;
		decode(buffer: ArrayBuffer) : GetServerListAck;
		//decode(buffer: NodeBuffer) : GetServerListAck;
		//decode(buffer: ByteArrayBuffer) : GetServerListAck;
		decode64(buffer: string) : GetServerListAck;
		
	}
}


declare module pb {

	var GetServerAddrReq: GetServerAddrReq;
	export interface GetServerAddrReq extends ProtoBufModel {
		new(obj?: any): GetServerAddrReq;
		serverIdx?: number;
		
	}

	export interface GetServerAddrReqBuilder {
		new(): GetServerAddrReq;
		decode(buffer: ArrayBuffer) : GetServerAddrReq;
		//decode(buffer: NodeBuffer) : GetServerAddrReq;
		//decode(buffer: ByteArrayBuffer) : GetServerAddrReq;
		decode64(buffer: string) : GetServerAddrReq;
		
	}
}


declare module pb {

	var GetServerAddrAck: GetServerAddrAck;
	export interface GetServerAddrAck extends ProtoBufModel {
		new(obj?: any): GetServerAddrAck;
		serverIdx?: number;
		addr?: string;
		status?: number;
		
	}

	export interface GetServerAddrAckBuilder {
		new(): GetServerAddrAck;
		decode(buffer: ArrayBuffer) : GetServerAddrAck;
		//decode(buffer: NodeBuffer) : GetServerAddrAck;
		//decode(buffer: ByteArrayBuffer) : GetServerAddrAck;
		decode64(buffer: string) : GetServerAddrAck;
		
	}
}


declare module pb {

	var ReportReq: ReportReq;
	export interface ReportReq extends ProtoBufModel {
		new(obj?: any): ReportReq;
		appVersion?: string;
		openId?: string;
		ip?: string;
		channelId?: number;
		timeStamp?: number;
		type?: number;
		subtype?: string;
		info?: string;
		
	}

	export interface ReportReqBuilder {
		new(): ReportReq;
		decode(buffer: ArrayBuffer) : ReportReq;
		//decode(buffer: NodeBuffer) : ReportReq;
		//decode(buffer: ByteArrayBuffer) : ReportReq;
		decode64(buffer: string) : ReportReq;
		
	}
}


declare module pb {

	var ReportAck: ReportAck;
	export interface ReportAck extends ProtoBufModel {
		new(obj?: any): ReportAck;
		
	}

	export interface ReportAckBuilder {
		new(): ReportAck;
		decode(buffer: ArrayBuffer) : ReportAck;
		//decode(buffer: NodeBuffer) : ReportAck;
		//decode(buffer: ByteArrayBuffer) : ReportAck;
		decode64(buffer: string) : ReportAck;
		
	}
}


declare module pb {

	var EnterGameReq: EnterGameReq;
	export interface EnterGameReq extends ProtoBufModel {
		new(obj?: any): EnterGameReq;
		openId?: string;
		loginKey?: string;
		serverIndex?: number;
		channel?: number;
		clientIp?: string;
		mobileInfo?: string;
		loginToken?: string;
		loginExtra?: string;
		
	}

	export interface EnterGameReqBuilder {
		new(): EnterGameReq;
		decode(buffer: ArrayBuffer) : EnterGameReq;
		//decode(buffer: NodeBuffer) : EnterGameReq;
		//decode(buffer: ByteArrayBuffer) : EnterGameReq;
		decode64(buffer: string) : EnterGameReq;
		
	}
}


declare module pb {

	var CreateUserReq: CreateUserReq;
	export interface CreateUserReq extends ProtoBufModel {
		new(obj?: any): CreateUserReq;
		nickName?: string;
		avatar?: string;
		gender?: string;
		
	}

	export interface CreateUserReqBuilder {
		new(): CreateUserReq;
		decode(buffer: ArrayBuffer) : CreateUserReq;
		//decode(buffer: NodeBuffer) : CreateUserReq;
		//decode(buffer: ByteArrayBuffer) : CreateUserReq;
		decode64(buffer: string) : CreateUserReq;
		
	}
}


declare module pb {

	var CreateUserAck: CreateUserAck;
	export interface CreateUserAck extends ProtoBufModel {
		new(obj?: any): CreateUserAck;
		userInfo?: UserInfoNtf;
		
	}

	export interface CreateUserAckBuilder {
		new(): CreateUserAck;
		decode(buffer: ArrayBuffer) : CreateUserAck;
		//decode(buffer: NodeBuffer) : CreateUserAck;
		//decode(buffer: ByteArrayBuffer) : CreateUserAck;
		decode64(buffer: string) : CreateUserAck;
		
	}
}


declare module pb {

	var FirstEnterRpt: FirstEnterRpt;
	export interface FirstEnterRpt extends ProtoBufModel {
		new(obj?: any): FirstEnterRpt;
		
	}

	export interface FirstEnterRptBuilder {
		new(): FirstEnterRpt;
		decode(buffer: ArrayBuffer) : FirstEnterRpt;
		//decode(buffer: NodeBuffer) : FirstEnterRpt;
		//decode(buffer: ByteArrayBuffer) : FirstEnterRpt;
		decode64(buffer: string) : FirstEnterRpt;
		
	}
}


declare module pb {

	var GetGameDataRpt: GetGameDataRpt;
	export interface GetGameDataRpt extends ProtoBufModel {
		new(obj?: any): GetGameDataRpt;
		
	}

	export interface GetGameDataRptBuilder {
		new(): GetGameDataRpt;
		decode(buffer: ArrayBuffer) : GetGameDataRpt;
		//decode(buffer: NodeBuffer) : GetGameDataRpt;
		//decode(buffer: ByteArrayBuffer) : GetGameDataRpt;
		decode64(buffer: string) : GetGameDataRpt;
		
	}
}


declare module pb {

	var GetGameDataNtf: GetGameDataNtf;
	export interface GetGameDataNtf extends ProtoBufModel {
		new(obj?: any): GetGameDataNtf;
		
	}

	export interface GetGameDataNtfBuilder {
		new(): GetGameDataNtf;
		decode(buffer: ArrayBuffer) : GetGameDataNtf;
		//decode(buffer: NodeBuffer) : GetGameDataNtf;
		//decode(buffer: ByteArrayBuffer) : GetGameDataNtf;
		decode64(buffer: string) : GetGameDataNtf;
		
	}
}


declare module pb {

	var EnterGameAck: EnterGameAck;
	export interface EnterGameAck extends ProtoBufModel {
		new(obj?: any): EnterGameAck;
		userInfo?: UserInfoNtf;
		dragons?: DragonNtf;
		ts?: number;
		version?: string;
		Id?: number;
		zoneOpenTime?: number;
		
	}

	export interface EnterGameAckBuilder {
		new(): EnterGameAck;
		decode(buffer: ArrayBuffer) : EnterGameAck;
		//decode(buffer: NodeBuffer) : EnterGameAck;
		//decode(buffer: ByteArrayBuffer) : EnterGameAck;
		decode64(buffer: string) : EnterGameAck;
		
	}
}


declare module pb {

	var UserPTProfile: UserPTProfile;
	export interface UserPTProfile extends ProtoBufModel {
		new(obj?: any): UserPTProfile;
		nickName?: string;
		avatar?: string;
		gender?: string;
		
	}

	export interface UserPTProfileBuilder {
		new(): UserPTProfile;
		decode(buffer: ArrayBuffer) : UserPTProfile;
		//decode(buffer: NodeBuffer) : UserPTProfile;
		//decode(buffer: ByteArrayBuffer) : UserPTProfile;
		decode64(buffer: string) : UserPTProfile;
		
	}
}


declare module pb {

	var UserInfoNtf: UserInfoNtf;
	export interface UserInfoNtf extends ProtoBufModel {
		new(obj?: any): UserInfoNtf;
		lvl?: number;
		copyId?: number;
		lastRegressTime?: number;
		NameModifyCount?: number;
		NickName?: string;
		researchDragontime?: number;
		rewardLevel?: number;
		maxStage?: number;
		avatar?: string;
		profile?: UserPTProfile;
		totalVipExp?: number;
		vipLvl?: number;
		maxStages: dcodeIO.ProtoBuf.Map<number,number>;
		
	}

	export interface UserInfoNtfBuilder {
		new(): UserInfoNtf;
		decode(buffer: ArrayBuffer) : UserInfoNtf;
		//decode(buffer: NodeBuffer) : UserInfoNtf;
		//decode(buffer: ByteArrayBuffer) : UserInfoNtf;
		decode64(buffer: string) : UserInfoNtf;
		
	}
}


declare module pb {

	var ItemInfosNtf: ItemInfosNtf;
	export interface ItemInfosNtf extends ProtoBufModel {
		new(obj?: any): ItemInfosNtf;
		items: ItemInfo[];
		
	}

	export interface ItemInfosNtfBuilder {
		new(): ItemInfosNtf;
		decode(buffer: ArrayBuffer) : ItemInfosNtf;
		//decode(buffer: NodeBuffer) : ItemInfosNtf;
		//decode(buffer: ByteArrayBuffer) : ItemInfosNtf;
		decode64(buffer: string) : ItemInfosNtf;
		
	}
}


declare module pb {

	var ItemsShowUnit: ItemsShowUnit;
	export interface ItemsShowUnit extends ProtoBufModel {
		new(obj?: any): ItemsShowUnit;
		tp?: number;
		items: ItemDeltaInfo[];
		
	}

	export interface ItemsShowUnitBuilder {
		new(): ItemsShowUnit;
		decode(buffer: ArrayBuffer) : ItemsShowUnit;
		//decode(buffer: NodeBuffer) : ItemsShowUnit;
		//decode(buffer: ByteArrayBuffer) : ItemsShowUnit;
		decode64(buffer: string) : ItemsShowUnit;
		
	}
}


declare module pb {

	var ItemsShowNtf: ItemsShowNtf;
	export interface ItemsShowNtf extends ProtoBufModel {
		new(obj?: any): ItemsShowNtf;
		flag?: number;
		sourceItem?: number;
		rmb?: number;
		info: ItemsShowUnit[];
		
	}

	export interface ItemsShowNtfBuilder {
		new(): ItemsShowNtf;
		decode(buffer: ArrayBuffer) : ItemsShowNtf;
		//decode(buffer: NodeBuffer) : ItemsShowNtf;
		//decode(buffer: ByteArrayBuffer) : ItemsShowNtf;
		decode64(buffer: string) : ItemsShowNtf;
		
	}
}


declare module pb {

	var TeamNtf: TeamNtf;
	export interface TeamNtf extends ProtoBufModel {
		new(obj?: any): TeamNtf;
		combat?: number;
		team: DragonTeam[];
		
	}

	export interface TeamNtfBuilder {
		new(): TeamNtf;
		decode(buffer: ArrayBuffer) : TeamNtf;
		//decode(buffer: NodeBuffer) : TeamNtf;
		//decode(buffer: ByteArrayBuffer) : TeamNtf;
		decode64(buffer: string) : TeamNtf;
		
	}
}


declare module pb {

	var BreaksInfoNtf: BreaksInfoNtf;
	export interface BreaksInfoNtf extends ProtoBufModel {
		new(obj?: any): BreaksInfoNtf;
		times?: number;
		limit?: number;
		endTime?: number;
		speed?: number;
		stage?: number;
		
	}

	export interface BreaksInfoNtfBuilder {
		new(): BreaksInfoNtf;
		decode(buffer: ArrayBuffer) : BreaksInfoNtf;
		//decode(buffer: NodeBuffer) : BreaksInfoNtf;
		//decode(buffer: ByteArrayBuffer) : BreaksInfoNtf;
		decode64(buffer: string) : BreaksInfoNtf;
		
	}
}


declare module pb {

	var GetUserLevelRewardReq: GetUserLevelRewardReq;
	export interface GetUserLevelRewardReq extends ProtoBufModel {
		new(obj?: any): GetUserLevelRewardReq;
		level?: number;
		
	}

	export interface GetUserLevelRewardReqBuilder {
		new(): GetUserLevelRewardReq;
		decode(buffer: ArrayBuffer) : GetUserLevelRewardReq;
		//decode(buffer: NodeBuffer) : GetUserLevelRewardReq;
		//decode(buffer: ByteArrayBuffer) : GetUserLevelRewardReq;
		decode64(buffer: string) : GetUserLevelRewardReq;
		
	}
}


declare module pb {

	var GetUserLevelRewardAck: GetUserLevelRewardAck;
	export interface GetUserLevelRewardAck extends ProtoBufModel {
		new(obj?: any): GetUserLevelRewardAck;
		level?: number;
		items: ItemInfo[];
		
	}

	export interface GetUserLevelRewardAckBuilder {
		new(): GetUserLevelRewardAck;
		decode(buffer: ArrayBuffer) : GetUserLevelRewardAck;
		//decode(buffer: NodeBuffer) : GetUserLevelRewardAck;
		//decode(buffer: ByteArrayBuffer) : GetUserLevelRewardAck;
		decode64(buffer: string) : GetUserLevelRewardAck;
		
	}
}


declare module pb {

	var UserChangeNameReq: UserChangeNameReq;
	export interface UserChangeNameReq extends ProtoBufModel {
		new(obj?: any): UserChangeNameReq;
		dstName?: string;
		
	}

	export interface UserChangeNameReqBuilder {
		new(): UserChangeNameReq;
		decode(buffer: ArrayBuffer) : UserChangeNameReq;
		//decode(buffer: NodeBuffer) : UserChangeNameReq;
		//decode(buffer: ByteArrayBuffer) : UserChangeNameReq;
		decode64(buffer: string) : UserChangeNameReq;
		
	}
}


declare module pb {

	var UserChangeNameAck: UserChangeNameAck;
	export interface UserChangeNameAck extends ProtoBufModel {
		new(obj?: any): UserChangeNameAck;
		info?: UserInfoNtf;
		
	}

	export interface UserChangeNameAckBuilder {
		new(): UserChangeNameAck;
		decode(buffer: ArrayBuffer) : UserChangeNameAck;
		//decode(buffer: NodeBuffer) : UserChangeNameAck;
		//decode(buffer: ByteArrayBuffer) : UserChangeNameAck;
		decode64(buffer: string) : UserChangeNameAck;
		
	}
}


declare module pb {

	var KickUserNtf: KickUserNtf;
	export interface KickUserNtf extends ProtoBufModel {
		new(obj?: any): KickUserNtf;
		reason?: string;
		
	}

	export interface KickUserNtfBuilder {
		new(): KickUserNtf;
		decode(buffer: ArrayBuffer) : KickUserNtf;
		//decode(buffer: NodeBuffer) : KickUserNtf;
		//decode(buffer: ByteArrayBuffer) : KickUserNtf;
		decode64(buffer: string) : KickUserNtf;
		
	}
}


declare module pb {

	var ClientLogRpt: ClientLogRpt;
	export interface ClientLogRpt extends ProtoBufModel {
		new(obj?: any): ClientLogRpt;
		loog?: string;
		
	}

	export interface ClientLogRptBuilder {
		new(): ClientLogRpt;
		decode(buffer: ArrayBuffer) : ClientLogRpt;
		//decode(buffer: NodeBuffer) : ClientLogRpt;
		//decode(buffer: ByteArrayBuffer) : ClientLogRpt;
		decode64(buffer: string) : ClientLogRpt;
		
	}
}


declare module pb {

	var UserHitPointRpt: UserHitPointRpt;
	export interface UserHitPointRpt extends ProtoBufModel {
		new(obj?: any): UserHitPointRpt;
		hit?: number;
		
	}

	export interface UserHitPointRptBuilder {
		new(): UserHitPointRpt;
		decode(buffer: ArrayBuffer) : UserHitPointRpt;
		//decode(buffer: NodeBuffer) : UserHitPointRpt;
		//decode(buffer: ByteArrayBuffer) : UserHitPointRpt;
		decode64(buffer: string) : UserHitPointRpt;
		
	}
}


declare module pb {

	var ServerTimeNtf: ServerTimeNtf;
	export interface ServerTimeNtf extends ProtoBufModel {
		new(obj?: any): ServerTimeNtf;
		nanoTime?: number;
		
	}

	export interface ServerTimeNtfBuilder {
		new(): ServerTimeNtf;
		decode(buffer: ArrayBuffer) : ServerTimeNtf;
		//decode(buffer: NodeBuffer) : ServerTimeNtf;
		//decode(buffer: ByteArrayBuffer) : ServerTimeNtf;
		decode64(buffer: string) : ServerTimeNtf;
		
	}
}


declare module pb {

	var UserVarNtf: UserVarNtf;
	export interface UserVarNtf extends ProtoBufModel {
		new(obj?: any): UserVarNtf;
		firstFuse?: number;
		dailyFuse?: number;
		firstAutoPlay?: number;
		firstAce?: number;
		firstMaxStageBreak?: number;
		dailyADRegress?: number;
		
	}

	export interface UserVarNtfBuilder {
		new(): UserVarNtf;
		decode(buffer: ArrayBuffer) : UserVarNtf;
		//decode(buffer: NodeBuffer) : UserVarNtf;
		//decode(buffer: ByteArrayBuffer) : UserVarNtf;
		decode64(buffer: string) : UserVarNtf;
		
	}
}


declare module pb {

	var GetUserRandomNameReq: GetUserRandomNameReq;
	export interface GetUserRandomNameReq extends ProtoBufModel {
		new(obj?: any): GetUserRandomNameReq;
		
	}

	export interface GetUserRandomNameReqBuilder {
		new(): GetUserRandomNameReq;
		decode(buffer: ArrayBuffer) : GetUserRandomNameReq;
		//decode(buffer: NodeBuffer) : GetUserRandomNameReq;
		//decode(buffer: ByteArrayBuffer) : GetUserRandomNameReq;
		decode64(buffer: string) : GetUserRandomNameReq;
		
	}
}


declare module pb {

	var GetUserRandomNameAck: GetUserRandomNameAck;
	export interface GetUserRandomNameAck extends ProtoBufModel {
		new(obj?: any): GetUserRandomNameAck;
		name?: string;
		
	}

	export interface GetUserRandomNameAckBuilder {
		new(): GetUserRandomNameAck;
		decode(buffer: ArrayBuffer) : GetUserRandomNameAck;
		//decode(buffer: NodeBuffer) : GetUserRandomNameAck;
		//decode(buffer: ByteArrayBuffer) : GetUserRandomNameAck;
		decode64(buffer: string) : GetUserRandomNameAck;
		
	}
}


declare module pb {

	var GetCopyStartStageReq: GetCopyStartStageReq;
	export interface GetCopyStartStageReq extends ProtoBufModel {
		new(obj?: any): GetCopyStartStageReq;
		copyId?: number;
		
	}

	export interface GetCopyStartStageReqBuilder {
		new(): GetCopyStartStageReq;
		decode(buffer: ArrayBuffer) : GetCopyStartStageReq;
		//decode(buffer: NodeBuffer) : GetCopyStartStageReq;
		//decode(buffer: ByteArrayBuffer) : GetCopyStartStageReq;
		decode64(buffer: string) : GetCopyStartStageReq;
		
	}
}


declare module pb {

	var GetCopyStartStageAck: GetCopyStartStageAck;
	export interface GetCopyStartStageAck extends ProtoBufModel {
		new(obj?: any): GetCopyStartStageAck;
		startStage?: number;
		
	}

	export interface GetCopyStartStageAckBuilder {
		new(): GetCopyStartStageAck;
		decode(buffer: ArrayBuffer) : GetCopyStartStageAck;
		//decode(buffer: NodeBuffer) : GetCopyStartStageAck;
		//decode(buffer: ByteArrayBuffer) : GetCopyStartStageAck;
		decode64(buffer: string) : GetCopyStartStageAck;
		
	}
}


declare module pb {

	var mailInfo: mailInfo;
	export interface mailInfo extends ProtoBufModel {
		new(obj?: any): mailInfo;
		id?: number;
		title?: string;
		status?: number;
		expireAt?: number;
		RedeemedAt?: number;
		itemid?: number;
		itemcount?: number;
		Content?: string;
		items: Item[];
		createAt?: number;
		
	}

	export interface mailInfoBuilder {
		new(): mailInfo;
		decode(buffer: ArrayBuffer) : mailInfo;
		//decode(buffer: NodeBuffer) : mailInfo;
		//decode(buffer: ByteArrayBuffer) : mailInfo;
		decode64(buffer: string) : mailInfo;
		
	}
}


declare module pb {

	var MailReadReq: MailReadReq;
	export interface MailReadReq extends ProtoBufModel {
		new(obj?: any): MailReadReq;
		ids: number[];
		
	}

	export interface MailReadReqBuilder {
		new(): MailReadReq;
		decode(buffer: ArrayBuffer) : MailReadReq;
		//decode(buffer: NodeBuffer) : MailReadReq;
		//decode(buffer: ByteArrayBuffer) : MailReadReq;
		decode64(buffer: string) : MailReadReq;
		
	}
}


declare module pb {

	var MailReadAck: MailReadAck;
	export interface MailReadAck extends ProtoBufModel {
		new(obj?: any): MailReadAck;
		
	}

	export interface MailReadAckBuilder {
		new(): MailReadAck;
		decode(buffer: ArrayBuffer) : MailReadAck;
		//decode(buffer: NodeBuffer) : MailReadAck;
		//decode(buffer: ByteArrayBuffer) : MailReadAck;
		decode64(buffer: string) : MailReadAck;
		
	}
}


declare module pb {

	var MailRedeemReq: MailRedeemReq;
	export interface MailRedeemReq extends ProtoBufModel {
		new(obj?: any): MailRedeemReq;
		ids: number[];
		
	}

	export interface MailRedeemReqBuilder {
		new(): MailRedeemReq;
		decode(buffer: ArrayBuffer) : MailRedeemReq;
		//decode(buffer: NodeBuffer) : MailRedeemReq;
		//decode(buffer: ByteArrayBuffer) : MailRedeemReq;
		decode64(buffer: string) : MailRedeemReq;
		
	}
}


declare module pb {

	var MailRedeemAck: MailRedeemAck;
	export interface MailRedeemAck extends ProtoBufModel {
		new(obj?: any): MailRedeemAck;
		items: ItemDeltaInfo[];
		
	}

	export interface MailRedeemAckBuilder {
		new(): MailRedeemAck;
		decode(buffer: ArrayBuffer) : MailRedeemAck;
		//decode(buffer: NodeBuffer) : MailRedeemAck;
		//decode(buffer: ByteArrayBuffer) : MailRedeemAck;
		decode64(buffer: string) : MailRedeemAck;
		
	}
}


declare module pb {

	var MailLoadReq: MailLoadReq;
	export interface MailLoadReq extends ProtoBufModel {
		new(obj?: any): MailLoadReq;
		
	}

	export interface MailLoadReqBuilder {
		new(): MailLoadReq;
		decode(buffer: ArrayBuffer) : MailLoadReq;
		//decode(buffer: NodeBuffer) : MailLoadReq;
		//decode(buffer: ByteArrayBuffer) : MailLoadReq;
		decode64(buffer: string) : MailLoadReq;
		
	}
}


declare module pb {

	var MailLoadAck: MailLoadAck;
	export interface MailLoadAck extends ProtoBufModel {
		new(obj?: any): MailLoadAck;
		mailInfos: mailInfo[];
		
	}

	export interface MailLoadAckBuilder {
		new(): MailLoadAck;
		decode(buffer: ArrayBuffer) : MailLoadAck;
		//decode(buffer: NodeBuffer) : MailLoadAck;
		//decode(buffer: ByteArrayBuffer) : MailLoadAck;
		decode64(buffer: string) : MailLoadAck;
		
	}
}


declare module pb {

	var MailDeleteReq: MailDeleteReq;
	export interface MailDeleteReq extends ProtoBufModel {
		new(obj?: any): MailDeleteReq;
		ids: number[];
		
	}

	export interface MailDeleteReqBuilder {
		new(): MailDeleteReq;
		decode(buffer: ArrayBuffer) : MailDeleteReq;
		//decode(buffer: NodeBuffer) : MailDeleteReq;
		//decode(buffer: ByteArrayBuffer) : MailDeleteReq;
		decode64(buffer: string) : MailDeleteReq;
		
	}
}


declare module pb {

	var MailDeleteAck: MailDeleteAck;
	export interface MailDeleteAck extends ProtoBufModel {
		new(obj?: any): MailDeleteAck;
		
	}

	export interface MailDeleteAckBuilder {
		new(): MailDeleteAck;
		decode(buffer: ArrayBuffer) : MailDeleteAck;
		//decode(buffer: NodeBuffer) : MailDeleteAck;
		//decode(buffer: ByteArrayBuffer) : MailDeleteAck;
		decode64(buffer: string) : MailDeleteAck;
		
	}
}


declare module pb {

	var MailNewNtf: MailNewNtf;
	export interface MailNewNtf extends ProtoBufModel {
		new(obj?: any): MailNewNtf;
		mails: mailInfo[];
		
	}

	export interface MailNewNtfBuilder {
		new(): MailNewNtf;
		decode(buffer: ArrayBuffer) : MailNewNtf;
		//decode(buffer: NodeBuffer) : MailNewNtf;
		//decode(buffer: ByteArrayBuffer) : MailNewNtf;
		decode64(buffer: string) : MailNewNtf;
		
	}
}


declare module pb {

	var MonthCardInfo: MonthCardInfo;
	export interface MonthCardInfo extends ProtoBufModel {
		new(obj?: any): MonthCardInfo;
		expireAt?: number;
		redeemTo?: number;
		
	}

	export interface MonthCardInfoBuilder {
		new(): MonthCardInfo;
		decode(buffer: ArrayBuffer) : MonthCardInfo;
		//decode(buffer: NodeBuffer) : MonthCardInfo;
		//decode(buffer: ByteArrayBuffer) : MonthCardInfo;
		decode64(buffer: string) : MonthCardInfo;
		
	}
}


declare module pb {

	var MonthCardLoadReq: MonthCardLoadReq;
	export interface MonthCardLoadReq extends ProtoBufModel {
		new(obj?: any): MonthCardLoadReq;
		activityId?: number;
		
	}

	export interface MonthCardLoadReqBuilder {
		new(): MonthCardLoadReq;
		decode(buffer: ArrayBuffer) : MonthCardLoadReq;
		//decode(buffer: NodeBuffer) : MonthCardLoadReq;
		//decode(buffer: ByteArrayBuffer) : MonthCardLoadReq;
		decode64(buffer: string) : MonthCardLoadReq;
		
	}
}


declare module pb {

	var MonthCardLoadAck: MonthCardLoadAck;
	export interface MonthCardLoadAck extends ProtoBufModel {
		new(obj?: any): MonthCardLoadAck;
		infos: dcodeIO.ProtoBuf.Map<number,MonthCardInfo>;
		
	}

	export interface MonthCardLoadAckBuilder {
		new(): MonthCardLoadAck;
		decode(buffer: ArrayBuffer) : MonthCardLoadAck;
		//decode(buffer: NodeBuffer) : MonthCardLoadAck;
		//decode(buffer: ByteArrayBuffer) : MonthCardLoadAck;
		decode64(buffer: string) : MonthCardLoadAck;
		
	}
}


declare module pb {

	var MonthCardRedeemReq: MonthCardRedeemReq;
	export interface MonthCardRedeemReq extends ProtoBufModel {
		new(obj?: any): MonthCardRedeemReq;
		monthCardType?: number;
		
	}

	export interface MonthCardRedeemReqBuilder {
		new(): MonthCardRedeemReq;
		decode(buffer: ArrayBuffer) : MonthCardRedeemReq;
		//decode(buffer: NodeBuffer) : MonthCardRedeemReq;
		//decode(buffer: ByteArrayBuffer) : MonthCardRedeemReq;
		decode64(buffer: string) : MonthCardRedeemReq;
		
	}
}


declare module pb {

	var MonthCardRedeemAck: MonthCardRedeemAck;
	export interface MonthCardRedeemAck extends ProtoBufModel {
		new(obj?: any): MonthCardRedeemAck;
		
	}

	export interface MonthCardRedeemAckBuilder {
		new(): MonthCardRedeemAck;
		decode(buffer: ArrayBuffer) : MonthCardRedeemAck;
		//decode(buffer: NodeBuffer) : MonthCardRedeemAck;
		//decode(buffer: ByteArrayBuffer) : MonthCardRedeemAck;
		decode64(buffer: string) : MonthCardRedeemAck;
		
	}
}


declare module pb {

	var MonthCardChangedNtf: MonthCardChangedNtf;
	export interface MonthCardChangedNtf extends ProtoBufModel {
		new(obj?: any): MonthCardChangedNtf;
		monthCardType?: number;
		info?: MonthCardInfo;
		
	}

	export interface MonthCardChangedNtfBuilder {
		new(): MonthCardChangedNtf;
		decode(buffer: ArrayBuffer) : MonthCardChangedNtf;
		//decode(buffer: NodeBuffer) : MonthCardChangedNtf;
		//decode(buffer: ByteArrayBuffer) : MonthCardChangedNtf;
		decode64(buffer: string) : MonthCardChangedNtf;
		
	}
}


declare module pb {

	var MonthCardBuyReq: MonthCardBuyReq;
	export interface MonthCardBuyReq extends ProtoBufModel {
		new(obj?: any): MonthCardBuyReq;
		activityId?: number;
		goodsId?: number;
		count?: number;
		
	}

	export interface MonthCardBuyReqBuilder {
		new(): MonthCardBuyReq;
		decode(buffer: ArrayBuffer) : MonthCardBuyReq;
		//decode(buffer: NodeBuffer) : MonthCardBuyReq;
		//decode(buffer: ByteArrayBuffer) : MonthCardBuyReq;
		decode64(buffer: string) : MonthCardBuyReq;
		
	}
}


declare module pb {

	var MonthCardBuyAck: MonthCardBuyAck;
	export interface MonthCardBuyAck extends ProtoBufModel {
		new(obj?: any): MonthCardBuyAck;
		data?: string;
		
	}

	export interface MonthCardBuyAckBuilder {
		new(): MonthCardBuyAck;
		decode(buffer: ArrayBuffer) : MonthCardBuyAck;
		//decode(buffer: NodeBuffer) : MonthCardBuyAck;
		//decode(buffer: ByteArrayBuffer) : MonthCardBuyAck;
		decode64(buffer: string) : MonthCardBuyAck;
		
	}
}


declare module pb {

	var GameMsgNtf: GameMsgNtf;
	export interface GameMsgNtf extends ProtoBufModel {
		new(obj?: any): GameMsgNtf;
		id?: number;
		time?: number;
		args: string[];
		
	}

	export interface GameMsgNtfBuilder {
		new(): GameMsgNtf;
		decode(buffer: ArrayBuffer) : GameMsgNtf;
		//decode(buffer: NodeBuffer) : GameMsgNtf;
		//decode(buffer: ByteArrayBuffer) : GameMsgNtf;
		decode64(buffer: string) : GameMsgNtf;
		
	}
}


declare module pb {

	var SystemMsgNtf: SystemMsgNtf;
	export interface SystemMsgNtf extends ProtoBufModel {
		new(obj?: any): SystemMsgNtf;
		msg?: string;
		time?: number;
		showtimes?: number;
		interval?: number;
		
	}

	export interface SystemMsgNtfBuilder {
		new(): SystemMsgNtf;
		decode(buffer: ArrayBuffer) : SystemMsgNtf;
		//decode(buffer: NodeBuffer) : SystemMsgNtf;
		//decode(buffer: ByteArrayBuffer) : SystemMsgNtf;
		decode64(buffer: string) : SystemMsgNtf;
		
	}
}


declare module pb {

	var SystemMsgNotice: SystemMsgNotice;
	export interface SystemMsgNotice extends ProtoBufModel {
		new(obj?: any): SystemMsgNotice;
		type?: number;
		id?: number;
		msg?: string;
		endtime?: number;
		
	}

	export interface SystemMsgNoticeBuilder {
		new(): SystemMsgNotice;
		decode(buffer: ArrayBuffer) : SystemMsgNotice;
		//decode(buffer: NodeBuffer) : SystemMsgNotice;
		//decode(buffer: ByteArrayBuffer) : SystemMsgNotice;
		decode64(buffer: string) : SystemMsgNotice;
		
	}
}


declare module pb {

	var SystemMsgNoticeNtf: SystemMsgNoticeNtf;
	export interface SystemMsgNoticeNtf extends ProtoBufModel {
		new(obj?: any): SystemMsgNoticeNtf;
		notices: SystemMsgNotice[];
		loginFlag?: number;
		showtimes?: number;
		
	}

	export interface SystemMsgNoticeNtfBuilder {
		new(): SystemMsgNoticeNtf;
		decode(buffer: ArrayBuffer) : SystemMsgNoticeNtf;
		//decode(buffer: NodeBuffer) : SystemMsgNoticeNtf;
		//decode(buffer: ByteArrayBuffer) : SystemMsgNoticeNtf;
		decode64(buffer: string) : SystemMsgNoticeNtf;
		
	}
}


declare module pb {

	var NoviceGiftNtf: NoviceGiftNtf;
	export interface NoviceGiftNtf extends ProtoBufModel {
		new(obj?: any): NoviceGiftNtf;
		gotGiftCount: dcodeIO.ProtoBuf.Map<number,number>;
		
	}

	export interface NoviceGiftNtfBuilder {
		new(): NoviceGiftNtf;
		decode(buffer: ArrayBuffer) : NoviceGiftNtf;
		//decode(buffer: NodeBuffer) : NoviceGiftNtf;
		//decode(buffer: ByteArrayBuffer) : NoviceGiftNtf;
		decode64(buffer: string) : NoviceGiftNtf;
		
	}
}


declare module pb {

	var NoviceGiftAwardReq: NoviceGiftAwardReq;
	export interface NoviceGiftAwardReq extends ProtoBufModel {
		new(obj?: any): NoviceGiftAwardReq;
		id?: number;
		
	}

	export interface NoviceGiftAwardReqBuilder {
		new(): NoviceGiftAwardReq;
		decode(buffer: ArrayBuffer) : NoviceGiftAwardReq;
		//decode(buffer: NodeBuffer) : NoviceGiftAwardReq;
		//decode(buffer: ByteArrayBuffer) : NoviceGiftAwardReq;
		decode64(buffer: string) : NoviceGiftAwardReq;
		
	}
}


declare module pb {

	var NoviceGiftAwardAck: NoviceGiftAwardAck;
	export interface NoviceGiftAwardAck extends ProtoBufModel {
		new(obj?: any): NoviceGiftAwardAck;
		changeItemInfo: ItemDeltaInfo[];
		
	}

	export interface NoviceGiftAwardAckBuilder {
		new(): NoviceGiftAwardAck;
		decode(buffer: ArrayBuffer) : NoviceGiftAwardAck;
		//decode(buffer: NodeBuffer) : NoviceGiftAwardAck;
		//decode(buffer: ByteArrayBuffer) : NoviceGiftAwardAck;
		decode64(buffer: string) : NoviceGiftAwardAck;
		
	}
}


declare module pb {

	var OfflineRewardNtf: OfflineRewardNtf;
	export interface OfflineRewardNtf extends ProtoBufModel {
		new(obj?: any): OfflineRewardNtf;
		AtkSpeed?: number;
		AtkTime?: number;
		StartStage?: number;
		EndStage?: number;
		RewardEfficiency?: number;
		reward: ItemDeltaInfo[];
		LastStageCount?: number;
		
	}

	export interface OfflineRewardNtfBuilder {
		new(): OfflineRewardNtf;
		decode(buffer: ArrayBuffer) : OfflineRewardNtf;
		//decode(buffer: NodeBuffer) : OfflineRewardNtf;
		//decode(buffer: ByteArrayBuffer) : OfflineRewardNtf;
		decode64(buffer: string) : OfflineRewardNtf;
		
	}
}


declare module pb {

	var OnlineRewardData: OnlineRewardData;
	export interface OnlineRewardData extends ProtoBufModel {
		new(obj?: any): OnlineRewardData;
		id?: number;
		flag?: number;
		time?: number;
		
	}

	export interface OnlineRewardDataBuilder {
		new(): OnlineRewardData;
		decode(buffer: ArrayBuffer) : OnlineRewardData;
		//decode(buffer: NodeBuffer) : OnlineRewardData;
		//decode(buffer: ByteArrayBuffer) : OnlineRewardData;
		decode64(buffer: string) : OnlineRewardData;
		
	}
}


declare module pb {

	var OnlineRewardNtf: OnlineRewardNtf;
	export interface OnlineRewardNtf extends ProtoBufModel {
		new(obj?: any): OnlineRewardNtf;
		open?: number;
		rewardinfo: OnlineRewardData[];
		tomorrowdaygroup?: number;
		
	}

	export interface OnlineRewardNtfBuilder {
		new(): OnlineRewardNtf;
		decode(buffer: ArrayBuffer) : OnlineRewardNtf;
		//decode(buffer: NodeBuffer) : OnlineRewardNtf;
		//decode(buffer: ByteArrayBuffer) : OnlineRewardNtf;
		decode64(buffer: string) : OnlineRewardNtf;
		
	}
}


declare module pb {

	var GetOnlineRewardReq: GetOnlineRewardReq;
	export interface GetOnlineRewardReq extends ProtoBufModel {
		new(obj?: any): GetOnlineRewardReq;
		id?: number;
		
	}

	export interface GetOnlineRewardReqBuilder {
		new(): GetOnlineRewardReq;
		decode(buffer: ArrayBuffer) : GetOnlineRewardReq;
		//decode(buffer: NodeBuffer) : GetOnlineRewardReq;
		//decode(buffer: ByteArrayBuffer) : GetOnlineRewardReq;
		decode64(buffer: string) : GetOnlineRewardReq;
		
	}
}


declare module pb {

	var GetOnlineRewardAck: GetOnlineRewardAck;
	export interface GetOnlineRewardAck extends ProtoBufModel {
		new(obj?: any): GetOnlineRewardAck;
		result?: number;
		iteminfo: ItemDeltaInfo[];
		
	}

	export interface GetOnlineRewardAckBuilder {
		new(): GetOnlineRewardAck;
		decode(buffer: ArrayBuffer) : GetOnlineRewardAck;
		//decode(buffer: NodeBuffer) : GetOnlineRewardAck;
		//decode(buffer: ByteArrayBuffer) : GetOnlineRewardAck;
		decode64(buffer: string) : GetOnlineRewardAck;
		
	}
}


declare module pb {

	var OnlineAdNtf: OnlineAdNtf;
	export interface OnlineAdNtf extends ProtoBufModel {
		new(obj?: any): OnlineAdNtf;
		itemId?: number;
		itemCount?: number;
		radio?: number;
		timeStamp?: number;
		onlineAdType?: number;
		
	}

	export interface OnlineAdNtfBuilder {
		new(): OnlineAdNtf;
		decode(buffer: ArrayBuffer) : OnlineAdNtf;
		//decode(buffer: NodeBuffer) : OnlineAdNtf;
		//decode(buffer: ByteArrayBuffer) : OnlineAdNtf;
		decode64(buffer: string) : OnlineAdNtf;
		
	}
}


declare module pb {

	var GetOnlineAdRewardReq: GetOnlineAdRewardReq;
	export interface GetOnlineAdRewardReq extends ProtoBufModel {
		new(obj?: any): GetOnlineAdRewardReq;
		tp?: number;
		onlineType?: number;
		
	}

	export interface GetOnlineAdRewardReqBuilder {
		new(): GetOnlineAdRewardReq;
		decode(buffer: ArrayBuffer) : GetOnlineAdRewardReq;
		//decode(buffer: NodeBuffer) : GetOnlineAdRewardReq;
		//decode(buffer: ByteArrayBuffer) : GetOnlineAdRewardReq;
		decode64(buffer: string) : GetOnlineAdRewardReq;
		
	}
}


declare module pb {

	var GetOnlineAdRewardAck: GetOnlineAdRewardAck;
	export interface GetOnlineAdRewardAck extends ProtoBufModel {
		new(obj?: any): GetOnlineAdRewardAck;
		count?: number;
		
	}

	export interface GetOnlineAdRewardAckBuilder {
		new(): GetOnlineAdRewardAck;
		decode(buffer: ArrayBuffer) : GetOnlineAdRewardAck;
		//decode(buffer: NodeBuffer) : GetOnlineAdRewardAck;
		//decode(buffer: ByteArrayBuffer) : GetOnlineAdRewardAck;
		decode64(buffer: string) : GetOnlineAdRewardAck;
		
	}
}


declare module pb {

	var OnlineADRewardNtf: OnlineADRewardNtf;
	export interface OnlineADRewardNtf extends ProtoBufModel {
		new(obj?: any): OnlineADRewardNtf;
		count?: number;
		
	}

	export interface OnlineADRewardNtfBuilder {
		new(): OnlineADRewardNtf;
		decode(buffer: ArrayBuffer) : OnlineADRewardNtf;
		//decode(buffer: NodeBuffer) : OnlineADRewardNtf;
		//decode(buffer: ByteArrayBuffer) : OnlineADRewardNtf;
		decode64(buffer: string) : OnlineADRewardNtf;
		
	}
}


declare module pb {

	var PreferenceEntry: PreferenceEntry;
	export interface PreferenceEntry extends ProtoBufModel {
		new(obj?: any): PreferenceEntry;
		key?: number;
		value?: string;
		
	}

	export interface PreferenceEntryBuilder {
		new(): PreferenceEntry;
		decode(buffer: ArrayBuffer) : PreferenceEntry;
		//decode(buffer: NodeBuffer) : PreferenceEntry;
		//decode(buffer: ByteArrayBuffer) : PreferenceEntry;
		decode64(buffer: string) : PreferenceEntry;
		
	}
}


declare module pb {

	var PreferenceSetReq: PreferenceSetReq;
	export interface PreferenceSetReq extends ProtoBufModel {
		new(obj?: any): PreferenceSetReq;
		key?: number;
		value?: string;
		
	}

	export interface PreferenceSetReqBuilder {
		new(): PreferenceSetReq;
		decode(buffer: ArrayBuffer) : PreferenceSetReq;
		//decode(buffer: NodeBuffer) : PreferenceSetReq;
		//decode(buffer: ByteArrayBuffer) : PreferenceSetReq;
		decode64(buffer: string) : PreferenceSetReq;
		
	}
}


declare module pb {

	var PreferenceSetAck: PreferenceSetAck;
	export interface PreferenceSetAck extends ProtoBufModel {
		new(obj?: any): PreferenceSetAck;
		entry?: PreferenceEntry;
		
	}

	export interface PreferenceSetAckBuilder {
		new(): PreferenceSetAck;
		decode(buffer: ArrayBuffer) : PreferenceSetAck;
		//decode(buffer: NodeBuffer) : PreferenceSetAck;
		//decode(buffer: ByteArrayBuffer) : PreferenceSetAck;
		decode64(buffer: string) : PreferenceSetAck;
		
	}
}


declare module pb {

	var PreferenceLoadReq: PreferenceLoadReq;
	export interface PreferenceLoadReq extends ProtoBufModel {
		new(obj?: any): PreferenceLoadReq;
		
	}

	export interface PreferenceLoadReqBuilder {
		new(): PreferenceLoadReq;
		decode(buffer: ArrayBuffer) : PreferenceLoadReq;
		//decode(buffer: NodeBuffer) : PreferenceLoadReq;
		//decode(buffer: ByteArrayBuffer) : PreferenceLoadReq;
		decode64(buffer: string) : PreferenceLoadReq;
		
	}
}


declare module pb {

	var PreferenceLoadAck: PreferenceLoadAck;
	export interface PreferenceLoadAck extends ProtoBufModel {
		new(obj?: any): PreferenceLoadAck;
		entries: PreferenceEntry[];
		
	}

	export interface PreferenceLoadAckBuilder {
		new(): PreferenceLoadAck;
		decode(buffer: ArrayBuffer) : PreferenceLoadAck;
		//decode(buffer: NodeBuffer) : PreferenceLoadAck;
		//decode(buffer: ByteArrayBuffer) : PreferenceLoadAck;
		decode64(buffer: string) : PreferenceLoadAck;
		
	}
}


declare module pb {

	var UserRankInfoReq: UserRankInfoReq;
	export interface UserRankInfoReq extends ProtoBufModel {
		new(obj?: any): UserRankInfoReq;
		copyId?: number;
		
	}

	export interface UserRankInfoReqBuilder {
		new(): UserRankInfoReq;
		decode(buffer: ArrayBuffer) : UserRankInfoReq;
		//decode(buffer: NodeBuffer) : UserRankInfoReq;
		//decode(buffer: ByteArrayBuffer) : UserRankInfoReq;
		decode64(buffer: string) : UserRankInfoReq;
		
	}
}


declare module pb {

	var UserRankInfo: UserRankInfo;
	export interface UserRankInfo extends ProtoBufModel {
		new(obj?: any): UserRankInfo;
		name?: string;
		level?: number;
		maxStage?: number;
		passTime?: number;
		Id?: number;
		avatar?: string;
		vip?: number;
		copyId?: number;
		dragons: dcodeIO.ProtoBuf.Map<number,number>;
		
	}

	export interface UserRankInfoBuilder {
		new(): UserRankInfo;
		decode(buffer: ArrayBuffer) : UserRankInfo;
		//decode(buffer: NodeBuffer) : UserRankInfo;
		//decode(buffer: ByteArrayBuffer) : UserRankInfo;
		decode64(buffer: string) : UserRankInfo;
		
	}
}


declare module pb {

	var UserRankInfoAck: UserRankInfoAck;
	export interface UserRankInfoAck extends ProtoBufModel {
		new(obj?: any): UserRankInfoAck;
		copyId?: number;
		totalRankNum?: number;
		infos: UserRankInfo[];
		myRank?: number;
		maxStage?: number;
		
	}

	export interface UserRankInfoAckBuilder {
		new(): UserRankInfoAck;
		decode(buffer: ArrayBuffer) : UserRankInfoAck;
		//decode(buffer: NodeBuffer) : UserRankInfoAck;
		//decode(buffer: ByteArrayBuffer) : UserRankInfoAck;
		decode64(buffer: string) : UserRankInfoAck;
		
	}
}


declare module pb {

	var UserRankGapNtf: UserRankGapNtf;
	export interface UserRankGapNtf extends ProtoBufModel {
		new(obj?: any): UserRankGapNtf;
		pregap?: number;
		nextgap?: number;
		currank?: number;
		prerank?: number;
		
	}

	export interface UserRankGapNtfBuilder {
		new(): UserRankGapNtf;
		decode(buffer: ArrayBuffer) : UserRankGapNtf;
		//decode(buffer: NodeBuffer) : UserRankGapNtf;
		//decode(buffer: ByteArrayBuffer) : UserRankGapNtf;
		decode64(buffer: string) : UserRankGapNtf;
		
	}
}


declare module pb {

	var DragonCost: DragonCost;
	export interface DragonCost extends ProtoBufModel {
		new(obj?: any): DragonCost;
		id?: number;
		ids: number[];
		info: PropInfo[];
		
	}

	export interface DragonCostBuilder {
		new(): DragonCost;
		decode(buffer: ArrayBuffer) : DragonCost;
		//decode(buffer: NodeBuffer) : DragonCost;
		//decode(buffer: ByteArrayBuffer) : DragonCost;
		decode64(buffer: string) : DragonCost;
		
	}
}


declare module pb {

	var DragonEnhanceCostNtf: DragonEnhanceCostNtf;
	export interface DragonEnhanceCostNtf extends ProtoBufModel {
		new(obj?: any): DragonEnhanceCostNtf;
		costs: DragonCost[];
		
	}

	export interface DragonEnhanceCostNtfBuilder {
		new(): DragonEnhanceCostNtf;
		decode(buffer: ArrayBuffer) : DragonEnhanceCostNtf;
		//decode(buffer: NodeBuffer) : DragonEnhanceCostNtf;
		//decode(buffer: ByteArrayBuffer) : DragonEnhanceCostNtf;
		decode64(buffer: string) : DragonEnhanceCostNtf;
		
	}
}


declare module pb {

	var ResearchDragon: ResearchDragon;
	export interface ResearchDragon extends ProtoBufModel {
		new(obj?: any): ResearchDragon;
		Id?: number;
		State?: number;
		Free?: number;
		
	}

	export interface ResearchDragonBuilder {
		new(): ResearchDragon;
		decode(buffer: ArrayBuffer) : ResearchDragon;
		//decode(buffer: NodeBuffer) : ResearchDragon;
		//decode(buffer: ByteArrayBuffer) : ResearchDragon;
		decode64(buffer: string) : ResearchDragon;
		
	}
}


declare module pb {

	var ResearchDragonsReq: ResearchDragonsReq;
	export interface ResearchDragonsReq extends ProtoBufModel {
		new(obj?: any): ResearchDragonsReq;
		
	}

	export interface ResearchDragonsReqBuilder {
		new(): ResearchDragonsReq;
		decode(buffer: ArrayBuffer) : ResearchDragonsReq;
		//decode(buffer: NodeBuffer) : ResearchDragonsReq;
		//decode(buffer: ByteArrayBuffer) : ResearchDragonsReq;
		decode64(buffer: string) : ResearchDragonsReq;
		
	}
}


declare module pb {

	var ResearchDragonsAck: ResearchDragonsAck;
	export interface ResearchDragonsAck extends ProtoBufModel {
		new(obj?: any): ResearchDragonsAck;
		dragons: ResearchDragon[];
		
	}

	export interface ResearchDragonsAckBuilder {
		new(): ResearchDragonsAck;
		decode(buffer: ArrayBuffer) : ResearchDragonsAck;
		//decode(buffer: NodeBuffer) : ResearchDragonsAck;
		//decode(buffer: ByteArrayBuffer) : ResearchDragonsAck;
		decode64(buffer: string) : ResearchDragonsAck;
		
	}
}


declare module pb {

	var ResearchBuyDragonReq: ResearchBuyDragonReq;
	export interface ResearchBuyDragonReq extends ProtoBufModel {
		new(obj?: any): ResearchBuyDragonReq;
		id?: number;
		byType?: number;
		
	}

	export interface ResearchBuyDragonReqBuilder {
		new(): ResearchBuyDragonReq;
		decode(buffer: ArrayBuffer) : ResearchBuyDragonReq;
		//decode(buffer: NodeBuffer) : ResearchBuyDragonReq;
		//decode(buffer: ByteArrayBuffer) : ResearchBuyDragonReq;
		decode64(buffer: string) : ResearchBuyDragonReq;
		
	}
}


declare module pb {

	var ResearchBuyDragonAck: ResearchBuyDragonAck;
	export interface ResearchBuyDragonAck extends ProtoBufModel {
		new(obj?: any): ResearchBuyDragonAck;
		id?: number;
		result?: number;
		dragon?: ResearchDragon;
		
	}

	export interface ResearchBuyDragonAckBuilder {
		new(): ResearchBuyDragonAck;
		decode(buffer: ArrayBuffer) : ResearchBuyDragonAck;
		//decode(buffer: NodeBuffer) : ResearchBuyDragonAck;
		//decode(buffer: ByteArrayBuffer) : ResearchBuyDragonAck;
		decode64(buffer: string) : ResearchBuyDragonAck;
		
	}
}


declare module pb {

	var ResearchRefreshDragonReq: ResearchRefreshDragonReq;
	export interface ResearchRefreshDragonReq extends ProtoBufModel {
		new(obj?: any): ResearchRefreshDragonReq;
		
	}

	export interface ResearchRefreshDragonReqBuilder {
		new(): ResearchRefreshDragonReq;
		decode(buffer: ArrayBuffer) : ResearchRefreshDragonReq;
		//decode(buffer: NodeBuffer) : ResearchRefreshDragonReq;
		//decode(buffer: ByteArrayBuffer) : ResearchRefreshDragonReq;
		decode64(buffer: string) : ResearchRefreshDragonReq;
		
	}
}


declare module pb {

	var ResearchRefreshDragonAck: ResearchRefreshDragonAck;
	export interface ResearchRefreshDragonAck extends ProtoBufModel {
		new(obj?: any): ResearchRefreshDragonAck;
		dragons: ResearchDragon[];
		
	}

	export interface ResearchRefreshDragonAckBuilder {
		new(): ResearchRefreshDragonAck;
		decode(buffer: ArrayBuffer) : ResearchRefreshDragonAck;
		//decode(buffer: NodeBuffer) : ResearchRefreshDragonAck;
		//decode(buffer: ByteArrayBuffer) : ResearchRefreshDragonAck;
		decode64(buffer: string) : ResearchRefreshDragonAck;
		
	}
}


declare module pb {

	var ResearchBuyDragonTicketReq: ResearchBuyDragonTicketReq;
	export interface ResearchBuyDragonTicketReq extends ProtoBufModel {
		new(obj?: any): ResearchBuyDragonTicketReq;
		tp?: number;
		
	}

	export interface ResearchBuyDragonTicketReqBuilder {
		new(): ResearchBuyDragonTicketReq;
		decode(buffer: ArrayBuffer) : ResearchBuyDragonTicketReq;
		//decode(buffer: NodeBuffer) : ResearchBuyDragonTicketReq;
		//decode(buffer: ByteArrayBuffer) : ResearchBuyDragonTicketReq;
		decode64(buffer: string) : ResearchBuyDragonTicketReq;
		
	}
}


declare module pb {

	var ResearchBuyDragonTicketAck: ResearchBuyDragonTicketAck;
	export interface ResearchBuyDragonTicketAck extends ProtoBufModel {
		new(obj?: any): ResearchBuyDragonTicketAck;
		count?: number;
		limit?: number;
		
	}

	export interface ResearchBuyDragonTicketAckBuilder {
		new(): ResearchBuyDragonTicketAck;
		decode(buffer: ArrayBuffer) : ResearchBuyDragonTicketAck;
		//decode(buffer: NodeBuffer) : ResearchBuyDragonTicketAck;
		//decode(buffer: ByteArrayBuffer) : ResearchBuyDragonTicketAck;
		decode64(buffer: string) : ResearchBuyDragonTicketAck;
		
	}
}


declare module pb {

	var ResearchTimeNtf: ResearchTimeNtf;
	export interface ResearchTimeNtf extends ProtoBufModel {
		new(obj?: any): ResearchTimeNtf;
		researchDragontime?: number;
		
	}

	export interface ResearchTimeNtfBuilder {
		new(): ResearchTimeNtf;
		decode(buffer: ArrayBuffer) : ResearchTimeNtf;
		//decode(buffer: NodeBuffer) : ResearchTimeNtf;
		//decode(buffer: ByteArrayBuffer) : ResearchTimeNtf;
		decode64(buffer: string) : ResearchTimeNtf;
		
	}
}


declare module pb {

	var ResearchInstitueInfo: ResearchInstitueInfo;
	export interface ResearchInstitueInfo extends ProtoBufModel {
		new(obj?: any): ResearchInstitueInfo;
		id?: number;
		state?: number;
		level?: number;
		fromgain?: string;
		togain?: string;
		cost?: PropInfo;
		Condition?: PropInfo;
		
	}

	export interface ResearchInstitueInfoBuilder {
		new(): ResearchInstitueInfo;
		decode(buffer: ArrayBuffer) : ResearchInstitueInfo;
		//decode(buffer: NodeBuffer) : ResearchInstitueInfo;
		//decode(buffer: ByteArrayBuffer) : ResearchInstitueInfo;
		decode64(buffer: string) : ResearchInstitueInfo;
		
	}
}


declare module pb {

	var ResearchInstitueInfoReq: ResearchInstitueInfoReq;
	export interface ResearchInstitueInfoReq extends ProtoBufModel {
		new(obj?: any): ResearchInstitueInfoReq;
		type?: number;
		
	}

	export interface ResearchInstitueInfoReqBuilder {
		new(): ResearchInstitueInfoReq;
		decode(buffer: ArrayBuffer) : ResearchInstitueInfoReq;
		//decode(buffer: NodeBuffer) : ResearchInstitueInfoReq;
		//decode(buffer: ByteArrayBuffer) : ResearchInstitueInfoReq;
		decode64(buffer: string) : ResearchInstitueInfoReq;
		
	}
}


declare module pb {

	var ResearchInstitueInfoAck: ResearchInstitueInfoAck;
	export interface ResearchInstitueInfoAck extends ProtoBufModel {
		new(obj?: any): ResearchInstitueInfoAck;
		infos: ResearchInstitueInfo[];
		
	}

	export interface ResearchInstitueInfoAckBuilder {
		new(): ResearchInstitueInfoAck;
		decode(buffer: ArrayBuffer) : ResearchInstitueInfoAck;
		//decode(buffer: NodeBuffer) : ResearchInstitueInfoAck;
		//decode(buffer: ByteArrayBuffer) : ResearchInstitueInfoAck;
		decode64(buffer: string) : ResearchInstitueInfoAck;
		
	}
}


declare module pb {

	var UnlockResearchInstitueLevelupReq: UnlockResearchInstitueLevelupReq;
	export interface UnlockResearchInstitueLevelupReq extends ProtoBufModel {
		new(obj?: any): UnlockResearchInstitueLevelupReq;
		id?: number;
		
	}

	export interface UnlockResearchInstitueLevelupReqBuilder {
		new(): UnlockResearchInstitueLevelupReq;
		decode(buffer: ArrayBuffer) : UnlockResearchInstitueLevelupReq;
		//decode(buffer: NodeBuffer) : UnlockResearchInstitueLevelupReq;
		//decode(buffer: ByteArrayBuffer) : UnlockResearchInstitueLevelupReq;
		decode64(buffer: string) : UnlockResearchInstitueLevelupReq;
		
	}
}


declare module pb {

	var UnlockResearchInstitueLevelupAck: UnlockResearchInstitueLevelupAck;
	export interface UnlockResearchInstitueLevelupAck extends ProtoBufModel {
		new(obj?: any): UnlockResearchInstitueLevelupAck;
		result?: number;
		levelinfo?: ResearchInstitueInfo;
		relyinfo: ResearchInstitueInfo[];
		
	}

	export interface UnlockResearchInstitueLevelupAckBuilder {
		new(): UnlockResearchInstitueLevelupAck;
		decode(buffer: ArrayBuffer) : UnlockResearchInstitueLevelupAck;
		//decode(buffer: NodeBuffer) : UnlockResearchInstitueLevelupAck;
		//decode(buffer: ByteArrayBuffer) : UnlockResearchInstitueLevelupAck;
		decode64(buffer: string) : UnlockResearchInstitueLevelupAck;
		
	}
}


declare module pb {

	var ResearchInstFuncNtf: ResearchInstFuncNtf;
	export interface ResearchInstFuncNtf extends ProtoBufModel {
		new(obj?: any): ResearchInstFuncNtf;
		effects: PropInfoF[];
		
	}

	export interface ResearchInstFuncNtfBuilder {
		new(): ResearchInstFuncNtf;
		decode(buffer: ArrayBuffer) : ResearchInstFuncNtf;
		//decode(buffer: NodeBuffer) : ResearchInstFuncNtf;
		//decode(buffer: ByteArrayBuffer) : ResearchInstFuncNtf;
		decode64(buffer: string) : ResearchInstFuncNtf;
		
	}
}


declare module pb {

	var SDKAwardEntry: SDKAwardEntry;
	export interface SDKAwardEntry extends ProtoBufModel {
		new(obj?: any): SDKAwardEntry;
		key?: number;
		value?: number;
		
	}

	export interface SDKAwardEntryBuilder {
		new(): SDKAwardEntry;
		decode(buffer: ArrayBuffer) : SDKAwardEntry;
		//decode(buffer: NodeBuffer) : SDKAwardEntry;
		//decode(buffer: ByteArrayBuffer) : SDKAwardEntry;
		decode64(buffer: string) : SDKAwardEntry;
		
	}
}


declare module pb {

	var SDKAwardRpt: SDKAwardRpt;
	export interface SDKAwardRpt extends ProtoBufModel {
		new(obj?: any): SDKAwardRpt;
		type?: number;
		
	}

	export interface SDKAwardRptBuilder {
		new(): SDKAwardRpt;
		decode(buffer: ArrayBuffer) : SDKAwardRpt;
		//decode(buffer: NodeBuffer) : SDKAwardRpt;
		//decode(buffer: ByteArrayBuffer) : SDKAwardRpt;
		decode64(buffer: string) : SDKAwardRpt;
		
	}
}


declare module pb {

	var SDKAwardNtf: SDKAwardNtf;
	export interface SDKAwardNtf extends ProtoBufModel {
		new(obj?: any): SDKAwardNtf;
		award: SDKAwardEntry[];
		
	}

	export interface SDKAwardNtfBuilder {
		new(): SDKAwardNtf;
		decode(buffer: ArrayBuffer) : SDKAwardNtf;
		//decode(buffer: NodeBuffer) : SDKAwardNtf;
		//decode(buffer: ByteArrayBuffer) : SDKAwardNtf;
		decode64(buffer: string) : SDKAwardNtf;
		
	}
}


declare module pb {

	var SevenDayReq: SevenDayReq;
	export interface SevenDayReq extends ProtoBufModel {
		new(obj?: any): SevenDayReq;
		
	}

	export interface SevenDayReqBuilder {
		new(): SevenDayReq;
		decode(buffer: ArrayBuffer) : SevenDayReq;
		//decode(buffer: NodeBuffer) : SevenDayReq;
		//decode(buffer: ByteArrayBuffer) : SevenDayReq;
		decode64(buffer: string) : SevenDayReq;
		
	}
}


declare module pb {

	var SevenDayAck: SevenDayAck;
	export interface SevenDayAck extends ProtoBufModel {
		new(obj?: any): SevenDayAck;
		first?: number;
		sevenDayList: SevenDayList[];
		
	}

	export interface SevenDayAckBuilder {
		new(): SevenDayAck;
		decode(buffer: ArrayBuffer) : SevenDayAck;
		//decode(buffer: NodeBuffer) : SevenDayAck;
		//decode(buffer: ByteArrayBuffer) : SevenDayAck;
		decode64(buffer: string) : SevenDayAck;
		
	}
}


declare module pb {

	var SevenDayList: SevenDayList;
	export interface SevenDayList extends ProtoBufModel {
		new(obj?: any): SevenDayList;
		day?: number;
		canReward?: number;
		
	}

	export interface SevenDayListBuilder {
		new(): SevenDayList;
		decode(buffer: ArrayBuffer) : SevenDayList;
		//decode(buffer: NodeBuffer) : SevenDayList;
		//decode(buffer: ByteArrayBuffer) : SevenDayList;
		decode64(buffer: string) : SevenDayList;
		
	}
}


declare module pb {

	var SevenDayRewardReq: SevenDayRewardReq;
	export interface SevenDayRewardReq extends ProtoBufModel {
		new(obj?: any): SevenDayRewardReq;
		day?: number;
		
	}

	export interface SevenDayRewardReqBuilder {
		new(): SevenDayRewardReq;
		decode(buffer: ArrayBuffer) : SevenDayRewardReq;
		//decode(buffer: NodeBuffer) : SevenDayRewardReq;
		//decode(buffer: ByteArrayBuffer) : SevenDayRewardReq;
		decode64(buffer: string) : SevenDayRewardReq;
		
	}
}


declare module pb {

	var SevenDayRewardAck: SevenDayRewardAck;
	export interface SevenDayRewardAck extends ProtoBufModel {
		new(obj?: any): SevenDayRewardAck;
		changeItemInfo: ItemDeltaInfo[];
		sevenDayList?: SevenDayList;
		
	}

	export interface SevenDayRewardAckBuilder {
		new(): SevenDayRewardAck;
		decode(buffer: ArrayBuffer) : SevenDayRewardAck;
		//decode(buffer: NodeBuffer) : SevenDayRewardAck;
		//decode(buffer: ByteArrayBuffer) : SevenDayRewardAck;
		decode64(buffer: string) : SevenDayRewardAck;
		
	}
}


declare module pb {

	var SevenDayNtf: SevenDayNtf;
	export interface SevenDayNtf extends ProtoBufModel {
		new(obj?: any): SevenDayNtf;
		first?: number;
		sevenDayList?: SevenDayList;
		
	}

	export interface SevenDayNtfBuilder {
		new(): SevenDayNtf;
		decode(buffer: ArrayBuffer) : SevenDayNtf;
		//decode(buffer: NodeBuffer) : SevenDayNtf;
		//decode(buffer: ByteArrayBuffer) : SevenDayNtf;
		decode64(buffer: string) : SevenDayNtf;
		
	}
}


declare module pb {

	var SevenDayNtfs: SevenDayNtfs;
	export interface SevenDayNtfs extends ProtoBufModel {
		new(obj?: any): SevenDayNtfs;
		first?: number;
		sevenDayList: SevenDayList[];
		
	}

	export interface SevenDayNtfsBuilder {
		new(): SevenDayNtfs;
		decode(buffer: ArrayBuffer) : SevenDayNtfs;
		//decode(buffer: NodeBuffer) : SevenDayNtfs;
		//decode(buffer: ByteArrayBuffer) : SevenDayNtfs;
		decode64(buffer: string) : SevenDayNtfs;
		
	}
}


declare module pb {

	var ShopBoughtInfo: ShopBoughtInfo;
	export interface ShopBoughtInfo extends ProtoBufModel {
		new(obj?: any): ShopBoughtInfo;
		id?: number;
		allBoughtCount?: number;
		dailyBoughtCount?: number;
		
	}

	export interface ShopBoughtInfoBuilder {
		new(): ShopBoughtInfo;
		decode(buffer: ArrayBuffer) : ShopBoughtInfo;
		//decode(buffer: NodeBuffer) : ShopBoughtInfo;
		//decode(buffer: ByteArrayBuffer) : ShopBoughtInfo;
		decode64(buffer: string) : ShopBoughtInfo;
		
	}
}


declare module pb {

	var PurchaseItemReq: PurchaseItemReq;
	export interface PurchaseItemReq extends ProtoBufModel {
		new(obj?: any): PurchaseItemReq;
		id?: number;
		count?: number;
		index?: number;
		
	}

	export interface PurchaseItemReqBuilder {
		new(): PurchaseItemReq;
		decode(buffer: ArrayBuffer) : PurchaseItemReq;
		//decode(buffer: NodeBuffer) : PurchaseItemReq;
		//decode(buffer: ByteArrayBuffer) : PurchaseItemReq;
		decode64(buffer: string) : PurchaseItemReq;
		
	}
}


declare module pb {

	var PurchaseItemAck: PurchaseItemAck;
	export interface PurchaseItemAck extends ProtoBufModel {
		new(obj?: any): PurchaseItemAck;
		boughtInfo?: ShopBoughtInfo;
		data?: string;
		
	}

	export interface PurchaseItemAckBuilder {
		new(): PurchaseItemAck;
		decode(buffer: ArrayBuffer) : PurchaseItemAck;
		//decode(buffer: NodeBuffer) : PurchaseItemAck;
		//decode(buffer: ByteArrayBuffer) : PurchaseItemAck;
		decode64(buffer: string) : PurchaseItemAck;
		
	}
}


declare module pb {

	var ShopReq: ShopReq;
	export interface ShopReq extends ProtoBufModel {
		new(obj?: any): ShopReq;
		
	}

	export interface ShopReqBuilder {
		new(): ShopReq;
		decode(buffer: ArrayBuffer) : ShopReq;
		//decode(buffer: NodeBuffer) : ShopReq;
		//decode(buffer: ByteArrayBuffer) : ShopReq;
		decode64(buffer: string) : ShopReq;
		
	}
}


declare module pb {

	var ShopAck: ShopAck;
	export interface ShopAck extends ProtoBufModel {
		new(obj?: any): ShopAck;
		boughtLogs: dcodeIO.ProtoBuf.Map<number,ShopBoughtInfo>;
		
	}

	export interface ShopAckBuilder {
		new(): ShopAck;
		decode(buffer: ArrayBuffer) : ShopAck;
		//decode(buffer: NodeBuffer) : ShopAck;
		//decode(buffer: ByteArrayBuffer) : ShopAck;
		decode64(buffer: string) : ShopAck;
		
	}
}


declare module pb {

	var ShopBoughtInfosNtf: ShopBoughtInfosNtf;
	export interface ShopBoughtInfosNtf extends ProtoBufModel {
		new(obj?: any): ShopBoughtInfosNtf;
		boughtLogs: dcodeIO.ProtoBuf.Map<number,ShopBoughtInfo>;
		
	}

	export interface ShopBoughtInfosNtfBuilder {
		new(): ShopBoughtInfosNtf;
		decode(buffer: ArrayBuffer) : ShopBoughtInfosNtf;
		//decode(buffer: NodeBuffer) : ShopBoughtInfosNtf;
		//decode(buffer: ByteArrayBuffer) : ShopBoughtInfosNtf;
		decode64(buffer: string) : ShopBoughtInfosNtf;
		
	}
}


declare module pb {

	var ShopBoughtInfoNtf: ShopBoughtInfoNtf;
	export interface ShopBoughtInfoNtf extends ProtoBufModel {
		new(obj?: any): ShopBoughtInfoNtf;
		boughtLog?: ShopBoughtInfo;
		
	}

	export interface ShopBoughtInfoNtfBuilder {
		new(): ShopBoughtInfoNtf;
		decode(buffer: ArrayBuffer) : ShopBoughtInfoNtf;
		//decode(buffer: NodeBuffer) : ShopBoughtInfoNtf;
		//decode(buffer: ByteArrayBuffer) : ShopBoughtInfoNtf;
		decode64(buffer: string) : ShopBoughtInfoNtf;
		
	}
}


declare module pb {

	var ShopInfo: ShopInfo;
	export interface ShopInfo extends ProtoBufModel {
		new(obj?: any): ShopInfo;
		Id?: number;
		SubName?: string;
		SubName2?: number;
		BodyName?: string;
		ItemName?: string;
		ShopIcon?: string;
		ItemInfo: PropInfo[];
		MoneyType?: number;
		Price?: number;
		FirstGift: PropInfo[];
		Gift: PropInfo[];
		ItemText?: string;
		Tag?: number;
		Days?: number;
		MaxPurchaseTime?: number;
		Deal?: number;
		Condition?: string;
		Openornot?: number;
		Sortid?: number;
		bodyIcon?: string;
		bgType?: number;
		icon2?: string;
		icon3?: string;
		tips?: string;
		flag?: number;
		normalPrice?: number;
		
	}

	export interface ShopInfoBuilder {
		new(): ShopInfo;
		decode(buffer: ArrayBuffer) : ShopInfo;
		//decode(buffer: NodeBuffer) : ShopInfo;
		//decode(buffer: ByteArrayBuffer) : ShopInfo;
		decode64(buffer: string) : ShopInfo;
		
	}
}


declare module pb {

	var ShopConfiReq: ShopConfiReq;
	export interface ShopConfiReq extends ProtoBufModel {
		new(obj?: any): ShopConfiReq;
		version?: number;
		
	}

	export interface ShopConfiReqBuilder {
		new(): ShopConfiReq;
		decode(buffer: ArrayBuffer) : ShopConfiReq;
		//decode(buffer: NodeBuffer) : ShopConfiReq;
		//decode(buffer: ByteArrayBuffer) : ShopConfiReq;
		decode64(buffer: string) : ShopConfiReq;
		
	}
}


declare module pb {

	var ShopConfiAck: ShopConfiAck;
	export interface ShopConfiAck extends ProtoBufModel {
		new(obj?: any): ShopConfiAck;
		infos: ShopInfo[];
		version?: number;
		
	}

	export interface ShopConfiAckBuilder {
		new(): ShopConfiAck;
		decode(buffer: ArrayBuffer) : ShopConfiAck;
		//decode(buffer: NodeBuffer) : ShopConfiAck;
		//decode(buffer: ByteArrayBuffer) : ShopConfiAck;
		decode64(buffer: string) : ShopConfiAck;
		
	}
}


declare module pb {

	var OpenFirstBuyRpt: OpenFirstBuyRpt;
	export interface OpenFirstBuyRpt extends ProtoBufModel {
		new(obj?: any): OpenFirstBuyRpt;
		
	}

	export interface OpenFirstBuyRptBuilder {
		new(): OpenFirstBuyRpt;
		decode(buffer: ArrayBuffer) : OpenFirstBuyRpt;
		//decode(buffer: NodeBuffer) : OpenFirstBuyRpt;
		//decode(buffer: ByteArrayBuffer) : OpenFirstBuyRpt;
		decode64(buffer: string) : OpenFirstBuyRpt;
		
	}
}


declare module pb {

	var LimitTimeBuyInfo: LimitTimeBuyInfo;
	export interface LimitTimeBuyInfo extends ProtoBufModel {
		new(obj?: any): LimitTimeBuyInfo;
		endTime?: number;
		GoodsId?: number;
		
	}

	export interface LimitTimeBuyInfoBuilder {
		new(): LimitTimeBuyInfo;
		decode(buffer: ArrayBuffer) : LimitTimeBuyInfo;
		//decode(buffer: NodeBuffer) : LimitTimeBuyInfo;
		//decode(buffer: ByteArrayBuffer) : LimitTimeBuyInfo;
		decode64(buffer: string) : LimitTimeBuyInfo;
		
	}
}


declare module pb {

	var LimitTimeBuyItemNtf: LimitTimeBuyItemNtf;
	export interface LimitTimeBuyItemNtf extends ProtoBufModel {
		new(obj?: any): LimitTimeBuyItemNtf;
		limitItems: LimitTimeBuyInfo[];
		
	}

	export interface LimitTimeBuyItemNtfBuilder {
		new(): LimitTimeBuyItemNtf;
		decode(buffer: ArrayBuffer) : LimitTimeBuyItemNtf;
		//decode(buffer: NodeBuffer) : LimitTimeBuyItemNtf;
		//decode(buffer: ByteArrayBuffer) : LimitTimeBuyItemNtf;
		decode64(buffer: string) : LimitTimeBuyItemNtf;
		
	}
}


declare module pb {

	var LimitTimeBuyItemReq: LimitTimeBuyItemReq;
	export interface LimitTimeBuyItemReq extends ProtoBufModel {
		new(obj?: any): LimitTimeBuyItemReq;
		index?: number;
		
	}

	export interface LimitTimeBuyItemReqBuilder {
		new(): LimitTimeBuyItemReq;
		decode(buffer: ArrayBuffer) : LimitTimeBuyItemReq;
		//decode(buffer: NodeBuffer) : LimitTimeBuyItemReq;
		//decode(buffer: ByteArrayBuffer) : LimitTimeBuyItemReq;
		decode64(buffer: string) : LimitTimeBuyItemReq;
		
	}
}


declare module pb {

	var LimitTimeBuyItemAck: LimitTimeBuyItemAck;
	export interface LimitTimeBuyItemAck extends ProtoBufModel {
		new(obj?: any): LimitTimeBuyItemAck;
		memberUpdate?: TeamMemberUpdate;
		dragonId?: number;
		dragons: DragonInfo[];
		showHoldDragonId?: number;
		
	}

	export interface LimitTimeBuyItemAckBuilder {
		new(): LimitTimeBuyItemAck;
		decode(buffer: ArrayBuffer) : LimitTimeBuyItemAck;
		//decode(buffer: NodeBuffer) : LimitTimeBuyItemAck;
		//decode(buffer: ByteArrayBuffer) : LimitTimeBuyItemAck;
		decode64(buffer: string) : LimitTimeBuyItemAck;
		
	}
}


declare module pb {

	var VipGiftRewardNtf: VipGiftRewardNtf;
	export interface VipGiftRewardNtf extends ProtoBufModel {
		new(obj?: any): VipGiftRewardNtf;
		lvls: number[];
		dailyLvls: number[];
		
	}

	export interface VipGiftRewardNtfBuilder {
		new(): VipGiftRewardNtf;
		decode(buffer: ArrayBuffer) : VipGiftRewardNtf;
		//decode(buffer: NodeBuffer) : VipGiftRewardNtf;
		//decode(buffer: ByteArrayBuffer) : VipGiftRewardNtf;
		decode64(buffer: string) : VipGiftRewardNtf;
		
	}
}


declare module pb {

	var VipGiftRewardReq: VipGiftRewardReq;
	export interface VipGiftRewardReq extends ProtoBufModel {
		new(obj?: any): VipGiftRewardReq;
		lvl?: number;
		
	}

	export interface VipGiftRewardReqBuilder {
		new(): VipGiftRewardReq;
		decode(buffer: ArrayBuffer) : VipGiftRewardReq;
		//decode(buffer: NodeBuffer) : VipGiftRewardReq;
		//decode(buffer: ByteArrayBuffer) : VipGiftRewardReq;
		decode64(buffer: string) : VipGiftRewardReq;
		
	}
}


declare module pb {

	var VipGiftRewardAck: VipGiftRewardAck;
	export interface VipGiftRewardAck extends ProtoBufModel {
		new(obj?: any): VipGiftRewardAck;
		changeItemInfo: ItemDeltaInfo[];
		lvls: number[];
		
	}

	export interface VipGiftRewardAckBuilder {
		new(): VipGiftRewardAck;
		decode(buffer: ArrayBuffer) : VipGiftRewardAck;
		//decode(buffer: NodeBuffer) : VipGiftRewardAck;
		//decode(buffer: ByteArrayBuffer) : VipGiftRewardAck;
		decode64(buffer: string) : VipGiftRewardAck;
		
	}
}


declare module pb {

	var VipGiftDailyRewardReq: VipGiftDailyRewardReq;
	export interface VipGiftDailyRewardReq extends ProtoBufModel {
		new(obj?: any): VipGiftDailyRewardReq;
		vipLvl?: number;
		
	}

	export interface VipGiftDailyRewardReqBuilder {
		new(): VipGiftDailyRewardReq;
		decode(buffer: ArrayBuffer) : VipGiftDailyRewardReq;
		//decode(buffer: NodeBuffer) : VipGiftDailyRewardReq;
		//decode(buffer: ByteArrayBuffer) : VipGiftDailyRewardReq;
		decode64(buffer: string) : VipGiftDailyRewardReq;
		
	}
}


declare module pb {

	var VipGiftDailyRewardAck: VipGiftDailyRewardAck;
	export interface VipGiftDailyRewardAck extends ProtoBufModel {
		new(obj?: any): VipGiftDailyRewardAck;
		changeItemInfo: ItemDeltaInfo[];
		
	}

	export interface VipGiftDailyRewardAckBuilder {
		new(): VipGiftDailyRewardAck;
		decode(buffer: ArrayBuffer) : VipGiftDailyRewardAck;
		//decode(buffer: NodeBuffer) : VipGiftDailyRewardAck;
		//decode(buffer: ByteArrayBuffer) : VipGiftDailyRewardAck;
		decode64(buffer: string) : VipGiftDailyRewardAck;
		
	}
}


declare module pb {
	export const enum Sex {
		MALE = 0,
		FEMALE = 1,
		
	}
}


declare module pb {
	export const enum AccountStatus {
		NORMAL = 0,
		LOCK = 1,
		LOCK_DEVICE = 2,
		TEST = 3,
		GM = 4,
		
	}
}


declare module pb {
	export const enum ServerStatus {
		GOOD = 1,
		NORMAL = 2,
		FULL = 3,
		HIDDEN = 4,
		MAINTENANCE = 5,
		
	}
}


declare module pb {
	export const enum Property {
		DEFENCE_DEGREE = 1010,
		HP = 1011,
		DPS = 1020,
		BASIC_DPS = 1021,
		CRITICAL_RATIO = 1030,
		DEFENCE = 1040,
		HURT_IMMUNITY = 1050,
		CRITICAL_DAMAGE = 1060,
		DEFENCE_IMMUNITY = 1070,
		ENHANCE_DAMAGE = 1080,
		
	}
}


declare module pb {
	export const enum ItemId {
		GOLD = 101,
		DIAMOND = 102,
		BLACK_GEM = 103,
		LIFE_GEM = 104,
		ANCIENT_GEN = 105,
		GLARY_CHIP = 106,
		BLACK_CHIP = 107,
		NEUTRAL_STONE = 108,
		FIRE_STONE = 109,
		WATER_STONE = 110,
		WOOD_STONE = 111,
		DRAGON_SEARCH_TICKET = 112,
		WATER_SEARCH_TICKET = 113,
		CHIP = 114,
		DRAGON_COMPOSE_TICKET = 115,
		VIP_EXP = 116,
		TICKET_DRAGON = 117,
		
	}
}


declare module pb {
	export const enum TeamType {
		NORMAL = 0,
		ELITE = 1,
		DAILY_BOSS_NEUTRAL = 101,
		DAILY_BOSS_WAR = 102,
		DAILY_BOSS_OCEAN = 103,
		DAILY_BOSS_NATURE = 104,
		LEGEND_BOSS = 201,
		UN_TEAM = 999,
		
	}
}


declare module pb {
	export const enum DragonBornType {
		EGG = 1,
		FUSE = 2,
		GIFT = 3,
		RESEARCH = 4,
		
	}
}


declare module pb {
	export const enum CopyType {
		ORDINARYSTAGE = 0,
		DAILYBOSS = 1,
		LEGENDBOSS = 2,
		ARENA = 3,
		
	}
}


declare module pb {
	export const enum CopyId {
		NEUTRAL = 1,
		WAR = 2,
		OCEAN = 3,
		NATURE = 4,
		BOSS_LEGEND = 5,
		BOSS_NEUTRAL = 6,
		BOSS_WAR = 7,
		BOSS_OCEAN = 8,
		BOSS_NATURE = 9,
		ARENA = 10,
		SATURN = 11,
		
	}
}


declare module pb {
	export const enum EggStatus {
		EXCEEDED = 1,
		NORMAL = 2,
		SPEEDING = 3,
		SuperPower = 4,
		
	}
}


declare module pb {
	export const enum AutoPlayState {
		Close = 0,
		Open = 1,
		
	}
}


declare module pb {
	export const enum AccelateType {
		NONE = 0,
		AD = 1,
		Share = 2,
		DIAMOND = 3,
		Super = 4,
		AutoPlay = 999,
		
	}
}


declare module pb {
	export const enum MailStatus {
		UnRead = 0,
		Read = 1,
		Read1 = 2,
		
	}
}


declare module pb {
	export const enum MialType {
		SHOP = 1,
		COMPENSATION_REWARD = 2,
		DAILY_LOGIN_REWARD_MORNING = 3,
		DAILY_LOGIN_REWARD_AFTERNOON = 4,
		DAILY_LOGIN_REWARD_EVENING = 5,
		RANK_BLUE_STAR = 6,
		RANK_MARS = 7,
		RANK_MERCURY = 8,
		RANK_VENUS = 9,
		DAILY_FIRST_BATTLE_UNREWARDED = 12,
		DAILY_TASK_BOX_UNREWARDED = 13,
		DAILY_TASK_UNREWARDED = 14,
		ARENA_DAILY_RANKING_REWARD = 15,
		ARENA_SEASON_FINAL_AWARD = 16,
		ARENA_BEST_SEASON_RECORD_UNREWARDED = 17,
		ARENA_SEASON_ACHIEVEMENT_UNREWARDED = 18,
		LUCKYTURNTABLE_UNREWARDED = 19,
		LEGENDBOSSRANK_AWARD = 20,
		ISSUE_PROPS = 99,
		
	}
}


declare module pb {
	export const enum ConditionGetType {
		Monolayer = 1,
		MonoPick = 2,
		Bilayer = 3,
		BiPick = 4,
		
	}
}


declare module pb {
	export const enum TaskType {
		Main = 1,
		Daily = 2,
		Achieve = 3,
		Loop = 4,
		
	}
}


declare module pb {
	export const enum LivenessAwardState {
		Got = 1,
		Not = 2,
		AdGot = 3,
		
	}
}


declare module pb {
	export const enum ConditionType {
		USER_COMMAND_LEVEL = 2,
		USER_VIP_EXP = 3,
		DIAMOND_HEROCOMPOSE = 9,
		DRAGON_HATCH = 10,
		DRAGON_FUSE = 11,
		DRAGON_HAS_TIMES = 12,
		HIGH_DRAGON_SLOT = 13,
		ARENA_BATTLE = 14,
		DRAGON_UPGRADE_TIMES = 16,
		DRAGON_QUALITY_HIGH_DRAGON_TIMES = 17,
		DRAGON_QUALITY_HIGH_DRAGON_ENHANCE = 18,
		GENEAGENT_LVUP = 19,
		GENEAGENT_BUY = 20,
		DRAGON_FUSE_TIMES = 21,
		DRAGON_UPGRADE_HIGH_TIMES = 22,
		USER_BREAK_STAGE = 23,
		USER_REGRESS = 24,
		DRAGON_ENHANCE = 25,
		LAB_ADD_BREAK = 26,
		USER_BREAK = 27,
		RESERACH_DRAGON = 28,
		USER_CHANGE_NAME = 29,
		DAILY_BOSS = 30,
		ESSENCE_UP = 31,
		USER_REGRESS_COPY_STAGE = 32,
		DAILY_ONLINE = 33,
		DAILY_WATCH_AD = 34,
		DAILY_FUSE_DRAGON = 35,
		DAILY_RESEARCH_DRAGON = 36,
		DAILY_DRAGON_LVUP = 37,
		DAILY_HIGH_DRAGON_LVUP = 38,
		DAILY_HIGH_DRAGON_ENHANCE = 39,
		DAILY_SHARE_GAME = 40,
		DAILY_DAILY_BOSS = 41,
		DAILY_REGRESS = 42,
		DAILY_GENEAGENT_LVUP = 43,
		DAILY_AD_ADD_AUTOPLAY = 44,
		DAILY_ARENNA_CHALLENGE = 45,
		LOOP_DRAGON_FUSE = 50,
		LOOP_HIGH_DRAGON_LVUP = 51,
		LOOP_BREAK_COPY = 52,
		LOOP_HIGH_DRAONG_ENHANCE = 53,
		LOOP_REGRESS_TIMES = 54,
		LOOP_DAILY_BOSS = 55,
		LOOP_GENEAGENT = 56,
		LOOP_BOX_TIMES = 57,
		LOOP_BREAKS_TIMES = 58,
		LOOP_LEGNED_BOSS_DAMAGE = 59,
		LOOP_FINISH = 60,
		FINISH_TASK = 61,
		LOOP_SPECIAL_DRAGON = 62,
		SUB_DRAGON_ID_HAS = 1201,
		SUB_DRAGON_UPGRADE = 1601,
		SUB_DRAGON_FUSE = 2101,
		SUB_DRAGON_HIGH = 2201,
		SUB_BREAK_COPY_STAGE = 2301,
		SUB_DRAGON_ENHANCE = 2501,
		SUB_REGRESS_STAGE = 3201,
		
	}
}


declare module pb {
	export const enum PlanetCopy {
		NEUTRAL = 1,
		WAR = 2,
		OCEAN = 3,
		NATURE = 4,
		SATURN = 11,
		
	}
}


declare module pb {
	export const enum ConditionSpecialDragon {
		LVL = 1,
		STAR = 2,
		STRENGTH = 3,
		QUALITY = 4,
		
	}
}


declare module pb {
	export const enum ConditionWeapon {
		STAR = 1,
		GRADE = 2,
		Id = 3,
		
	}
}


declare module pb {
	export const enum ConditionHero {
		STAR = 1,
		LEVEL = 2,
		QUALITY = 3,
		HEROID = 4,
		
	}
}


declare module pb {
	export const enum ConditionSmelt {
		COLOR = 1,
		
	}
}


declare module pb {
	export const enum ConditionGainEquip {
		COLOR = 1,
		
	}
}


declare module pb {
	export const enum ConditionEquiped {
		COLOR = 1,
		LEVEL = 2,
		STAR = 3,
		STRENGTHEN = 4,
		STAR_BREAK = 5,
		GEM = 6,
		
	}
}


declare module pb {
	export const enum ConditionFashion {
		LEVEL = 1,
		BREAK = 2,
		
	}
}


declare module pb {
	export const enum ConditionBelleHeart {
		ID = 1,
		
	}
}


declare module pb {
	export const enum ConditionGem {
		ID = 1,
		
	}
}


declare module pb {
	export const enum ConditionCellar {
		TYPE = 1,
		
	}
}


declare module pb {
	export const enum ConditionTravel {
		TYPE = 1,
		
	}
}


declare module pb {
	export const enum ConditionBelleEvent {
		ID = 1,
		
	}
}


declare module pb {
	export const enum ResearchByType {
		Free = 1,
		Gold = 2,
		Diamond = 3,
		
	}
}


declare module pb {
	export const enum ResearchDragonState {
		Wait = 1,
		Got = 2,
		
	}
}


declare module pb {
	export const enum TaskState {
		AdAward = 0,
		Done = 1,
		NotDone = 2,
		
	}
}


declare module pb {
	export const enum DragonTrer {
		Dragon_10001 = 10001,
		Dragon_10002 = 10002,
		Dragon_10003 = 10003,
		Dragon_10004 = 10004,
		Dragon_10005 = 10005,
		Dragon_10006 = 10006,
		Dragon_10007 = 10007,
		Dragon_10008 = 10008,
		Dragon_10009 = 10009,
		Dragon_10010 = 10010,
		Dragon_10011 = 10011,
		
	}
}


declare module pb {
	export const enum AutoPlayType {
		Hour = 1,
		Day = 2,
		
	}
}


declare module pb {
	export const enum SDKAward {
		SHORTCUT = 1,
		SHARE = 2,
		MINI_CLIENT = 3,
		BIND_PHONE = 4,
		FOLLOW = 5,
		IDENTIFY = 6,
		DESKTOP = 7,
		BAIDU_FOLLOW = 8,
		
	}
}


declare module pb {
	export const enum PerferenceType {
		ModuleOpen = 1,
		
	}
}


declare module pb {
	export const enum RewardType {
		NORMAL = 1,
		AD = 2,
		DIAMOND = 3,
		
	}
}


declare module pb {
	export const enum TicketBuyType {
		DIAMOND = 1,
		AD = 2,
		
	}
}


declare module pb {
	export const enum TicketType {
		DAILYBOSS = 1,
		LEGENDBOSS = 2,
		ARENA = 3,
		SEARCHDRAGON = 4,
		SEARCHJIYIN = 5,
		
	}
}


declare module pb {
	export const enum ArenaRecordStatus {
		NO_CHANGE = 0,
		UP = 1,
		DOWN = 2,
		
	}
}


declare module pb {
	export const enum FightResult {
		VICTORY = 1,
		DEFEAT = 2,
		
	}
}


declare module pb {
	export const enum ArenaGetType {
		ENTER = 1,
		REFRESH = 2,
		
	}
}


declare module pb {
	export const enum ShowTag {
		SHOW = 1,
		NOT = 0,
		
	}
}


declare module pb {
	export const enum ResearchBuyType {
		DIAMOND = 1,
		AD = 2,
		
	}
}


declare module pb {
	export const enum RegressType {
		Normal = 1,
		DIAMOND = 2,
		AD = 3,
		
	}
}


declare module pb {
	export const enum BreakType {
		Normal = 1,
		DIAMOND = 2,
		AD = 3,
		ToMaxDiamond = 4,
		
	}
}


declare module pb {
	export const enum OnlineAdType {
		Normal = 1,
		AD = 2,
		
	}
}


declare module pb {
	export const enum UserAvatarType {
		Game = 1,
		PT = 2,
		
	}
}


declare module pb {
	export const enum GiftOpenType {
		Shop = 1,
		
	}
}


declare module pb {
	export const enum ModuleOpen {
		LEGION = 1,
		RESEARCH = 2,
		PLANE = 3,
		FEATS = 4,
		EXPLORE = 5,
		BACKREWARD = 6,
		LOGINREWARD = 7,
		DAILYTASK = 8,
		SHOP = 9,
		RECAPTURE = 10,
		DAILYBOSS = 11,
		SPEEDUP = 12,
		AUTOPLAY = 13,
		BREAK = 14,
		LENGENDBOSS = 15,
		GODNESS = 16,
		COMBAT = 18,
		MARKET = 19,
		ESSENCE = 20,
		MAIL = 21,
		SOUND = 22,
		HELP = 23,
		SETTINGS = 24,
		TEAM1 = 25,
		TEAM2 = 26,
		TEAM3 = 27,
		TEAM4 = 28,
		TEAM5 = 29,
		TEAM6 = 30,
		BOXREWRAD = 31,
		ONLINEREWARD = 32,
		FIRSTRECHARGE = 33,
		ARENA = 34,
		ACTIVITY = 35,
		FRESHBOX = 36,
		HEROCOMPOSE = 37,
		ADSTAGEREWARD = 38,
		
	}
}


declare module pb {
	export const enum ResearchInstituStatus {
		Unknow = 0,
		NotOpen = 1,
		Lock = 2,
		Unlock = 3,
		Max = 4,
		
	}
}


declare module pb {
	export const enum ResearchInstituteStoneType {
		ELITESTONE = 0,
		NORMALSTONE = 1,
		Max = 2,
		
	}
}


declare module pb {
	export const enum ResearchInstituteFuncType {
		ADDNORAMDRAGONNUM = 1,
		ADDELITEDRAGONNUM = 2,
		ADDBREAKLIMIT = 3,
		DECBREAKTIME = 4,
		ADDBREAKSTAGE = 5,
		ADTIONALBREAKSTAGE = 6,
		DECDRAGONBORNTIME = 7,
		ADDDRAGONWAITNUM = 8,
		ONESTARDRAGONFUSE = 9,
		DIRECTTWODRAGONRATE = 10,
		AUTOPLAYSPEED = 11,
		AUTOFUSESPEED = 12,
		PASSSTARTSTAGE = 13,
		ADDOFFLINEREWARD = 14,
		ADDOFFLINEATKSPEED = 15,
		
	}
}


declare module pb {
	export const enum ItemsShowType {
		GIFT = 1,
		
	}
}


declare module pb {
	export const enum AutoPlayAddType {
		DIAMOND = 1,
		AD = 2,
		
	}
}


declare module pb {
	export const enum ItemType {
		Item_Money = 1,
		Item_Common = 2,
		Item_Geneagent = 3,
		Item_Dragon = 4,
		Item_DragonChip = 5,
		Item_RandBoxReward = 6,
		Item_AdSpeedup = 7,
		Item_DiamondSpeedup = 8,
		Item_AutoPlay_Hour = 9,
		Item_AutoPlay_Day = 10,
		Item_SuperSpeedup = 11,
		Item_GiftBox = 12,
		Item_DragonComposeTicket = 13,
		
	}
}


declare module pb {
	export const enum RepUserType {
		Last_login_Id = 0,
		User_Base_Data = 1,
		
	}
}


declare module pb {
	export const enum GiveupType {
		First_Fuse = 1,
		
	}
}


declare module pb {
	export const enum ActivityType {
		Month_Card = 1,
		Lucky_Turntable = 2,
		HeroCompose = 3,
		
	}
}


declare module pb {
	export const enum ActivityTimeType {
		DEFINETE = 1,
		Openserver_day = 2,
		
	}
}


declare module pb {
	export const enum MsgCodeType {
		LUCKYTURNTABLE = 48,
		DIAMONDHEROCOMPOSE = 1101,
		
	}
}


declare module pb {
	export const enum ReportType {
		Behavior = 1,
		Service = 2,
		Resource = 3,
		Server = 4,
		
	}
}


declare module pb {
	export const enum CopyRegressAwardFormula {
		Fir = 1,
		Sec = 2,
		
	}
}


declare module pb {
	export const enum AdExtraAwardType {
		SevenDay = 1,
		DailyTask = 2,
		NoviceGift = 3,
		
	}
}


declare module pb {
	export const enum SevenDayStatus {
		CanReward = 1,
		GotReward = 2,
		AdReward = 3,
		
	}
}


declare module pb {
	export const enum OnlineAdAwardType {
		LoginGap = 1,
		Stage = 2,
		
	}
}


declare module pb {
	export const enum ChatSysType {
		DiamondHeroCompose = 104,
		
	}
}


declare module pb {
	export const enum ItemColor {
		White = 1,
		Green = 2,
		Blue = 3,
		Purple = 4,
		Orange = 5,
		
	}
}


declare module pb {
	export const enum VipRight {
		ADBox = 1,
		AdOnlineAward = 2,
		DailyBossDAward = 3,
		SignDAward = 4,
		DailyTaskAward = 5,
		DailyBossCount = 6,
		DailyArenaCount = 7,
		ResearchDragonCount = 8,
		ResearchJiyinCount = 9,
		StageBackAward = 10,
		JackPotAward = 11,
		LegendaryBossCount = 12,
		
	}
}


declare module pb {
	export const enum ShopType {
		LimitTime = 2000,
		
	}
}


declare module pb {
	export const enum ChatType {
		WORLD = 1,
		
	}
}


declare module pb {
	export const enum GainBoxType {
		Normal = 1,
		AD = 2,
		DIAMOND = 3,
		
	}
}


declare module pb {
	export const enum DailyBossType {
		Peace = 1,
		War = 2,
		Seas = 3,
		Bush = 4,
		Legendary = 5,
		
	}
}


declare module pb {
	export const enum AdjutantType {
		UN_USE = 0,
		USED = 1,
		
	}
}



declare module pb {
	export interface MessageHandler {
		onRecvMessage?(cmdId: number, data: pb.ProtoBufModel, transId: number): boolean; // return true代表不需要路由到handler
		
		onErrorAck?(data: pb.ErrorAck, transId: number): void; // 8
		onLoginReq?(data: pb.LoginReq, transId: number): void; // 10
		onLoginAck?(data: pb.LoginAck, transId: number): void; // 11
		onGetServerListReq?(data: pb.GetServerListReq, transId: number): void; // 12
		onGetServerListAck?(data: pb.GetServerListAck, transId: number): void; // 13
		onGetServerAddrReq?(data: pb.GetServerAddrReq, transId: number): void; // 14
		onGetServerAddrAck?(data: pb.GetServerAddrAck, transId: number): void; // 15
		onReportReq?(data: pb.ReportReq, transId: number): void; // 16
		onReportAck?(data: pb.ReportAck, transId: number): void; // 17
		onEnterGameReq?(data: pb.EnterGameReq, transId: number): void; // 100
		onEnterGameAck?(data: pb.EnterGameAck, transId: number): void; // 101
		onCreateUserReq?(data: pb.CreateUserReq, transId: number): void; // 102
		onFirstEnterRpt?(data: pb.FirstEnterRpt, transId: number): void; // 103
		onGetGameDataRpt?(data: pb.GetGameDataRpt, transId: number): void; // 104
		onGetGameDataNtf?(data: pb.GetGameDataNtf, transId: number): void; // 105
		onCreateUserAck?(data: pb.CreateUserAck, transId: number): void; // 106
		onGetUserRandomNameReq?(data: pb.GetUserRandomNameReq, transId: number): void; // 107
		onGetUserRandomNameAck?(data: pb.GetUserRandomNameAck, transId: number): void; // 108
		onUserInfoNtf?(data: pb.UserInfoNtf, transId: number): void; // 111
		onItemInfosNtf?(data: pb.ItemInfosNtf, transId: number): void; // 112
		onDragonNtf?(data: pb.DragonNtf, transId: number): void; // 113
		onDragonBornNtf?(data: pb.DragonBornNtf, transId: number): void; // 114
		onItemsShowNtf?(data: pb.ItemsShowNtf, transId: number): void; // 115
		onTeamNtf?(data: pb.TeamNtf, transId: number): void; // 116
		onEggNtf?(data: pb.EggNtf, transId: number): void; // 117
		onStageNtf?(data: pb.StageNtf, transId: number): void; // 118
		onEggSpeedNtf?(data: pb.EggSpeedNtf, transId: number): void; // 119
		onMailNewNtf?(data: pb.MailNewNtf, transId: number): void; // 120
		onBreaksInfoNtf?(data: pb.BreaksInfoNtf, transId: number): void; // 121
		onConditionNtf?(data: pb.ConditionNtf, transId: number): void; // 122
		onTaskInfosNtf?(data: pb.TaskInfosNtf, transId: number): void; // 123
		onOfflineRewardNtf?(data: pb.OfflineRewardNtf, transId: number): void; // 124
		onSDKAwardNtf?(data: pb.SDKAwardNtf, transId: number): void; // 125
		onTicketNtf?(data: pb.TicketNtf, transId: number): void; // 126
		onResearchTimeNtf?(data: pb.ResearchTimeNtf, transId: number): void; // 127
		onShopBoughtInfoNtf?(data: pb.ShopBoughtInfoNtf, transId: number): void; // 128
		onSystemMsgNtf?(data: pb.SystemMsgNtf, transId: number): void; // 129
		onKickUserNtf?(data: pb.KickUserNtf, transId: number): void; // 130
		onTeamSizeNtf?(data: pb.TeamSizeNtf, transId: number): void; // 131
		onClientLogRpt?(data: pb.ClientLogRpt, transId: number): void; // 132
		onUserHitPointRpt?(data: pb.UserHitPointRpt, transId: number): void; // 133
		onTicketsInfoNtf?(data: pb.TicketsInfoNtf, transId: number): void; // 134
		onServerTimeNtf?(data: pb.ServerTimeNtf, transId: number): void; // 135
		onTaskUpdateNtf?(data: pb.TaskUpdateNtf, transId: number): void; // 136
		onUserRankGapNtf?(data: pb.UserRankGapNtf, transId: number): void; // 137
		onResearchTicketADCountNtf?(data: pb.ResearchTicketADCountNtf, transId: number): void; // 138
		onOnlineAdNtf?(data: pb.OnlineAdNtf, transId: number): void; // 139
		onLivenessNtf?(data: pb.LivenessNtf, transId: number): void; // 140
		onResearchInstFuncNtf?(data: pb.ResearchInstFuncNtf, transId: number): void; // 141
		onGeneagentNtf?(data: pb.GeneagentNtf, transId: number): void; // 142
		onDragonEnhanceCostNtf?(data: pb.DragonEnhanceCostNtf, transId: number): void; // 143
		onGiftOpenNtf?(data: pb.GiftOpenNtf, transId: number): void; // 144
		onSystemMsgNoticeNtf?(data: pb.SystemMsgNoticeNtf, transId: number): void; // 145
		onArenaEnemyNtf?(data: pb.ArenaEnemyNtf, transId: number): void; // 146
		onArenaInfoNtf?(data: pb.ArenaInfoNtf, transId: number): void; // 147
		onAutoPlayTimeAddRpt?(data: pb.AutoPlayTimeAddRpt, transId: number): void; // 148
		onUserVarNtf?(data: pb.UserVarNtf, transId: number): void; // 149
		onBoxRewardRefreshRpt?(data: pb.BoxRewardRefreshRpt, transId: number): void; // 155
		onOpenFirstBuyRpt?(data: pb.OpenFirstBuyRpt, transId: number): void; // 156
		onShopBoughtInfosNtf?(data: pb.ShopBoughtInfosNtf, transId: number): void; // 157
		onDragonLvlCfgNtf?(data: pb.DragonLvlCfgNtf, transId: number): void; // 158
		onDragonEnhanceCfgNtf?(data: pb.DragonEnhanceCfgNtf, transId: number): void; // 159
		onArenaNewRankNtf?(data: pb.ArenaNewRankNtf, transId: number): void; // 160
		onDragonPosRpt?(data: pb.DragonPosRpt, transId: number): void; // 201
		onEggBornRpt?(data: pb.EggBornRpt, transId: number): void; // 203
		onSDKAwardRpt?(data: pb.SDKAwardRpt, transId: number): void; // 205
		onUserPTProfileRpt?(data: pb.UserPTProfileRpt, transId: number): void; // 206
		onGiveupVarRpt?(data: pb.GiveupVarRpt, transId: number): void; // 207
		onEggSpeedReq?(data: pb.EggSpeedReq, transId: number): void; // 209
		onEggSpeedAck?(data: pb.EggSpeedAck, transId: number): void; // 210
		onAutoPlayReq?(data: pb.AutoPlayReq, transId: number): void; // 211
		onEnterCopyReq?(data: pb.EnterCopyReq, transId: number): void; // 221
		onEnterCopyAck?(data: pb.EnterCopyAck, transId: number): void; // 222
		onRegressReq?(data: pb.RegressReq, transId: number): void; // 223
		onRegressAck?(data: pb.RegressAck, transId: number): void; // 224
		onRegressRewardReq?(data: pb.RegressRewardReq, transId: number): void; // 225
		onRegressRewardAck?(data: pb.RegressRewardAck, transId: number): void; // 226
		onStageBreakReq?(data: pb.StageBreakReq, transId: number): void; // 227
		onStageBreakAck?(data: pb.StageBreakAck, transId: number): void; // 228
		onStageEndRpt?(data: pb.StageEndRpt, transId: number): void; // 229
		onStageEndNtf?(data: pb.StageEndNtf, transId: number): void; // 230
		onSetTeamReq?(data: pb.SetTeamReq, transId: number): void; // 251
		onSetTeamAck?(data: pb.SetTeamAck, transId: number): void; // 252
		onDragonLvlUpReq?(data: pb.DragonLvlUpReq, transId: number): void; // 253
		onDragonUpgradeReq?(data: pb.DragonUpgradeReq, transId: number): void; // 255
		onDragonUpgradeAck?(data: pb.DragonUpgradeAck, transId: number): void; // 256
		onDragonEnhanceReq?(data: pb.DragonEnhanceReq, transId: number): void; // 257
		onDragonEnhanceAck?(data: pb.DragonEnhanceAck, transId: number): void; // 258
		onDragonDetailReq?(data: pb.DragonDetailReq, transId: number): void; // 259
		onDragonDetailAck?(data: pb.DragonDetailAck, transId: number): void; // 260
		onDragonHatchReq?(data: pb.DragonHatchReq, transId: number): void; // 261
		onResearchDragonsReq?(data: pb.ResearchDragonsReq, transId: number): void; // 263
		onResearchDragonsAck?(data: pb.ResearchDragonsAck, transId: number): void; // 264
		onResearchBuyDragonReq?(data: pb.ResearchBuyDragonReq, transId: number): void; // 265
		onResearchBuyDragonAck?(data: pb.ResearchBuyDragonAck, transId: number): void; // 266
		onResearchRefreshDragonReq?(data: pb.ResearchRefreshDragonReq, transId: number): void; // 267
		onResearchRefreshDragonAck?(data: pb.ResearchRefreshDragonAck, transId: number): void; // 268
		onFinishTaskReq?(data: pb.FinishTaskReq, transId: number): void; // 269
		onFinishTaskAck?(data: pb.FinishTaskAck, transId: number): void; // 270
		onDragonFuseReq?(data: pb.DragonFuseReq, transId: number): void; // 271
		onDragonFuseAck?(data: pb.DragonFuseAck, transId: number): void; // 272
		onResearchBuyDragonTicketReq?(data: pb.ResearchBuyDragonTicketReq, transId: number): void; // 273
		onResearchBuyDragonTicketAck?(data: pb.ResearchBuyDragonTicketAck, transId: number): void; // 274
		onHeadPicChangeReq?(data: pb.HeadPicChangeReq, transId: number): void; // 275
		onHeadPicChangeAck?(data: pb.HeadPicChangeAck, transId: number): void; // 276
		onGetOnlineAdRewardReq?(data: pb.GetOnlineAdRewardReq, transId: number): void; // 277
		onGetOnlineAdRewardAck?(data: pb.GetOnlineAdRewardAck, transId: number): void; // 278
		onLivenessAwardReq?(data: pb.LivenessAwardReq, transId: number): void; // 279
		onLivenessAwardAck?(data: pb.LivenessAwardAck, transId: number): void; // 280
		onMailRedeemReq?(data: pb.MailRedeemReq, transId: number): void; // 281
		onMailRedeemAck?(data: pb.MailRedeemAck, transId: number): void; // 282
		onMailLoadReq?(data: pb.MailLoadReq, transId: number): void; // 283
		onMailLoadAck?(data: pb.MailLoadAck, transId: number): void; // 284
		onDragonPiecesCombineReq?(data: pb.DragonPiecesCombineReq, transId: number): void; // 285
		onDragonPiecesCombineAck?(data: pb.DragonPiecesCombineAck, transId: number): void; // 286
		onDragonFuseAppendReq?(data: pb.DragonFuseAppendReq, transId: number): void; // 287
		onDragonFuseAppendAck?(data: pb.DragonFuseAppendAck, transId: number): void; // 288
		onShopConfiReq?(data: pb.ShopConfiReq, transId: number): void; // 290
		onShopConfiAck?(data: pb.ShopConfiAck, transId: number): void; // 291
		onShopReq?(data: pb.ShopReq, transId: number): void; // 292
		onShopAck?(data: pb.ShopAck, transId: number): void; // 293
		onPurchaseItemReq?(data: pb.PurchaseItemReq, transId: number): void; // 294
		onPurchaseItemAck?(data: pb.PurchaseItemAck, transId: number): void; // 295
		onUserChangeNameReq?(data: pb.UserChangeNameReq, transId: number): void; // 296
		onUserChangeNameAck?(data: pb.UserChangeNameAck, transId: number): void; // 297
		onUserRankInfoReq?(data: pb.UserRankInfoReq, transId: number): void; // 298
		onUserRankInfoAck?(data: pb.UserRankInfoAck, transId: number): void; // 299
		onGetUserLevelRewardReq?(data: pb.GetUserLevelRewardReq, transId: number): void; // 302
		onGetUserLevelRewardAck?(data: pb.GetUserLevelRewardAck, transId: number): void; // 303
		onSevenDayReq?(data: pb.SevenDayReq, transId: number): void; // 304
		onSevenDayAck?(data: pb.SevenDayAck, transId: number): void; // 305
		onSevenDayRewardReq?(data: pb.SevenDayRewardReq, transId: number): void; // 306
		onSevenDayRewardAck?(data: pb.SevenDayRewardAck, transId: number): void; // 307
		onSevenDayNtf?(data: pb.SevenDayNtf, transId: number): void; // 308
		onBoxRewardInfoNtf?(data: pb.BoxRewardInfoNtf, transId: number): void; // 309
		onBoxRewardReq?(data: pb.BoxRewardReq, transId: number): void; // 310
		onBoxRewardAck?(data: pb.BoxRewardAck, transId: number): void; // 311
		onDailyBossInfoReq?(data: pb.DailyBossInfoReq, transId: number): void; // 314
		onDailyBossInfoAck?(data: pb.DailyBossInfoAck, transId: number): void; // 315
		onDailyBossEnterReq?(data: pb.DailyBossEnterReq, transId: number): void; // 316
		onDailyBossEnterAck?(data: pb.DailyBossEnterAck, transId: number): void; // 317
		onDailyBossBattleFinishReq?(data: pb.DailyBossBattleFinishReq, transId: number): void; // 318
		onDailyBossBattleFinishAck?(data: pb.DailyBossBattleFinishAck, transId: number): void; // 319
		onTicketBuyReq?(data: pb.TicketBuyReq, transId: number): void; // 320
		onTicketBuyAck?(data: pb.TicketBuyAck, transId: number): void; // 321
		onDailyBossBattleRewardReq?(data: pb.DailyBossBattleRewardReq, transId: number): void; // 322
		onDailyBossBattleRewardAck?(data: pb.DailyBossBattleRewardAck, transId: number): void; // 323
		onGetOnlineRewardReq?(data: pb.GetOnlineRewardReq, transId: number): void; // 324
		onGetOnlineRewardAck?(data: pb.GetOnlineRewardAck, transId: number): void; // 325
		onOnlineRewardNtf?(data: pb.OnlineRewardNtf, transId: number): void; // 326
		onPreferenceSetReq?(data: pb.PreferenceSetReq, transId: number): void; // 340
		onPreferenceSetAck?(data: pb.PreferenceSetAck, transId: number): void; // 341
		onPreferenceLoadReq?(data: pb.PreferenceLoadReq, transId: number): void; // 342
		onPreferenceLoadAck?(data: pb.PreferenceLoadAck, transId: number): void; // 343
		onResearchInstitueInfoReq?(data: pb.ResearchInstitueInfoReq, transId: number): void; // 344
		onResearchInstitueInfoAck?(data: pb.ResearchInstitueInfoAck, transId: number): void; // 345
		onUnlockResearchInstitueLevelupReq?(data: pb.UnlockResearchInstitueLevelupReq, transId: number): void; // 346
		onUnlockResearchInstitueLevelupAck?(data: pb.UnlockResearchInstitueLevelupAck, transId: number): void; // 347
		onEnterGeneagentReq?(data: pb.EnterGeneagentReq, transId: number): void; // 348
		onEnterGeneagentAck?(data: pb.EnterGeneagentAck, transId: number): void; // 349
		onEnterGeneagentBuyOneReq?(data: pb.EnterGeneagentBuyOneReq, transId: number): void; // 351
		onEnterGeneagentBuyOneAck?(data: pb.EnterGeneagentBuyOneAck, transId: number): void; // 352
		onEnterGeneagentBuyAllReq?(data: pb.EnterGeneagentBuyAllReq, transId: number): void; // 353
		onEnterGeneagentBuyAllAck?(data: pb.EnterGeneagentBuyAllAck, transId: number): void; // 354
		onEnterGeneagentResearchReq?(data: pb.EnterGeneagentResearchReq, transId: number): void; // 355
		onEnterGeneagentResearchAck?(data: pb.EnterGeneagentResearchAck, transId: number): void; // 356
		onOpenGeneagentReq?(data: pb.OpenGeneagentReq, transId: number): void; // 357
		onOpenGeneagentAck?(data: pb.OpenGeneagentAck, transId: number): void; // 358
		onLeveupGeneagentReq?(data: pb.LeveupGeneagentReq, transId: number): void; // 359
		onLeveupGeneagentAck?(data: pb.LeveupGeneagentAck, transId: number): void; // 360
		onBuyGeneagentTicketReq?(data: pb.BuyGeneagentTicketReq, transId: number): void; // 361
		onBuyGeneagentTicketAck?(data: pb.BuyGeneagentTicketAck, transId: number): void; // 362
		onArenaLoadReq?(data: pb.ArenaLoadReq, transId: number): void; // 363
		onArenaLoadAck?(data: pb.ArenaLoadAck, transId: number): void; // 364
		onArenaBeginReq?(data: pb.ArenaBeginReq, transId: number): void; // 365
		onArenaBeginAck?(data: pb.ArenaBeginAck, transId: number): void; // 366
		onArenaEndReq?(data: pb.ArenaEndReq, transId: number): void; // 367
		onArenaEndAck?(data: pb.ArenaEndAck, transId: number): void; // 368
		onArenaLoadRecordReq?(data: pb.ArenaLoadRecordReq, transId: number): void; // 369
		onArenaLoadRecordAck?(data: pb.ArenaLoadRecordAck, transId: number): void; // 370
		onArenaRankAwardReq?(data: pb.ArenaRankAwardReq, transId: number): void; // 371
		onArenaRankAwardAck?(data: pb.ArenaRankAwardAck, transId: number): void; // 372
		onArenaChallengeAwardReq?(data: pb.ArenaChallengeAwardReq, transId: number): void; // 373
		onArenaChallengeAwardAck?(data: pb.ArenaChallengeAwardAck, transId: number): void; // 374
		onArenaGetUserReq?(data: pb.ArenaGetUserReq, transId: number): void; // 375
		onArenaGetUserAck?(data: pb.ArenaGetUserAck, transId: number): void; // 376
		onArenaGetRankReq?(data: pb.ArenaGetRankReq, transId: number): void; // 377
		onArenaGetRankAck?(data: pb.ArenaGetRankAck, transId: number): void; // 378
		onArenaGetFormatReq?(data: pb.ArenaGetFormatReq, transId: number): void; // 379
		onArenaGetFormatAck?(data: pb.ArenaGetFormatAck, transId: number): void; // 380
		onRegressResetReq?(data: pb.RegressResetReq, transId: number): void; // 381
		onRegressResetAck?(data: pb.RegressResetAck, transId: number): void; // 382
		onArenaCheckReq?(data: pb.ArenaCheckReq, transId: number): void; // 383
		onArenaCheckAck?(data: pb.ArenaCheckAck, transId: number): void; // 384
		onActivityLoadReq?(data: pb.ActivityLoadReq, transId: number): void; // 400
		onActivityLoadAck?(data: pb.ActivityLoadAck, transId: number): void; // 401
		onActivityLuckyTurntableLoadReq?(data: pb.ActivityLuckyTurntableLoadReq, transId: number): void; // 410
		onActivityLuckyTurntableLoadAck?(data: pb.ActivityLuckyTurntableLoadAck, transId: number): void; // 411
		onActivityLuckyTurntableDoReq?(data: pb.ActivityLuckyTurntableDoReq, transId: number): void; // 412
		onActivityLuckyTurntableDoAck?(data: pb.ActivityLuckyTurntableDoAck, transId: number): void; // 413
		onActivityLuckyTurntableRecordNtf?(data: pb.ActivityLuckyTurntableRecordNtf, transId: number): void; // 414
		onMonthCardLoadReq?(data: pb.MonthCardLoadReq, transId: number): void; // 415
		onMonthCardLoadAck?(data: pb.MonthCardLoadAck, transId: number): void; // 416
		onMonthCardRedeemReq?(data: pb.MonthCardRedeemReq, transId: number): void; // 417
		onMonthCardRedeemAck?(data: pb.MonthCardRedeemAck, transId: number): void; // 418
		onMonthCardChangedNtf?(data: pb.MonthCardChangedNtf, transId: number): void; // 419
		onMonthCardBuyReq?(data: pb.MonthCardBuyReq, transId: number): void; // 420
		onMonthCardBuyAck?(data: pb.MonthCardBuyAck, transId: number): void; // 421
		onActLuckyTurntableExtraAwardReq?(data: pb.ActLuckyTurntableExtraAwardReq, transId: number): void; // 422
		onActLuckyTurntableExtraAwardAck?(data: pb.ActLuckyTurntableExtraAwardAck, transId: number): void; // 423
		onGetCopyStartStageReq?(data: pb.GetCopyStartStageReq, transId: number): void; // 500
		onGetCopyStartStageAck?(data: pb.GetCopyStartStageAck, transId: number): void; // 501
		onGeneralDragonCfgReq?(data: pb.GeneralDragonCfgReq, transId: number): void; // 502
		onGeneralDragonCfgAck?(data: pb.GeneralDragonCfgAck, transId: number): void; // 503
		onDragonConfigReq?(data: pb.DragonConfigReq, transId: number): void; // 504
		onDragonConfigAck?(data: pb.DragonConfigAck, transId: number): void; // 505
		onPreRecoverDragonsReq?(data: pb.PreRecoverDragonsReq, transId: number): void; // 506
		onPreRecoverDragonsAck?(data: pb.PreRecoverDragonsAck, transId: number): void; // 507
		onRecoverDragonsReq?(data: pb.RecoverDragonsReq, transId: number): void; // 508
		onRecoverDragonsAck?(data: pb.RecoverDragonsAck, transId: number): void; // 509
		onAdExtraAwardReq?(data: pb.AdExtraAwardReq, transId: number): void; // 510
		onAdExtraAwardAck?(data: pb.AdExtraAwardAck, transId: number): void; // 511
		onNoviceGiftNtf?(data: pb.NoviceGiftNtf, transId: number): void; // 515
		onNoviceGiftAwardReq?(data: pb.NoviceGiftAwardReq, transId: number): void; // 516
		onNoviceGiftAwardAck?(data: pb.NoviceGiftAwardAck, transId: number): void; // 517
		onVipGiftRewardNtf?(data: pb.VipGiftRewardNtf, transId: number): void; // 520
		onVipGiftRewardReq?(data: pb.VipGiftRewardReq, transId: number): void; // 521
		onVipGiftRewardAck?(data: pb.VipGiftRewardAck, transId: number): void; // 522
		onMailReadReq?(data: pb.MailReadReq, transId: number): void; // 523
		onMailReadAck?(data: pb.MailReadAck, transId: number): void; // 524
		onMailDeleteReq?(data: pb.MailDeleteReq, transId: number): void; // 525
		onMailDeleteAck?(data: pb.MailDeleteAck, transId: number): void; // 526
		onActivityHeroComposeReq?(data: pb.ActivityHeroComposeReq, transId: number): void; // 530
		onActivityHeroComposeAck?(data: pb.ActivityHeroComposeAck, transId: number): void; // 531
		onSevenDayNtfs?(data: pb.SevenDayNtfs, transId: number): void; // 532
		onActivityHeroComposeLoadReq?(data: pb.ActivityHeroComposeLoadReq, transId: number): void; // 533
		onActivityHeroComposeLoadAck?(data: pb.ActivityHeroComposeLoadAck, transId: number): void; // 534
		onOnlineADRewardNtf?(data: pb.OnlineADRewardNtf, transId: number): void; // 540
		onLimitTimeBuyItemNtf?(data: pb.LimitTimeBuyItemNtf, transId: number): void; // 550
		onLimitTimeBuyItemReq?(data: pb.LimitTimeBuyItemReq, transId: number): void; // 551
		onLimitTimeBuyItemAck?(data: pb.LimitTimeBuyItemAck, transId: number): void; // 552
		onVipGiftDailyRewardReq?(data: pb.VipGiftDailyRewardReq, transId: number): void; // 560
		onVipGiftDailyRewardAck?(data: pb.VipGiftDailyRewardAck, transId: number): void; // 561
		onRefreshTicketRpt?(data: pb.RefreshTicketRpt, transId: number): void; // 562
		onGainBoxReq?(data: pb.GainBoxReq, transId: number): void; // 563
		onGainBoxAck?(data: pb.GainBoxAck, transId: number): void; // 564
		onStageAwardBoxNtf?(data: pb.StageAwardBoxNtf, transId: number): void; // 565
		onChatSendReq?(data: pb.ChatSendReq, transId: number): void; // 600
		onChatSendAck?(data: pb.ChatSendAck, transId: number): void; // 601
		onChatLoadReq?(data: pb.ChatLoadReq, transId: number): void; // 602
		onChatLoadAck?(data: pb.ChatLoadAck, transId: number): void; // 603
		onChatMessageNtf?(data: pb.ChatMessageNtf, transId: number): void; // 604
		onLegendaryBossInfoReq?(data: pb.LegendaryBossInfoReq, transId: number): void; // 620
		onLegendaryBossInfoAck?(data: pb.LegendaryBossInfoAck, transId: number): void; // 621
		onLegendaryBossEnterReq?(data: pb.LegendaryBossEnterReq, transId: number): void; // 622
		onLegendaryBossEnterAck?(data: pb.LegendaryBossEnterAck, transId: number): void; // 623
		onLegendaryBossBattleFinishReq?(data: pb.LegendaryBossBattleFinishReq, transId: number): void; // 624
		onLegendaryBossBattleFinishAck?(data: pb.LegendaryBossBattleFinishAck, transId: number): void; // 625
		onLegendaryBossBattleRewardReq?(data: pb.LegendaryBossBattleRewardReq, transId: number): void; // 626
		onLegendaryBossBattleRewardAck?(data: pb.LegendaryBossBattleRewardAck, transId: number): void; // 627
		onLegendrayBossNextInfoReq?(data: pb.LegendrayBossNextInfoReq, transId: number): void; // 628
		onLegendrayBossNextInfoAck?(data: pb.LegendrayBossNextInfoAck, transId: number): void; // 629
		onAdjutantLvlUpReq?(data: pb.AdjutantLvlUpReq, transId: number): void; // 630
		onAdjutantLvlUpAck?(data: pb.AdjutantLvlUpAck, transId: number): void; // 631
		onSetAdjutantReq?(data: pb.SetAdjutantReq, transId: number): void; // 632
		onSetAdjutantAck?(data: pb.SetAdjutantAck, transId: number): void; // 633
		onUnlockAdjutantReq?(data: pb.UnlockAdjutantReq, transId: number): void; // 634
		onUnlockAdjutantAck?(data: pb.UnlockAdjutantAck, transId: number): void; // 635
		onAdjutantsNtf?(data: pb.AdjutantsNtf, transId: number): void; // 636
		onLegendaryBossDamageRankReq?(data: pb.LegendaryBossDamageRankReq, transId: number): void; // 650
		onLegendaryBossDamageRankAck?(data: pb.LegendaryBossDamageRankAck, transId: number): void; // 651
		onChatRpt?(data: pb.ChatRpt, transId: number): void; // 1000
		onComposeDataAck?(data: pb.ComposeDataAck, transId: number): void; // 7999
	}
}
